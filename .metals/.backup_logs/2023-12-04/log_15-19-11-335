2023.11.23 10:21:56 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.23 10:21:57 INFO  time: initialize in 0.21s
2023.11.23 10:22:02 WARN  Build server is not auto-connectable.
2023.11.23 10:22:02 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.23 10:22:20 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.11.23 10:22:26 INFO  time: code lens generation in 23s
nov. 23, 2023 10:24:26 A. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.11.23 10:45:05 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.11.23 11:04:19 INFO  Shutting down server
2023.11.23 11:04:19 INFO  shutting down Metals
2023.11.23 11:04:19 INFO  Exiting server
2023.11.28 22:53:32 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.28 22:53:32 INFO  time: initialize in 0.11s
2023.11.28 22:53:34 WARN  Build server is not auto-connectable.
2023.11.28 22:53:34 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.28 22:53:34 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\common\package.scala
2023.11.28 22:53:55 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\common\package.scala. Using presentation compiler with project's scala-library version: 3.3.1
nov. 28, 2023 10:54:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10
2023.11.28 22:54:08 INFO  time: code lens generation in 3.02s
2023.11.28 22:54:08 INFO  time: code lens generation in 12s
2023.11.28 23:07:07 INFO  Shutting down server
2023.11.28 23:07:07 INFO  shutting down Metals
2023.11.28 23:07:07 ERROR Unexpected error initializing server: 
org.eclipse.lsp4j.jsonrpc.ResponseErrorException: Request window/showMessageRequest failed with message: Canceled
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponse(RemoteEndpoint.java:209)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:193)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:07:07 INFO  Exiting server
2023.11.28 23:08:32 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.28 23:08:32 INFO  time: initialize in 0.2s
2023.11.28 23:08:35 WARN  Build server is not auto-connectable.
2023.11.28 23:08:35 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\common\package.scala
2023.11.28 23:08:35 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.28 23:08:53 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.11.28 23:08:54 INFO  running 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\gradlew.bat --stacktrace --console=plain --init-script C:\Users\ALEJAN~1\AppData\Local\Temp\metals17735583937636983458\init-script.gradle bloopInstall'
nov. 28, 2023 11:08:54 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.11.28 23:09:03 INFO  time: code lens generation in 26s
2023.11.28 23:09:10 INFO  > Task :configureBloopInstall
2023.11.28 23:09:10 INFO  > Task :bloopInstall
2023.11.28 23:09:10 INFO  > Task :app:configureBloopInstall
2023.11.28 23:09:13 INFO  > Task :app:bloopInstall
2023.11.28 23:09:13 INFO  
2023.11.28 23:09:13 INFO  Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.
2023.11.28 23:09:13 INFO  
2023.11.28 23:09:13 INFO  You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.
2023.11.28 23:09:13 INFO  
2023.11.28 23:09:13 INFO  For more on this, please refer to https://docs.gradle.org/8.3/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.
2023.11.28 23:09:13 INFO  
2023.11.28 23:09:13 INFO  BUILD SUCCESSFUL in 12s
2023.11.28 23:09:13 INFO  4 actionable tasks: 4 executed
2023.11.28 23:09:13 INFO  time: ran 'gradle bloopInstall' in 16s
2023.11.28 23:09:13 INFO  Attempting to connect to the build server...
2023.11.28 23:09:13 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.28 23:09:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.28 23:09:18 INFO  time: Connected to build server in 5.34s
2023.11.28 23:09:18 INFO  Connected to Build server: Bloop v1.5.11
2023.11.28 23:09:18 INFO  time: Imported build in 0.25s
2023.11.28 23:09:27 INFO  time: indexed workspace in 8.64s
2023.11.28 23:09:29 INFO  compiling app (2 scala sources)
2023.11.28 23:10:06 INFO  compiling app-test (1 scala source)
2023.11.28 23:10:06 INFO  time: compiled app in 38s
2023.11.28 23:10:09 INFO  time: compiled app-test in 2.93s
2023.11.28 23:11:23 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
    // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:32 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
    // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:33 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
    // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:34 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
  // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:35 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
  }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:37 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
  // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

nov. 28, 2023 11:11:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 73
2023.11.28 23:11:50 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
  // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
 // )
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:11:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:49: error: illegal character '\u00a0'
  }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:12:07 INFO  compiling app (1 scala source)
2023.11.28 23:12:07 INFO  time: compiled app in 0.51s
2023.11.28 23:12:43 INFO  compiling app (1 scala source)
2023.11.28 23:12:43 INFO  time: compiled app in 0.46s
2023.11.28 23:13:00 INFO  compiling app (1 scala source)
2023.11.28 23:13:01 INFO  time: compiled app in 1.76s
nov. 28, 2023 11:13:36 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.11.28 23:18:24 INFO  compiling app (1 scala source)
2023.11.28 23:18:24 INFO  time: compiled app in 0.71s
nov. 28, 2023 11:18:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 282
2023.11.28 23:19:03 INFO  compiling app (1 scala source)
2023.11.28 23:19:03 INFO  time: compiled app in 0.19s
nov. 28, 2023 11:19:10 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
nov. 28, 2023 11:19:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-11-28\r_compiler-error_(app)_23-19-10-511.md
2023.11.28 23:19:18 INFO  compiling app (1 scala source)
nov. 28, 2023 11:19:19 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 413
2023.11.28 23:19:20 INFO  time: compiled app in 1.21s
2023.11.28 23:19:31 INFO  compiling app (1 scala source)
2023.11.28 23:19:31 INFO  time: compiled app in 0.93s
nov. 28, 2023 11:23:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 483
2023.11.28 23:31:08 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:43: error: illegal character '\u00a0'
  }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:31:48 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:43: error: illegal character '\u00b4'
    ´ti
    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

nov. 28, 2023 11:31:53 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 708
2023.11.28 23:32:10 INFO  compiling app (1 scala source)
2023.11.28 23:32:12 INFO  time: compiled app in 1.47s
2023.11.28 23:32:12 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 22m 53.646s)
2023.11.28 23:32:12 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.28 23:32:13 INFO  compiling app (1 scala source)
2023.11.28 23:32:12 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.28 23:32:13 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.28 23:32:14 INFO  time: compiled app in 1.57s
2023.11.28 23:32:14 INFO  Loaded expression compiler in 1 second
2023.11.28 23:32:14 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.28 23:32:14 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.28 23:32:20 INFO  Loaded all sources and classes in 5 seconds
2023.11.28 23:32:20 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63155 .
2023.11.28 23:32:20 INFO  Attaching to debuggee VM succeeded.
2023.11.28 23:32:50 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:32:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 28, 2023 11:32:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.28 23:32:50 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:32:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.28 23:32:50 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:32:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.28 23:32:50 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:32:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.28 23:32:52 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:32:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

2023.11.28 23:32:55 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.28 23:32:55 INFO  Closing debug server tcp://0.0.0.0:63152
2023.11.28 23:35:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:35:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.28 23:35:12 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 28, 2023 11:35:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

nov. 28, 2023 11:35:13 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 28, 2023 11:38:56 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.28 23:45:25 INFO  compiling app (1 scala source)
2023.11.28 23:45:25 INFO  time: compiled app in 0.86s
nov. 28, 2023 11:45:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 885
2023.11.28 23:45:53 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:43: error: Invalid literal number
    println(vectorAlAzar(3,5s))
                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.checkNoLetter(LegacyScanner.scala:820)
	at scala.meta.internal.tokenizers.LegacyScanner.restOfUncertainToken$1(LegacyScanner.scala:864)
	at scala.meta.internal.tokenizers.LegacyScanner.getNumber(LegacyScanner.scala:872)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:335)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.28 23:45:54 INFO  compiling app (1 scala source)
2023.11.28 23:45:55 INFO  time: compiled app in 1.01s
2023.11.28 23:46:17 INFO  compiling app (1 scala source)
2023.11.28 23:46:17 INFO  time: compiled app in 0.76s
2023.11.28 23:46:38 INFO  compiling app (1 scala source)
2023.11.28 23:46:38 INFO  time: compiled app in 0.69s
2023.11.28 23:47:23 INFO  compiling app (1 scala source)
2023.11.28 23:47:23 INFO  time: compiled app in 0.77s
2023.11.28 23:48:02 INFO  compiling app (1 scala source)
2023.11.28 23:48:02 INFO  time: compiled app in 0.74s
2023.11.28 23:57:32 INFO  compiling app (1 scala source)
2023.11.28 23:57:33 INFO  time: compiled app in 1.06s
nov. 28, 2023 11:57:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1121
2023.11.28 23:58:39 INFO  compiling app (1 scala source)
2023.11.28 23:58:39 INFO  time: compiled app in 0.75s
2023.11.29 00:02:22 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 53m 3.521s)
2023.11.29 00:02:22 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:02:22 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:02:22 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:02:22 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:02:22 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:02:22 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:02:25 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:02:25 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63518 .
2023.11.29 00:02:25 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:02:44 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:02:44 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:02:44 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:02:44 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:02:44 INFO  Loaded expression compiler in 5 milliseconds
2023.11.29 00:02:44 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:02:44 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:02:45 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:02:45 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63525 .
2023.11.29 00:02:45 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:03:21 INFO  Closing debug server tcp://0.0.0.0:63523
2023.11.29 00:03:21 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:03:32 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 54m 13.732s)
2023.11.29 00:03:32 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
nov. 29, 2023 12:03:32 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 00:03:32 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:03:32 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:03:32 INFO  Loaded expression compiler in 5 milliseconds
2023.11.29 00:03:32 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:03:32 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:03:34 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:03:34 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63541 .
2023.11.29 00:03:34 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:04:08 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:04:08 INFO  Closing debug server tcp://0.0.0.0:63538
2023.11.29 00:04:53 INFO  compiling app (1 scala source)
2023.11.29 00:04:54 INFO  time: compiled app in 1.03s
nov. 29, 2023 12:05:02 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1243
nov. 29, 2023 12:05:06 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1245
2023.11.29 00:05:06 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 55m 48.255s)
nov. 29, 2023 12:05:06 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 00:05:06 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:05:06 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:05:07 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:05:06 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:05:06 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:05:06 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:05:08 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:05:08 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63673 .
2023.11.29 00:05:08 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:11:42 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:11:42 INFO  Closing debug server tcp://0.0.0.0:63670
2023.11.29 00:12:19 INFO  compiling app (1 scala source)
2023.11.29 00:12:19 INFO  time: compiled app in 0.81s
2023.11.29 00:12:33 INFO  compiling app (1 scala source)
2023.11.29 00:12:33 INFO  time: compiled app in 0.69s
nov. 29, 2023 12:12:40 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 00:12:40 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:12:40 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:12:40 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:12:40 INFO  Loaded expression compiler in 2 milliseconds
2023.11.29 00:12:40 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:12:40 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:12:42 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:12:42 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63759 .
2023.11.29 00:12:42 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:17:20 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:17:20 INFO  Closing debug server tcp://0.0.0.0:63757
2023.11.29 00:23:16 INFO  compiling app (1 scala source)
2023.11.29 00:23:16 INFO  time: compiled app in 0.79s
2023.11.29 00:23:45 INFO  compiling app (1 scala source)
2023.11.29 00:23:45 INFO  time: compiled app in 0.98s
2023.11.29 00:24:26 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 15m 8.166s)
2023.11.29 00:24:26 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:24:26 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:24:27 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:24:26 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:24:26 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:24:26 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:24:29 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:24:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64064 .
2023.11.29 00:24:29 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:24:40 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:24:40 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:24:40 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:24:40 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:24:40 INFO  Loaded expression compiler in 3 milliseconds
2023.11.29 00:24:40 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:24:40 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:24:42 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:24:42 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64075 .
2023.11.29 00:24:42 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:27:04 INFO  Closing debug server tcp://0.0.0.0:64073
2023.11.29 00:27:04 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 12:27:23 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1492
nov. 29, 2023 12:35:02 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1536
2023.11.29 00:39:39 INFO  Disconnecting from Bloop session...
2023.11.29 00:39:41 ERROR timeout: build server 'bloop' during shutdown
2023.11.29 00:39:41 INFO  Attempting to connect to the build server...
2023.11.29 00:39:41 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:39:47 INFO  Attempting to connect to the build server...
2023.11.29 00:39:47 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:39:49 INFO  Attempting to connect to the build server...
2023.11.29 00:39:49 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:39:50 INFO  Attempting to connect to the build server...
2023.11.29 00:39:50 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:39:50 INFO  Attempting to connect to the build server...
2023.11.29 00:39:50 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:39:50 INFO  Attempting to connect to the build server...
2023.11.29 00:39:50 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
nov. 29, 2023 12:40:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1635
2023.11.29 00:40:32 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:32 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 25420'...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:32 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:32 ERROR > 
2023.11.29 00:40:32 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:32 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 00:40:39 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:39 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 17394'...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:39 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:39 ERROR > 
2023.11.29 00:40:39 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:39 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 00:40:41 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:41 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 24816'...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:41 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:41 ERROR > 
2023.11.29 00:40:41 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:41 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 00:40:42 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:42 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 28361'...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:42 ERROR > 
2023.11.29 00:40:42 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:42 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 00:40:42 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:42 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 16767'...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:42 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:42 ERROR > 
2023.11.29 00:40:42 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:42 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

nov. 29, 2023 12:40:43 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1692
2023.11.29 00:40:43 ERROR Starting the bsp launcher for bloop...
2023.11.29 00:40:43 ERROR Opening a bsp server connection with 'bsp --protocol tcp --port 33417'...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR Waiting for the bsp connection to come up...
2023.11.29 00:40:43 ERROR error: Giving up on waiting for a connection, printing embedded bloop logs:
2023.11.29 00:40:43 ERROR > 
2023.11.29 00:40:43 ERROR error: The launcher failed to establish a bsp connection, aborting...
2023.11.29 00:40:42 ERROR Failed to connect with build server, no functionality will work.
java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection
	at bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)
	at bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)
	at scala.meta.internal.metals.BloopServers$$anon$2.run(BloopServers.scala:500)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

nov. 29, 2023 12:40:48 A. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: offset 1493, count -1, length 2119
2023.11.29 00:41:09 INFO  Shutting down server
2023.11.29 00:41:09 INFO  shutting down Metals
nov. 29, 2023 12:41:09 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$2(BuildServerConnection.scala:361)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:210)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$1(BuildServerConnection.scala:361)
	at scala.meta.internal.metals.Cancelable$$anon$1.cancel(Cancelable.scala:18)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:301)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1(BspSession.scala:34)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1$adapted(BspSession.scala:34)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.bsp.BspSession.cancel(BspSession.scala:34)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.MetalsLspService.cancel(MetalsLspService.scala:157)
	at scala.meta.internal.metals.MetalsLspService.onShutdown(MetalsLspService.scala:927)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2(WorkspaceLspService.scala:1170)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2$adapted(WorkspaceLspService.scala:1170)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.WorkspaceLspService.shutdown(WorkspaceLspService.scala:1170)
	at scala.meta.metals.MetalsLanguageServer.shutdown(MetalsLanguageServer.scala:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 45 more

2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Cancelling compilation on Bloop server
2023.11.29 00:41:09 INFO  Exiting server
2023.11.29 00:41:09 INFO  Failed to run request with params DebugSessionAddress
2023.11.29 00:41:09 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2478)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:199)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:199)
	at scala.util.Success.foreach(Try.scala:260)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 00:41:51 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.29 00:41:51 INFO  time: initialize in 0.26s
2023.11.29 00:41:56 INFO  Attempting to connect to the build server...
2023.11.29 00:41:56 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 00:41:57 INFO  skipping build import with status 'Installed'
2023.11.29 00:41:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.29 00:41:59 INFO  time: Connected to build server in 2.96s
2023.11.29 00:41:59 INFO  Connected to Build server: Bloop v1.5.11
2023.11.29 00:42:02 INFO  time: Imported build in 2.68s
2023.11.29 00:42:17 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.11.29 00:42:18 INFO  time: indexed workspace in 16s
2023.11.29 00:42:27 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala. Using presentation compiler with project's scala-library version: 2.13.11
2023.11.29 00:42:59 INFO  compiling app (1 scala source)
2023.11.29 00:43:01 INFO  time: compiled app in 2.17s
2023.11.29 00:43:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:43:06 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:43:06 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:43:06 INFO  Loaded expression compiler in 3 milliseconds
2023.11.29 00:43:06 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:43:06 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:43:10 INFO  Loaded all sources and classes in 4 seconds
2023.11.29 00:43:10 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64441 .
2023.11.29 00:43:10 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:43:27 INFO  Closing debug server tcp://0.0.0.0:64438
2023.11.29 00:43:27 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 12:43:27 A. M. org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer fireError
SEVERE: java.net.SocketException: Socket closed
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.net.SocketException: Socket closed
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.debug.SocketEndpoint.consume(SocketEndpoint.scala:22)
	at scala.meta.internal.metals.debug.MessageIdAdapter.consume(MessageIdAdapter.scala:43)
	at scala.meta.internal.metals.debug.ServerAdapter.send(ServerAdapter.scala:30)
	at scala.meta.internal.metals.debug.DebugProxy.$anonfun$handleClientMessage$1(DebugProxy.scala:158)
	at scala.meta.internal.metals.debug.MessageIdAdapter.$anonfun$listen$1(MessageIdAdapter.scala:57)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at scala.meta.internal.metals.debug.SocketEndpoint.listen(SocketEndpoint.scala:26)
	at scala.meta.internal.metals.debug.MessageIdAdapter.listen(MessageIdAdapter.scala:47)
	at scala.meta.internal.metals.debug.DebugProxy.$anonfun$listenToClient$1(DebugProxy.scala:69)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Socket closed
	at java.base/sun.nio.ch.NioSocketImpl.ensureOpenAndConnected(NioSocketImpl.java:165)
	at java.base/sun.nio.ch.NioSocketImpl.beginWrite(NioSocketImpl.java:366)
	at java.base/sun.nio.ch.NioSocketImpl.implWrite(NioSocketImpl.java:411)
	at java.base/sun.nio.ch.NioSocketImpl.write(NioSocketImpl.java:440)
	at java.base/sun.nio.ch.NioSocketImpl$2.write(NioSocketImpl.java:826)
	at java.base/java.net.Socket$SocketOutputStream.write(Socket.java:1035)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 16 more

2023.11.29 00:43:48 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1m 49.999s)
2023.11.29 00:43:48 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:43:48 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:43:49 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:43:48 INFO  Loaded expression compiler in 5 milliseconds
2023.11.29 00:43:48 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:43:48 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:43:50 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:43:50 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64460 .
2023.11.29 00:43:50 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:44:25 INFO  Closing debug server tcp://0.0.0.0:64456
2023.11.29 00:44:25 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:44:59 INFO  compiling app (1 scala source)
2023.11.29 00:44:59 INFO  time: compiled app in 0.94s
2023.11.29 00:45:02 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3m 3.847s)
2023.11.29 00:45:02 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:45:02 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:45:02 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:45:02 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:45:02 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:45:02 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:45:05 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:45:05 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64493 .
2023.11.29 00:45:05 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:45:48 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:45:48 INFO  Closing debug server tcp://0.0.0.0:64489
2023.11.29 00:45:54 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3m 56.485s)
2023.11.29 00:45:55 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:45:55 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:45:55 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:45:54 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:45:54 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:45:54 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:45:57 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:45:57 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64509 .
2023.11.29 00:45:57 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:46:26 INFO  Closing debug server tcp://0.0.0.0:64505
2023.11.29 00:46:26 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:46:41 INFO  compiling app (1 scala source)
2023.11.29 00:46:41 INFO  time: compiled app in 0.85s
2023.11.29 00:47:06 INFO  compiling app (1 scala source)
2023.11.29 00:47:06 INFO  time: compiled app in 0.76s
2023.11.29 00:47:16 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5m 18.055s)
2023.11.29 00:47:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:47:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:47:16 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:47:16 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:47:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:18 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:47:18 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64532 .
2023.11.29 00:47:18 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:47:33 INFO  Closing debug server tcp://0.0.0.0:64529
2023.11.29 00:47:33 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 12:47:38 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

nov. 29, 2023 12:47:41 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 00:47:44 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5m 46.15s)
2023.11.29 00:47:44 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:47:44 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:47:45 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:47:44 INFO  Loaded expression compiler in 4 milliseconds
2023.11.29 00:47:44 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:44 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:46 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:47:46 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64547 .
2023.11.29 00:47:46 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:47:54 INFO  Closing debug server tcp://0.0.0.0:64543
2023.11.29 00:47:54 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:47:56 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5m 57.827s)
2023.11.29 00:47:56 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:47:56 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:47:56 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:47:56 INFO  Loaded expression compiler in 2 milliseconds
2023.11.29 00:47:56 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:56 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:47:58 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:47:58 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64558 .
2023.11.29 00:47:58 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:48:15 INFO  Closing debug server tcp://0.0.0.0:64554
2023.11.29 00:48:15 INFO  Canceling debug proxy for [taller4.Taller4]
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.11.29 00:48:21 INFO  compiling app (1 scala source)
2023.11.29 00:48:22 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 6m 24.112s)
2023.11.29 00:48:22 INFO  compiling app (1 scala source)
2023.11.29 00:48:23 INFO  time: compiled app in 1.37s
2023.11.29 00:48:24 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:48:24 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:48:24 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:48:23 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:48:23 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:48:23 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:48:27 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:48:27 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64584 .
2023.11.29 00:48:27 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:48:51 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:48:51 INFO  Closing debug server tcp://0.0.0.0:64580
2023.11.29 00:48:55 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:48:55 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:48:55 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:48:55 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:48:55 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:48:55 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:48:57 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:48:57 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64597 .
2023.11.29 00:48:57 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:49:47 INFO  Closing debug server tcp://0.0.0.0:64593
2023.11.29 00:49:47 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:50:02 INFO  compiling app (1 scala source)
2023.11.29 00:50:03 INFO  time: compiled app in 1.1s
2023.11.29 00:50:04 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 8m 6.231s)
2023.11.29 00:50:04 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:50:04 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:50:05 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:50:04 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:50:04 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:04 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:07 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 00:50:07 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64661 .
2023.11.29 00:50:07 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:50:15 INFO  Closing debug server tcp://0.0.0.0:64658
2023.11.29 00:50:15 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:50:32 INFO  compiling app (1 scala source)
2023.11.29 00:50:32 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 8m 34.176s)
2023.11.29 00:50:32 INFO  compiling app (1 scala source)
2023.11.29 00:50:32 INFO  time: compiled app in 0.74s
2023.11.29 00:50:33 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:50:33 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:50:33 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:50:33 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:50:33 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:33 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:35 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:50:35 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64679 .
2023.11.29 00:50:35 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:50:44 INFO  Closing debug server tcp://0.0.0.0:64675
2023.11.29 00:50:44 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 12:50:52 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 310
2023.11.29 00:50:55 INFO  compiling app (1 scala source)
2023.11.29 00:50:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.29 00:50:55 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 8m 57.432s)
2023.11.29 00:50:55 INFO  compiling app (1 scala source)
2023.11.29 00:50:56 INFO  time: compiled app in 0.79s
nov. 29, 2023 12:50:57 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 00:50:57 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:50:57 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:50:57 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:50:56 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:50:56 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:56 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:50:58 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:50:58 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64696 .
2023.11.29 00:50:58 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:52:01 INFO  Closing debug server tcp://0.0.0.0:64693
2023.11.29 00:52:01 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:52:03 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 10m 5.511s)
2023.11.29 00:52:04 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:52:04 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:52:04 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:52:03 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:52:03 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:52:03 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:52:05 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:52:05 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64716 .
2023.11.29 00:52:05 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:52:29 INFO  Closing debug server tcp://0.0.0.0:64713
2023.11.29 00:52:29 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 12:56:14 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 341
2023.11.29 00:56:18 INFO  compiling app (1 scala source)
2023.11.29 00:56:19 INFO  time: compiled app in 1.06s
nov. 29, 2023 12:56:20 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 00:56:20 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:56:20 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:56:20 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:56:20 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:56:20 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:56:20 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:56:22 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:56:22 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64740 .
2023.11.29 00:56:22 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:56:29 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:56:29 INFO  Closing debug server tcp://0.0.0.0:64737
2023.11.29 00:56:34 INFO  compiling app (1 scala source)
2023.11.29 00:56:34 INFO  time: compiled app in 0.68s
2023.11.29 00:56:36 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:56:36 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:56:37 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:56:37 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:56:37 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:56:37 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:56:38 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:56:38 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64757 .
2023.11.29 00:56:38 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:56:44 INFO  Closing debug server tcp://0.0.0.0:64754
2023.11.29 00:56:44 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:56:57 INFO  compiling app (1 scala source)
2023.11.29 00:56:57 INFO  time: compiled app in 0.65s
2023.11.29 00:57:00 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 15m 2.531s)
2023.11.29 00:57:01 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:57:01 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:57:01 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:57:00 INFO  Loaded expression compiler in 3 milliseconds
2023.11.29 00:57:00 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:57:00 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:57:02 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:57:02 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64783 .
2023.11.29 00:57:02 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:57:13 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:57:13 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:57:13 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:57:13 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:57:13 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:57:13 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:57:13 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:57:15 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:57:15 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64792 .
2023.11.29 00:57:15 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:57:22 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:57:22 INFO  Closing debug server tcp://0.0.0.0:64790
2023.11.29 00:58:59 INFO  compiling app (1 scala source)
2023.11.29 00:59:00 INFO  time: compiled app in 1.09s
2023.11.29 00:59:02 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 17m 3.569s)
2023.11.29 00:59:02 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:59:02 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:59:02 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:59:02 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 00:59:02 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:59:02 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:59:03 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:59:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64812 .
2023.11.29 00:59:03 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:59:11 INFO  Closing debug server tcp://0.0.0.0:64809
2023.11.29 00:59:11 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:59:16 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 17m 18.537s)
2023.11.29 00:59:17 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 00:59:17 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 00:59:17 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 00:59:16 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 00:59:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:59:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 00:59:19 INFO  Loaded all sources and classes in 1 second
2023.11.29 00:59:19 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64828 .
2023.11.29 00:59:19 INFO  Attaching to debuggee VM succeeded.
2023.11.29 00:59:34 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 00:59:34 INFO  Closing debug server tcp://0.0.0.0:64826
2023.11.29 00:59:42 INFO  compiling app (1 scala source)
2023.11.29 00:59:42 INFO  time: compiled app in 0.81s
nov. 29, 2023 12:59:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 475
nov. 29, 2023 12:59:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 477
nov. 29, 2023 12:59:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 476
nov. 29, 2023 12:59:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 482
nov. 29, 2023 12:59:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 480
2023.11.29 00:59:47 INFO  compiling app (1 scala source)
2023.11.29 00:59:47 INFO  time: compiled app in 0.64s
nov. 29, 2023 12:59:48 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
nov. 29, 2023 12:59:49 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$.<clinit>(DebugProvider.scala:925)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:467)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 00:59:49 INFO  compiling app (1 scala source)
2023.11.29 00:59:49 INFO  time: compiled app in 0.31s
2023.11.29 01:00:10 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:00:10 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:00:10 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:00:10 INFO  Loaded expression compiler in 2 milliseconds
2023.11.29 01:00:10 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:00:10 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:00:12 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:00:12 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64856 .
2023.11.29 01:00:12 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:00:59 INFO  Closing debug server tcp://0.0.0.0:64851
2023.11.29 01:00:59 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:01:14 INFO  compiling app (1 scala source)
2023.11.29 01:01:15 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 19m 16.958s)
2023.11.29 01:01:15 INFO  compiling app (1 scala source)
2023.11.29 01:01:15 INFO  time: compiled app in 0.2s
2023.11.29 01:01:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:01:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:01:16 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:01:16 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 01:01:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:01:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:01:18 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:01:18 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64881 .
2023.11.29 01:01:18 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:01:21 INFO  Closing debug server tcp://0.0.0.0:64877
2023.11.29 01:01:21 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:01:46 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:01:46 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:01:46 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:01:46 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 01:01:46 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:01:46 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:01:48 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:01:48 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64895 .
2023.11.29 01:01:48 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:02:06 INFO  Closing debug server tcp://0.0.0.0:64891
2023.11.29 01:02:06 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:02:24 INFO  compiling app (1 scala source)
2023.11.29 01:02:24 INFO  time: compiled app in 0.16s
2023.11.29 01:02:32 INFO  compiling app (1 scala source)
2023.11.29 01:02:32 INFO  time: compiled app in 0.76s
2023.11.29 01:02:45 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 20m 46.713s)
2023.11.29 01:02:45 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:02:45 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:02:45 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:02:45 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 01:02:45 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:02:45 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:02:46 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:02:46 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64920 .
2023.11.29 01:02:46 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:02:54 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:02:54 INFO  Closing debug server tcp://0.0.0.0:64918
2023.11.29 01:04:25 INFO  compiling app (1 scala source)
2023.11.29 01:04:25 INFO  time: compiled app in 0.14s
2023.11.29 01:04:41 INFO  compiling app (1 scala source)
2023.11.29 01:04:41 INFO  time: compiled app in 0.18s
2023.11.29 01:04:56 INFO  compiling app (1 scala source)
2023.11.29 01:04:56 INFO  time: compiled app in 0.13s
2023.11.29 01:05:49 INFO  compiling app (1 scala source)
2023.11.29 01:05:49 INFO  time: compiled app in 87ms
2023.11.29 01:05:55 INFO  compiling app (1 scala source)
2023.11.29 01:05:55 INFO  time: compiled app in 0.78s
2023.11.29 01:06:01 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:06:01 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:06:01 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:06:01 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 01:06:01 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:01 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:03 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:06:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65002 .
2023.11.29 01:06:03 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:06:05 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:05 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 1:06:05 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.11.29 01:06:05 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:05 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 01:06:05 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:06 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 01:06:05 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:06 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 01:06:08 INFO  Closing debug server tcp://0.0.0.0:65000
2023.11.29 01:06:08 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:06:13 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:13 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

nov. 29, 2023 1:06:14 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 01:06:15 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:06:15 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:06:15 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:06:15 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 01:06:15 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:15 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:17 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:06:17 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65019 .
2023.11.29 01:06:17 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:06:18 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:18 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 1:06:18 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.11.29 01:06:18 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:18 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 01:06:18 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:19 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 01:06:18 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:19 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 01:06:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:06:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

nov. 29, 2023 1:06:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1097
nov. 29, 2023 1:06:23 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 1:06:25 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1102
2023.11.29 01:06:28 INFO  compiling app (1 scala source)
2023.11.29 01:06:28 INFO  time: compiled app in 0.68s
2023.11.29 01:06:30 INFO  Closing debug server tcp://0.0.0.0:65017
2023.11.29 01:06:30 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 1:06:32 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 01:06:36 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 01:06:36 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 01:06:36 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 01:06:36 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 01:06:36 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:36 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 01:06:37 INFO  Loaded all sources and classes in 1 second
2023.11.29 01:06:37 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65039 .
2023.11.29 01:06:37 INFO  Attaching to debuggee VM succeeded.
2023.11.29 01:06:39 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.29 01:06:39 ERROR Build server error: 	at taller4.Taller4$.$anonfun$subMatriz$1(Taller4.scala:54)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.29 01:06:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 01:06:39 ERROR Build server error: 	at taller4.Taller4$.subMatriz(Taller4.scala:54)
2023.11.29 01:06:39 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:66)
2023.11.29 01:06:39 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.29 01:06:39 INFO  Closing debug server tcp://0.0.0.0:65037
2023.11.29 01:06:39 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 01:07:31 INFO  compiling app (1 scala source)
2023.11.29 01:07:31 INFO  time: compiled app in 0.12s
2023.11.29 01:07:41 INFO  compiling app (1 scala source)
2023.11.29 01:07:41 INFO  time: compiled app in 0.7s
2023.11.29 01:07:47 INFO  Shutting down server
2023.11.29 01:07:47 INFO  shutting down Metals
2023.11.29 01:07:47 INFO  Shut down connection with build server.
2023.11.29 01:07:47 INFO  Exiting server
2023.11.29 13:21:34 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.29 13:21:34 INFO  time: initialize in 0.37s
2023.11.29 13:21:40 INFO  Attempting to connect to the build server...
2023.11.29 13:21:40 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 13:21:42 INFO  skipping build import with status 'Installed'
2023.11.29 13:21:43 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.29 13:21:45 WARN  no build target for: C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
nov. 29, 2023 1:21:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1
nov. 29, 2023 1:21:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2
nov. 29, 2023 1:21:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7
nov. 29, 2023 1:21:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8
2023.11.29 13:22:02 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
nov. 29, 2023 1:22:03 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11
nov. 29, 2023 1:22:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 15
nov. 29, 2023 1:22:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 16
nov. 29, 2023 1:22:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 19
nov. 29, 2023 1:22:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 38
2023.11.29 13:22:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.29 13:22:53 INFO  time: Connected to build server in 1m13s
2023.11.29 13:22:53 INFO  Connected to Build server: Bloop v1.5.11
2023.11.29 13:22:55 INFO  time: Imported build in 0.95s
2023.11.29 13:23:00 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
nov. 29, 2023 1:23:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 49
2023.11.29 13:23:06 INFO  time: indexed workspace in 10s
2023.11.29 13:23:06 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 12.656s)
2023.11.29 13:23:09 INFO  compiling app (1 scala source)
2023.11.29 13:23:09 INFO  compiling app (1 scala source)
2023.11.29 13:23:28 INFO  compiling app-test (1 scala source)
2023.11.29 13:23:28 INFO  time: compiled app in 19s
2023.11.29 13:23:34 INFO  time: compiled app-test in 5.21s
2023.11.29 13:24:25 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 13:24:27 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 13:24:27 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 13:24:28 INFO  Loaded expression compiler in 1 second
2023.11.29 13:24:28 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:24:28 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:24:34 INFO  Loaded all sources and classes in 6 seconds
2023.11.29 13:24:34 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65483 .
2023.11.29 13:24:34 INFO  Attaching to debuggee VM succeeded.
2023.11.29 13:24:51 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:24:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 1:24:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 13:24:51 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:24:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 13:24:51 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:24:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 13:24:51 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:24:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 27 more

2023.11.29 13:24:57 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 13:24:57 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 13:24:57 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 1:24:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

2023.11.29 13:24:57 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 13:24:57 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 13:24:57 INFO  Loaded expression compiler in 12 milliseconds
2023.11.29 13:24:57 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:24:57 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
nov. 29, 2023 1:24:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 13:25:02 INFO  Loaded all sources and classes in 4 seconds
2023.11.29 13:25:02 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65498 .
2023.11.29 13:25:02 INFO  Attaching to debuggee VM succeeded.
2023.11.29 13:26:03 INFO  compiling app (1 scala source)
2023.11.29 13:26:03 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 13:26:04 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3m 10.369s)
2023.11.29 13:26:04 INFO  compiling app (1 scala source)
2023.11.29 13:26:07 INFO  time: compiled app in 2.92s
2023.11.29 13:26:07 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-USZ-YvtVS2Out17KJmzH0Q==-Dt5pK8gRTnKiZmD1foqqhA==\common\package$DefaultTaskScheduler.class to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-USZ-YvtVS2Out17KJmzH0Q==\common\package$DefaultTaskScheduler.class, you might need to restart the build server.
2023.11.29 13:26:07 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-USZ-YvtVS2Out17KJmzH0Q==-Dt5pK8gRTnKiZmD1foqqhA==\META-INF\semanticdb\app\src\main\scala\common\package.scala.semanticdb to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-USZ-YvtVS2Out17KJmzH0Q==\META-INF\semanticdb\app\src\main\scala\common\package.scala.semanticdb, you might need to restart the build server.
2023.11.29 13:26:08 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 13:26:08 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 13:26:08 INFO  Starting debug proxy for [taller4.Taller4]
nov. 29, 2023 1:26:08 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 13:26:07 INFO  Loaded expression compiler in 2 milliseconds
2023.11.29 13:26:07 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:26:07 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:26:11 INFO  Loaded all sources and classes in 3 seconds
2023.11.29 13:26:11 INFO  Trying to attach to remote debuggee VM 127.0.0.1:65521 .
2023.11.29 13:26:11 INFO  Attaching to debuggee VM succeeded.
2023.11.29 13:31:34 INFO  compiling app (1 scala source)
2023.11.29 13:31:34 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 13:31:34 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 8m 40.251s)
2023.11.29 13:31:34 INFO  compiling app (1 scala source)
2023.11.29 13:31:38 INFO  time: compiled app in 3.78s
2023.11.29 13:31:38 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 13:31:38 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 13:31:38 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 13:31:39 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 13:31:39 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:31:39 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:31:42 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 13:31:42 INFO  Trying to attach to remote debuggee VM 127.0.0.1:49163 .
2023.11.29 13:31:42 INFO  Attaching to debuggee VM succeeded.
nov. 29, 2023 1:32:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 165
2023.11.29 13:32:03 INFO  compiling app (1 scala source)
2023.11.29 13:32:03 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 13:32:05 INFO  time: compiled app in 1.88s
2023.11.29 13:32:06 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 13:32:06 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 13:32:06 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 13:32:05 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 13:32:05 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:32:05 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 13:32:10 INFO  Loaded all sources and classes in 4 seconds
2023.11.29 13:32:10 INFO  Trying to attach to remote debuggee VM 127.0.0.1:49185 .
2023.11.29 13:32:10 INFO  Attaching to debuggee VM succeeded.
2023.11.29 13:32:33 INFO  compiling app (1 scala source)
2023.11.29 13:32:34 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 13:32:36 INFO  time: compiled app in 2.5s
2023.11.29 14:05:59 INFO  Disconnecting from Bloop session...
2023.11.29 14:06:00 INFO  Shutting down server
2023.11.29 14:06:00 INFO  shutting down Metals
2023.11.29 14:06:01 ERROR timeout: build server 'bloop' during shutdown
nov. 29, 2023 2:06:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$2(BuildServerConnection.scala:361)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:210)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$1(BuildServerConnection.scala:361)
	at scala.meta.internal.metals.Cancelable$$anon$1.cancel(Cancelable.scala:18)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:301)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1(BspSession.scala:34)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1$adapted(BspSession.scala:34)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.bsp.BspSession.cancel(BspSession.scala:34)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.MetalsLspService.cancel(MetalsLspService.scala:157)
	at scala.meta.internal.metals.MetalsLspService.onShutdown(MetalsLspService.scala:927)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2(WorkspaceLspService.scala:1170)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2$adapted(WorkspaceLspService.scala:1170)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.WorkspaceLspService.shutdown(WorkspaceLspService.scala:1170)
	at scala.meta.metals.MetalsLanguageServer.shutdown(MetalsLanguageServer.scala:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 45 more

2023.11.29 14:06:01 INFO  Cancelling compilation on Bloop server
2023.11.29 14:06:01 INFO  Cancelling compilation on Bloop server
2023.11.29 14:06:01 INFO  Cancelling compilation on Bloop server
2023.11.29 14:06:01 INFO  Cancelling compilation on Bloop server
2023.11.29 14:06:00 INFO  Exiting server
2023.11.29 14:06:01 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2478)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:199)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:199)
	at scala.util.Success.foreach(Try.scala:260)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 14:06:01 INFO  Failed to run request with params DebugSessionAddress
2023.11.29 14:06:01 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2478)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:199)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:199)
	at scala.util.Success.foreach(Try.scala:260)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 14:06:01 INFO  Failed to run request with params DebugSessionAddress
2023.11.29 14:06:01 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2478)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:199)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:199)
	at scala.util.Success.foreach(Try.scala:260)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 15:32:49 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.29 15:32:49 INFO  time: initialize in 0.23s
2023.11.29 15:32:53 INFO  Attempting to connect to the build server...
2023.11.29 15:32:53 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 15:32:55 INFO  skipping build import with status 'Installed'
2023.11.29 15:32:56 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.29 15:32:56 INFO  time: Connected to build server in 3.64s
2023.11.29 15:32:56 INFO  Connected to Build server: Bloop v1.5.11
nov. 29, 2023 3:33:11 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6
2023.11.29 15:33:12 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.11.29 15:33:13 INFO  time: Imported build in 0.38s
2023.11.29 15:33:21 INFO  time: indexed workspace in 7.72s
nov. 29, 2023 3:33:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10
nov. 29, 2023 3:33:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4
2023.11.29 15:37:41 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4m 45.575s)
2023.11.29 15:37:42 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 15:37:43 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 15:37:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 15:37:43 INFO  Loaded expression compiler in 4 milliseconds
2023.11.29 15:37:43 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 15:37:43 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 15:37:47 INFO  Loaded all sources and classes in 4 seconds
2023.11.29 15:37:47 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50162 .
2023.11.29 15:37:47 INFO  Attaching to debuggee VM succeeded.
2023.11.29 15:38:01 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 3:38:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 3:38:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 15:38:01 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 3:38:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 15:38:01 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 3:38:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 15:38:01 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 3:38:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 27 more

2023.11.29 15:38:03 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 15:38:03 INFO  Closing debug server tcp://0.0.0.0:50155
2023.11.29 15:38:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 3:38:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 29 more

nov. 29, 2023 3:38:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 16:09:13 INFO  compiling app (1 scala source)
2023.11.29 16:09:16 INFO  time: compiled app in 2.93s
nov. 29, 2023 4:12:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 126
2023.11.29 16:12:02 INFO  compiling app (1 scala source)
2023.11.29 16:12:05 INFO  time: compiled app in 2.89s
2023.11.29 16:12:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 16:12:06 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 16:12:06 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 16:12:06 INFO  Loaded expression compiler in 3 milliseconds
2023.11.29 16:12:06 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:12:06 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:12:12 INFO  Loaded all sources and classes in 5 seconds
2023.11.29 16:12:12 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50289 .
2023.11.29 16:12:12 INFO  Attaching to debuggee VM succeeded.
2023.11.29 16:12:22 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

nov. 29, 2023 4:12:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 16:12:22 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 16:12:22 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 16:12:22 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 16:12:26 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 16:12:26 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 16:12:26 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 16:12:26 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 16:12:26 INFO  Loaded expression compiler in 3 milliseconds
2023.11.29 16:12:26 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:12:26 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:12:30 INFO  Loaded all sources and classes in 3 seconds
2023.11.29 16:12:30 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50298 .
2023.11.29 16:12:30 INFO  Attaching to debuggee VM succeeded.
nov. 29, 2023 4:12:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.11.29 16:12:43 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 16:12:43 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 16:12:43 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 4:12:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 16:12:53 INFO  compiling app (1 scala source)
2023.11.29 16:12:53 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 16:12:53 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 39m 57.532s)
2023.11.29 16:12:53 INFO  compiling app (1 scala source)
2023.11.29 16:12:55 INFO  time: compiled app in 2.04s
2023.11.29 16:12:56 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 16:12:56 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 16:12:56 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 16:12:55 INFO  Loaded expression compiler in 5 milliseconds
2023.11.29 16:12:55 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:12:55 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:13:02 INFO  Loaded all sources and classes in 5 seconds
2023.11.29 16:13:02 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50316 .
2023.11.29 16:13:02 INFO  Attaching to debuggee VM succeeded.
2023.11.29 16:13:10 INFO  Closing debug server tcp://0.0.0.0:50313
2023.11.29 16:13:10 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 16:13:19 INFO  compiling app (1 scala source)
2023.11.29 16:13:19 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 40m 23.539s)
2023.11.29 16:13:19 INFO  compiling app (1 scala source)
2023.11.29 16:13:22 INFO  time: compiled app in 2.34s
2023.11.29 16:13:22 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
nov. 29, 2023 4:13:22 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 16:13:22 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 16:13:23 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 16:13:23 INFO  Loaded expression compiler in 4 milliseconds
2023.11.29 16:13:23 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:13:23 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:13:27 INFO  Loaded all sources and classes in 3 seconds
2023.11.29 16:13:27 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50336 .
2023.11.29 16:13:27 INFO  Attaching to debuggee VM succeeded.
2023.11.29 16:13:35 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 16:13:35 INFO  Closing debug server tcp://0.0.0.0:50332
2023.11.29 16:13:45 INFO  compiling app (1 scala source)
2023.11.29 16:13:47 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.11.29 16:13:47 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 40m 51.658s)
2023.11.29 16:13:47 INFO  compiling app (1 scala source)
2023.11.29 16:13:47 INFO  time: compiled app in 0.12s
2023.11.29 16:13:47 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-1TtrIDpsTLKTnUJICRFQ2w==-6TAq0_KHTgO9woCET1wfCw==\common\package$TaskScheduler.class to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-1TtrIDpsTLKTnUJICRFQ2w==\common\package$TaskScheduler.class, you might need to restart the build server.
2023.11.29 16:13:48 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 16:13:48 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 16:13:49 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 16:13:49 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 16:13:49 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:13:49 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 16:13:53 INFO  Loaded all sources and classes in 4 seconds
2023.11.29 16:13:53 INFO  Trying to attach to remote debuggee VM 127.0.0.1:50353 .
2023.11.29 16:13:53 INFO  Attaching to debuggee VM succeeded.
2023.11.29 16:14:13 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 16:14:13 INFO  Closing debug server tcp://0.0.0.0:50349
2023.11.29 16:14:31 INFO  compiling app (1 scala source)
2023.11.29 16:14:33 INFO  time: compiled app in 2.17s
2023.11.29 16:39:48 INFO  Shutting down server
2023.11.29 16:39:48 INFO  shutting down Metals
2023.11.29 16:39:48 INFO  Exiting server
2023.11.29 20:52:35 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.29 20:52:39 INFO  Attempting to connect to the build server...
2023.11.29 20:52:39 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.29 20:52:40 INFO  skipping build import with status 'Installed'
2023.11.29 20:52:41 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.29 20:52:41 INFO  time: Connected to build server in 1.91s
2023.11.29 20:52:41 INFO  Connected to Build server: Bloop v1.5.11
2023.11.29 20:52:42 INFO  time: Imported build in 0.87s
2023.11.29 20:53:02 INFO  time: indexed workspace in 20s
nov. 29, 2023 9:05:18 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
nov. 29, 2023 9:05:25 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 21:05:45 INFO  compiling app (1 scala source)
2023.11.29 21:05:54 INFO  time: compiled app in 8.34s
nov. 29, 2023 9:22:33 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 99
nov. 29, 2023 9:22:33 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 100
2023.11.29 21:22:33 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-4-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.11.29 21:22:33 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 29m 52.282s)
2023.11.29 21:22:33 INFO  compiling app (1 scala source)
nov. 29, 2023 9:22:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 104
nov. 29, 2023 9:22:34 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
nov. 29, 2023 9:22:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-11-29\r_compiler-error_(app)_21-22-34-374.md
2023.11.29 21:22:33 INFO  time: compiled app in 0.67s
2023.11.29 21:22:34 INFO  compiling app (1 scala source)
2023.11.29 21:22:34 INFO  time: compiled app in 0.44s
nov. 29, 2023 9:22:34 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 21:22:52 INFO  compiling app (1 scala source)
2023.11.29 21:22:52 INFO  time: compiled app in 0.28s
2023.11.29 21:23:28 INFO  compiling app (1 scala source)
2023.11.29 21:23:28 INFO  time: compiled app in 0.2s
nov. 29, 2023 9:23:53 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 429
nov. 29, 2023 9:23:53 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 431
2023.11.29 21:24:04 INFO  compiling app (1 scala source)
2023.11.29 21:24:04 INFO  time: compiled app in 0.17s
2023.11.29 21:24:23 INFO  compiling app (1 scala source)
2023.11.29 21:24:25 INFO  time: compiled app in 1.35s
2023.11.29 21:25:16 INFO  compiling app (1 scala source)
2023.11.29 21:25:16 INFO  time: compiled app in 0.35s
2023.11.29 21:25:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:56 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:25:58 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:00 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:24 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:26 INFO  compiling app (1 scala source)
2023.11.29 21:26:26 INFO  time: compiled app in 0.32s
2023.11.29 21:26:27 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:26:35 INFO  compiling app (1 scala source)
2023.11.29 21:26:36 INFO  time: compiled app in 1.2s
nov. 29, 2023 9:26:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 696
2023.11.29 21:30:05 INFO  compiling app (1 scala source)
2023.11.29 21:30:05 INFO  time: compiled app in 0.92s
nov. 29, 2023 9:30:11 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 749
2023.11.29 21:30:11 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
nov. 29, 2023 9:30:11 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 752
2023.11.29 21:30:12 INFO  time: compiled app in 1.09s
2023.11.29 21:30:22 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 21:30:22 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 21:30:23 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 21:30:23 INFO  Loaded expression compiler in 5 milliseconds
2023.11.29 21:30:23 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:30:23 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:30:27 INFO  Loaded all sources and classes in 3 seconds
2023.11.29 21:30:27 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53509 .
2023.11.29 21:30:27 INFO  Attaching to debuggee VM succeeded.
2023.11.29 21:32:35 INFO  Closing debug server tcp://0.0.0.0:53507
2023.11.29 21:32:35 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 9:33:15 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 781
nov. 29, 2023 9:34:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 982
2023.11.29 21:34:56 INFO  compiling app (1 scala source)
2023.11.29 21:34:56 INFO  time: compiled app in 0.13s
2023.11.29 21:35:15 INFO  compiling app (1 scala source)
2023.11.29 21:35:18 INFO  time: compiled app in 2.53s
nov. 29, 2023 9:35:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

nov. 29, 2023 9:35:29 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1064
2023.11.29 21:35:30 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 42m 49.338s)
2023.11.29 21:35:30 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 21:35:30 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 21:35:31 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 21:35:30 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 21:35:30 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:35:30 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:35:32 INFO  Loaded all sources and classes in 1 second
2023.11.29 21:35:32 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53550 .
2023.11.29 21:35:32 INFO  Attaching to debuggee VM succeeded.
2023.11.29 21:35:50 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 21:35:50 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 21:35:50 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 21:35:50 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 21:35:50 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 21:35:50 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:35:50 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 21:35:52 INFO  Loaded all sources and classes in 1 second
2023.11.29 21:35:52 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53561 .
2023.11.29 21:35:52 INFO  Attaching to debuggee VM succeeded.
2023.11.29 21:43:04 INFO  Closing debug server tcp://0.0.0.0:53559
2023.11.29 21:43:04 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 21:43:30 INFO  compiling app (1 scala source)
2023.11.29 21:43:30 INFO  time: compiled app in 0.99s
nov. 29, 2023 9:43:32 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 21:44:03 INFO  compiling app (1 scala source)
2023.11.29 21:44:04 INFO  time: compiled app in 1.2s
2023.11.29 21:44:38 INFO  compiling app (1 scala source)
2023.11.29 21:44:38 INFO  time: compiled app in 0.29s
2023.11.29 21:44:38 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:53 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:54 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:56 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:56 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:56 INFO  compiling app (1 scala source)
2023.11.29 21:44:56 INFO  time: compiled app in 0.62s
nov. 29, 2023 9:44:57 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 21:44:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:44:59 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:45:00 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 21:45:01 INFO  compiling app (1 scala source)
2023.11.29 21:45:01 INFO  time: compiled app in 0.94s
2023.11.29 21:45:07 INFO  compiling app (1 scala source)
2023.11.29 21:45:07 INFO  time: compiled app in 0.14s
2023.11.29 21:45:26 INFO  compiling app (1 scala source)
2023.11.29 21:45:26 INFO  time: compiled app in 0.88s
2023.11.29 21:45:31 INFO  compiling app (1 scala source)
2023.11.29 21:45:31 INFO  time: compiled app in 0.61s
nov. 29, 2023 9:46:30 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1625
2023.11.29 21:48:34 INFO  compiling app (1 scala source)
2023.11.29 21:48:34 INFO  time: compiled app in 0.14s
2023.11.29 21:48:55 INFO  compiling app (1 scala source)
2023.11.29 21:48:55 INFO  time: compiled app in 0.14s
2023.11.29 21:49:29 INFO  compiling app (1 scala source)
2023.11.29 21:49:29 INFO  time: compiled app in 0.16s
2023.11.29 21:49:37 INFO  compiling app (1 scala source)
2023.11.29 21:49:37 INFO  time: compiled app in 75ms
2023.11.29 21:57:52 INFO  compiling app (1 scala source)
2023.11.29 21:57:52 INFO  time: compiled app in 78ms
2023.11.29 21:57:58 INFO  compiling app (1 scala source)
2023.11.29 21:57:58 INFO  time: compiled app in 0.14s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1815, 1815, 1831)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1815, 1815, 1824)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1815, 1815, 1825)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1815, 1815, 1826)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1822, 1822, 1838)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1822, 1822, 1831)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1822, 1822, 1832)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1822, 1822, 1831)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1822, 1822, 1838)
2023.11.29 21:59:21 INFO  compiling app (1 scala source)
2023.11.29 21:59:21 INFO  time: compiled app in 0.14s
2023.11.29 21:59:22 INFO  compiling app (1 scala source)
2023.11.29 21:59:22 INFO  time: compiled app in 0.16s
2023.11.29 21:59:41 INFO  compiling app (1 scala source)
2023.11.29 21:59:41 INFO  time: compiled app in 0.17s
2023.11.29 22:00:09 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.11.29 22:00:09 INFO  time: compiled app in 0.32s
2023.11.29 22:01:12 INFO  compiling app (1 scala source)
2023.11.29 22:01:12 INFO  time: compiled app in 0.17s
2023.11.29 22:01:51 INFO  compiling app (1 scala source)
2023.11.29 22:01:51 INFO  time: compiled app in 0.18s
2023.11.29 22:02:26 INFO  compiling app (1 scala source)
2023.11.29 22:02:26 INFO  time: compiled app in 0.13s
2023.11.29 22:02:39 INFO  compiling app (1 scala source)
2023.11.29 22:02:39 INFO  time: compiled app in 0.11s
2023.11.29 22:03:20 INFO  compiling app (1 scala source)
2023.11.29 22:03:20 INFO  time: compiled app in 0.98s
2023.11.29 22:03:42 INFO  compiling app (1 scala source)
nov. 29, 2023 10:03:42 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 22:03:42 INFO  time: compiled app in 0.99s
2023.11.29 22:03:45 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 11m 3.801s)
2023.11.29 22:03:45 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
nov. 29, 2023 10:03:45 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 22:03:45 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:03:45 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:03:45 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 22:03:45 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:03:45 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:03:48 INFO  Loaded all sources and classes in 2 seconds
2023.11.29 22:03:48 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53882 .
2023.11.29 22:03:48 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:03:58 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.29 22:03:58 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:53)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.29 22:03:58 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:03:58 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:53)
2023.11.29 22:03:58 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:58)
2023.11.29 22:03:58 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.29 22:03:58 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.29 22:03:58 INFO  Closing debug server tcp://0.0.0.0:53880
2023.11.29 22:03:58 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 10:05:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2913
2023.11.29 22:05:28 INFO  compiling app (1 scala source)
2023.11.29 22:05:28 INFO  time: compiled app in 0.89s
2023.11.29 22:05:36 INFO  compiling app (1 scala source)
2023.11.29 22:05:38 INFO  time: compiled app in 1.84s
nov. 29, 2023 10:05:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 22:05:42 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 22:05:42 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:05:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:05:43 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 22:05:43 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:05:43 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:05:44 INFO  Loaded all sources and classes in 1 second
2023.11.29 22:05:44 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53935 .
2023.11.29 22:05:44 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:05:52 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.29 22:05:52 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.29 22:05:52 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:05:52 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:05:52 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:61)
2023.11.29 22:05:52 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.29 22:05:52 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.29 22:05:52 INFO  Closing debug server tcp://0.0.0.0:53933
2023.11.29 22:05:52 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 22:06:50 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 14m 9.563s)
2023.11.29 22:06:51 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 22:06:51 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:06:51 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:06:50 INFO  Loaded expression compiler in 1 millisecond
2023.11.29 22:06:50 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:06:50 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:06:53 INFO  Loaded all sources and classes in 1 second
2023.11.29 22:06:53 INFO  Trying to attach to remote debuggee VM 127.0.0.1:53961 .
2023.11.29 22:06:53 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:07:20 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.29 22:07:20 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.29 22:07:20 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:07:20 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:07:20 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:61)
2023.11.29 22:07:20 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.29 22:07:20 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.29 22:07:20 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 22:07:20 INFO  Closing debug server tcp://0.0.0.0:53959
nov. 29, 2023 10:07:24 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3102
2023.11.29 22:07:39 INFO  compiling app (1 scala source)
2023.11.29 22:07:41 INFO  time: compiled app in 1.34s
2023.11.29 22:07:46 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 22:07:46 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:07:47 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:07:47 INFO  Loaded expression compiler in 2 milliseconds
2023.11.29 22:07:47 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:07:47 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:07:49 INFO  Loaded all sources and classes in 1 second
2023.11.29 22:07:49 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54002 .
2023.11.29 22:07:49 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:07:56 INFO  compiling app (1 scala source)
2023.11.29 22:07:56 INFO  time: compiled app in 0.11s
2023.11.29 22:07:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:07:59 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 22:07:59 INFO  compiling app (1 scala source)
2023.11.29 22:07:59 INFO  time: compiled app in 0.16s
2023.11.29 22:07:59 INFO  {
  "jsonrpc": "2.0",
  "id": "344",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
2023.11.29 22:08:08 INFO  compiling app (1 scala source)
nov. 29, 2023 10:08:08 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.29 22:08:08 INFO  time: compiled app in 0.27s
nov. 29, 2023 10:08:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$.<clinit>(DebugProvider.scala:925)
	at scala.meta.internal.metals.debug.DebugProvider.ensureNoWorkspaceErrors(DebugProvider.scala:387)
	at scala.meta.internal.metals.MetalsLspService.startDebugProvider(MetalsLspService.scala:1892)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:823)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at jdk.internal.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.29 22:08:10 INFO  compiling app (1 scala source)
2023.11.29 22:08:10 INFO  time: compiled app in 0.16s
2023.11.29 22:08:12 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:14 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:16 INFO  compiling app (1 scala source)
2023.11.29 22:08:16 INFO  time: compiled app in 0.14s
2023.11.29 22:08:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:38 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:40 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:40 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:08:43 INFO  compiling app (1 scala source)
2023.11.29 22:08:43 INFO  time: compiled app in 0.89s
2023.11.29 22:09:17 INFO  compiling app (1 scala source)
2023.11.29 22:09:17 INFO  time: compiled app in 0.11s
2023.11.29 22:10:00 INFO  compiling app (1 scala source)
2023.11.29 22:10:00 INFO  time: compiled app in 0.96s
2023.11.29 22:10:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 22:10:05 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:10:05 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:10:05 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 22:10:05 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:10:05 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:10:07 INFO  Loaded all sources and classes in 1 second
2023.11.29 22:10:07 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54061 .
2023.11.29 22:10:07 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:10:31 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.29 22:10:31 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.29 22:10:31 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.29 22:10:31 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:56)
2023.11.29 22:10:31 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:61)
2023.11.29 22:10:31 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.29 22:10:31 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.29 22:10:31 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.29 22:10:31 INFO  Closing debug server tcp://0.0.0.0:54058
2023.11.29 22:12:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:55: error: unclosed character literal
val prueba = auxMatriz.updated('',vectorExterno)
                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:407)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:412)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.11.29 22:12:08 INFO  compiling app (1 scala source)
2023.11.29 22:12:08 INFO  time: compiled app in 0.8s
2023.11.29 22:12:12 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 19m 31.049s)
2023.11.29 22:12:12 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.29 22:12:12 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.29 22:12:12 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.29 22:12:12 INFO  Loaded expression compiler in 0 milliseconds
2023.11.29 22:12:12 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:12:12 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.29 22:12:14 INFO  Loaded all sources and classes in 1 second
2023.11.29 22:12:14 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54100 .
2023.11.29 22:12:14 INFO  Attaching to debuggee VM succeeded.
2023.11.29 22:12:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

nov. 29, 2023 10:12:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.11.29 22:12:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 22:12:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.11.29 22:12:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 22:12:37 INFO  Closing debug server tcp://0.0.0.0:54097
2023.11.29 22:12:37 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 29, 2023 10:12:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.11.29 22:12:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 22:12:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:12:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.11.29 22:13:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:06 INFO  compiling app (1 scala source)
2023.11.29 22:13:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:08 INFO  time: compiled app in 1.1s
2023.11.29 22:13:23 INFO  compiling app (1 scala source)
2023.11.29 22:13:23 INFO  time: compiled app in 0.71s
2023.11.29 22:13:28 INFO  compiling app (1 scala source)
2023.11.29 22:13:28 INFO  time: compiled app in 0.8s
2023.11.29 22:13:34 INFO  compiling app (1 scala source)
2023.11.29 22:13:35 INFO  time: compiled app in 1.01s
2023.11.29 22:13:43 INFO  compiling app (1 scala source)
2023.11.29 22:13:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:13:44 INFO  time: compiled app in 1.1s
2023.11.29 22:13:57 INFO  compiling app (1 scala source)
2023.11.29 22:13:57 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 21m 15.75s)
2023.11.29 22:13:57 INFO  compiling app (1 scala source)
nov. 29, 2023 10:13:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3705
2023.11.29 22:13:57 INFO  time: compiled app in 0.76s
2023.11.29 22:13:57 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-SPBWV7v2SL6Xmm4cnJsnzA==-Wg7Haz-OT8WlYqwVcEniiw==\common\package$TaskScheduler.class to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-SPBWV7v2SL6Xmm4cnJsnzA==\common\package$TaskScheduler.class, you might need to restart the build server.
nov. 29, 2023 10:14:06 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.11.29 22:14:07 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:14:07 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.11.29 22:14:07 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

nov. 29, 2023 10:14:07 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

nov. 29, 2023 10:14:07 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Exception in thread "pool-4-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.11.29 22:14:26 INFO  compiling app (1 scala source)
2023.11.29 22:14:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:14:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:14:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:14:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.11.29 22:14:26 INFO  time: compiled app in 0.9s
2023.11.29 22:14:46 INFO  compiling app (1 scala source)
2023.11.29 22:14:46 INFO  time: compiled app in 0.1s
2023.11.29 22:15:09 INFO  compiling app (1 scala source)
2023.11.29 22:15:09 INFO  time: compiled app in 0.12s
2023.11.29 22:15:14 INFO  compiling app (1 scala source)
2023.11.29 22:15:14 INFO  time: compiled app in 0.1s
nov. 29, 2023 10:15:20 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3870
2023.11.29 22:15:21 INFO  compiling app (1 scala source)
2023.11.29 22:15:23 INFO  time: compiled app in 1.66s
nov. 29, 2023 10:15:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3903
2023.11.29 22:15:54 INFO  compiling app (1 scala source)
2023.11.29 22:15:54 INFO  time: compiled app in 0.76s
2023.11.30 02:21:50 INFO  Shutting down server
2023.11.30 02:21:50 INFO  shutting down Metals
2023.11.30 02:21:50 INFO  Shut down connection with build server.
2023.11.30 02:21:50 INFO  Exiting server
2023.11.30 17:33:57 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.11.30 17:33:57 INFO  time: initialize in 0.38s
2023.11.30 17:34:03 INFO  Attempting to connect to the build server...
2023.11.30 17:34:03 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.11.30 17:34:05 INFO  skipping build import with status 'Installed'
2023.11.30 17:34:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.11.30 17:34:27 INFO  time: Connected to build server in 24s
2023.11.30 17:34:27 INFO  Connected to Build server: Bloop v1.5.11
2023.11.30 17:34:29 INFO  time: Imported build in 0.61s
2023.11.30 17:34:44 INFO  time: indexed workspace in 14s
2023.11.30 17:34:53 INFO  compiling app-test (1 scala source)
2023.11.30 17:35:00 INFO  time: compiled app-test in 7.4s
nov. 30, 2023 6:51:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 66
nov. 30, 2023 6:51:29 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 70
2023.11.30 18:51:29 INFO  compiling app (1 scala source)
2023.11.30 18:51:31 INFO  time: compiled app in 1.46s
nov. 30, 2023 6:52:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 173
2023.11.30 18:52:57 INFO  compiling app (1 scala source)
2023.11.30 18:52:57 INFO  time: compiled app in 0.82s
nov. 30, 2023 6:54:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 265
nov. 30, 2023 6:54:42 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 312
nov. 30, 2023 6:54:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 347
2023.11.30 18:55:53 INFO  compiling app (1 scala source)
2023.11.30 18:55:55 INFO  time: compiled app in 1.08s
2023.11.30 18:56:33 INFO  compiling app (1 scala source)
2023.11.30 18:56:37 INFO  time: compiled app in 3.92s
2023.11.30 18:56:49 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 18:56:50 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 18:56:50 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 18:56:51 INFO  Loaded expression compiler in 1 second
2023.11.30 18:56:51 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 18:56:51 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 18:56:57 INFO  Loaded all sources and classes in 5 seconds
2023.11.30 18:56:57 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60501 .
2023.11.30 18:56:57 INFO  Attaching to debuggee VM succeeded.
2023.11.30 18:58:45 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$sumMatriz$1(implAlgoritmos.scala:40)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 18:58:45 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.implAlgoritmos.sumMatriz(implAlgoritmos.scala:40)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:59)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:66)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 18:58:45 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 18:58:45 INFO  Closing debug server tcp://0.0.0.0:60498
2023.11.30 18:58:45 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 30, 2023 6:58:49 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 477
2023.11.30 18:58:59 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 24m 30.802s)
2023.11.30 18:58:59 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 18:58:59 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 18:59:00 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 18:58:59 INFO  Loaded expression compiler in 3 milliseconds
2023.11.30 18:58:59 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 18:58:59 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 18:59:03 INFO  Loaded all sources and classes in 2 seconds
2023.11.30 18:59:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60517 .
2023.11.30 18:59:03 INFO  Attaching to debuggee VM succeeded.
2023.11.30 18:59:07 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$sumMatriz$1(implAlgoritmos.scala:40)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 18:59:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.implAlgoritmos.sumMatriz(implAlgoritmos.scala:40)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:59)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:66)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 18:59:07 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 18:59:07 INFO  Closing debug server tcp://0.0.0.0:60514
2023.11.30 18:59:07 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 30, 2023 7:00:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 545
2023.11.30 19:00:49 INFO  compiling app (1 scala source)
2023.11.30 19:00:49 INFO  time: compiled app in 0.86s
2023.11.30 19:00:57 INFO  compiling app (1 scala source)
2023.11.30 19:00:59 INFO  time: compiled app in 2.06s
2023.11.30 19:01:16 INFO  compiling app (1 scala source)
2023.11.30 19:01:18 INFO  time: compiled app in 1.75s
nov. 30, 2023 7:01:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 629
nov. 30, 2023 7:01:53 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

nov. 30, 2023 7:02:12 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.30 19:02:12 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 19:02:12 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 19:02:12 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 19:02:13 INFO  Loaded expression compiler in 1 millisecond
2023.11.30 19:02:13 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 19:02:13 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 19:02:16 INFO  Loaded all sources and classes in 3 seconds
2023.11.30 19:02:16 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60554 .
2023.11.30 19:02:16 INFO  Attaching to debuggee VM succeeded.
2023.11.30 19:02:51 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 19:08:35 INFO  compiling app (1 scala source)
2023.11.30 19:08:36 INFO  time: compiled app in 1.24s
2023.11.30 19:08:39 INFO  compiling app (1 scala source)
2023.11.30 19:08:40 INFO  time: compiled app in 1.2s
2023.11.30 19:13:42 INFO  compiling app (1 scala source)
2023.11.30 19:13:42 INFO  time: compiled app in 0.32s
2023.11.30 19:13:46 INFO  compiling app (1 scala source)
2023.11.30 19:13:48 INFO  time: compiled app in 1.51s
2023.11.30 19:14:44 INFO  compiling app (1 scala source)
2023.11.30 19:14:45 INFO  time: compiled app in 1.13s
nov. 30, 2023 8:39:06 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 982
nov. 30, 2023 8:39:39 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1063
nov. 30, 2023 8:40:18 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1127
2023.11.30 20:41:28 INFO  compiling app (1 scala source)
2023.11.30 20:41:28 INFO  time: compiled app in 0.53s
2023.11.30 20:42:56 INFO  compiling app (1 scala source)
2023.11.30 20:42:56 INFO  time: compiled app in 0.41s
nov. 30, 2023 8:43:17 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1449
nov. 30, 2023 8:43:20 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1462
2023.11.30 20:43:38 INFO  compiling app (1 scala source)
2023.11.30 20:43:38 INFO  time: compiled app in 0.34s
2023.11.30 20:43:43 INFO  compiling app (1 scala source)
2023.11.30 20:43:43 INFO  time: compiled app in 0.25s
2023.11.30 20:44:08 INFO  compiling app (1 scala source)
2023.11.30 20:44:08 INFO  time: compiled app in 0.3s
2023.11.30 20:44:35 INFO  compiling app (1 scala source)
2023.11.30 20:44:35 INFO  time: compiled app in 0.39s
2023.11.30 20:44:41 INFO  compiling app (1 scala source)
2023.11.30 20:44:41 INFO  time: compiled app in 0.22s
2023.11.30 20:45:32 INFO  compiling app (1 scala source)
2023.11.30 20:45:32 INFO  time: compiled app in 0.27s
nov. 30, 2023 8:45:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1743
2023.11.30 20:45:40 INFO  compiling app (1 scala source)
2023.11.30 20:45:40 INFO  time: compiled app in 0.24s
nov. 30, 2023 8:45:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1786
2023.11.30 20:45:55 INFO  compiling app (1 scala source)
2023.11.30 20:45:55 INFO  time: compiled app in 0.18s
2023.11.30 20:46:31 INFO  compiling app (1 scala source)
2023.11.30 20:46:31 INFO  time: compiled app in 0.24s
2023.11.30 20:46:52 INFO  compiling app (1 scala source)
2023.11.30 20:46:52 INFO  time: compiled app in 0.17s
nov. 30, 2023 8:47:39 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2021
nov. 30, 2023 8:47:42 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2026
2023.11.30 20:48:05 INFO  compiling app (1 scala source)
2023.11.30 20:48:05 INFO  time: compiled app in 0.28s
2023.11.30 20:48:55 INFO  compiling app (1 scala source)
2023.11.30 20:48:55 INFO  time: compiled app in 0.24s
2023.11.30 20:49:06 INFO  compiling app (1 scala source)
2023.11.30 20:49:06 INFO  time: compiled app in 0.35s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1528)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1521)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1519, 1519, 1535)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1519, 1519, 1528)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1519, 1519, 1529)
2023.11.30 20:49:28 INFO  compiling app (1 scala source)
2023.11.30 20:49:28 INFO  time: compiled app in 0.15s
2023.11.30 20:50:09 INFO  compiling app (1 scala source)
2023.11.30 20:50:09 INFO  time: compiled app in 0.16s
2023.11.30 20:50:33 INFO  compiling app (1 scala source)
2023.11.30 20:50:33 INFO  time: compiled app in 0.2s
2023.11.30 20:52:02 INFO  compiling app (1 scala source)
2023.11.30 20:52:02 INFO  time: compiled app in 0.14s
nov. 30, 2023 8:52:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2545
nov. 30, 2023 8:52:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2548
nov. 30, 2023 8:53:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2559
nov. 30, 2023 8:53:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2560
nov. 30, 2023 8:53:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2569
nov. 30, 2023 8:53:03 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2572
nov. 30, 2023 8:53:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2580
2023.11.30 20:53:56 INFO  compiling app (1 scala source)
2023.11.30 20:53:56 INFO  time: compiled app in 0.15s
2023.11.30 20:54:12 INFO  compiling app (1 scala source)
2023.11.30 20:54:12 INFO  time: compiled app in 0.13s
2023.11.30 20:54:38 INFO  compiling app (1 scala source)
2023.11.30 20:54:38 INFO  time: compiled app in 0.17s
nov. 30, 2023 8:54:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2694
nov. 30, 2023 8:56:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2788
2023.11.30 20:56:33 INFO  compiling app (1 scala source)
2023.11.30 20:56:33 INFO  time: compiled app in 0.19s
2023.11.30 20:56:57 INFO  compiling app (1 scala source)
2023.11.30 20:56:57 INFO  time: compiled app in 0.17s
2023.11.30 20:57:08 INFO  compiling app (1 scala source)
2023.11.30 20:57:08 INFO  time: compiled app in 0.12s
2023.11.30 20:57:25 INFO  compiling app (1 scala source)
2023.11.30 20:57:25 INFO  time: compiled app in 0.23s
2023.11.30 20:57:36 INFO  compiling app (1 scala source)
2023.11.30 20:57:36 INFO  time: compiled app in 0.14s
nov. 30, 2023 8:57:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2922
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1668)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1661)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1662)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1663)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1664)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1652, 1652, 1665)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1675)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1668)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1669)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1670)
2023.11.30 20:57:48 INFO  compiling app (1 scala source)
2023.11.30 20:57:48 INFO  time: compiled app in 0.15s
nov. 30, 2023 8:57:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3033
2023.11.30 20:58:13 INFO  compiling app (1 scala source)
2023.11.30 20:58:13 INFO  time: compiled app in 0.18s
2023.11.30 20:59:22 INFO  compiling app (1 scala source)
2023.11.30 20:59:22 INFO  time: compiled app in 73ms
2023.11.30 20:59:31 INFO  compiling app (1 scala source)
2023.11.30 20:59:31 INFO  time: compiled app in 0.13s
nov. 30, 2023 8:59:42 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3259
nov. 30, 2023 9:00:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3312
nov. 30, 2023 9:00:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3318
2023.11.30 21:01:06 WARN  Using indexes to guess the definition of sumMatriz
2023.11.30 21:01:14 INFO  compiling app (1 scala source)
2023.11.30 21:01:14 INFO  time: compiled app in 73ms
2023.11.30 21:01:36 INFO  compiling app (1 scala source)
2023.11.30 21:01:36 INFO  time: compiled app in 0.21s
nov. 30, 2023 9:02:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3619
2023.11.30 21:03:13 INFO  compiling app (1 scala source)
2023.11.30 21:03:13 INFO  time: compiled app in 0.14s
2023.11.30 21:04:23 INFO  compiling app (1 scala source)
2023.11.30 21:04:23 INFO  time: compiled app in 0.15s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1675)
2023.11.30 21:04:27 INFO  compiling app (1 scala source)
2023.11.30 21:04:27 INFO  time: compiled app in 63ms
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1668)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1669)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1670)
2023.11.30 21:04:29 INFO  compiling app (1 scala source)
2023.11.30 21:04:29 INFO  time: compiled app in 0.14s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1669)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1668)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1675)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1668)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1669)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1659, 1659, 1670)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1682)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1675)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1675)
2023.11.30 21:04:38 INFO  compiling app (1 scala source)
2023.11.30 21:04:38 INFO  time: compiled app in 0.14s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1682)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1675)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1666, 1666, 1676)
2023.11.30 21:04:42 INFO  compiling app (1 scala source)
2023.11.30 21:04:42 INFO  time: compiled app in 0.13s
2023.11.30 21:05:04 INFO  compiling app (1 scala source)
2023.11.30 21:05:04 INFO  time: compiled app in 0.1s
2023.11.30 21:05:20 INFO  compiling app (1 scala source)
2023.11.30 21:05:20 INFO  time: compiled app in 0.1s
2023.11.30 21:05:30 INFO  compiling app (1 scala source)
2023.11.30 21:05:30 INFO  time: compiled app in 0.11s
2023.11.30 21:05:50 INFO  compiling app (1 scala source)
2023.11.30 21:05:50 INFO  time: compiled app in 0.14s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1528)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1521)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1522)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1523)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1512, 1512, 1526)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1519, 1519, 1535)
2023.11.30 21:06:02 INFO  compiling app (1 scala source)
2023.11.30 21:06:02 INFO  time: compiled app in 0.12s
2023.11.30 21:06:13 INFO  compiling app (1 scala source)
2023.11.30 21:06:13 INFO  time: compiled app in 0.11s
2023.11.30 21:06:21 INFO  compiling app (1 scala source)
2023.11.30 21:06:22 INFO  time: compiled app in 1.08s
2023.11.30 21:06:22 INFO  compiling app (1 scala source)
2023.11.30 21:06:22 INFO  time: compiled app in 0.28s
nov. 30, 2023 9:06:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4083
2023.11.30 21:06:48 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3h 32m 19.482s)
2023.11.30 21:06:48 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 21:06:48 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 21:06:48 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 21:06:48 INFO  Loaded expression compiler in 4 milliseconds
2023.11.30 21:06:48 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 21:06:48 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 21:06:50 INFO  Loaded all sources and classes in 2 seconds
2023.11.30 21:06:50 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61872 .
2023.11.30 21:06:50 INFO  Attaching to debuggee VM succeeded.
2023.11.30 21:07:22 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:60)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1$adapted(implAlgoritmos.scala:58)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 21:07:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:58)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:68)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 21:07:22 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 21:07:22 INFO  Closing debug server tcp://0.0.0.0:61870
2023.11.30 21:07:22 INFO  Canceling debug proxy for [taller4.Taller4]
nov. 30, 2023 9:07:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.11.30 21:07:43 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 21:07:43 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 21:07:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 21:07:43 INFO  Loaded expression compiler in 1 millisecond
2023.11.30 21:07:43 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 21:07:43 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 21:07:45 INFO  Loaded all sources and classes in 2 seconds
2023.11.30 21:07:45 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61887 .
2023.11.30 21:07:45 INFO  Attaching to debuggee VM succeeded.
2023.11.30 21:08:37 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:60)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1$adapted(implAlgoritmos.scala:58)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.11.30 21:08:37 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:58)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:68)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 21:08:37 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 21:08:37 INFO  Closing debug server tcp://0.0.0.0:61885
2023.11.30 21:08:38 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 21:09:01 INFO  compiling app (1 scala source)
2023.11.30 21:09:01 INFO  time: compiled app in 0.1s
nov. 30, 2023 9:09:18 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4194
2023.11.30 21:09:44 INFO  compiling app (1 scala source)
2023.11.30 21:09:44 INFO  time: compiled app in 0.12s
2023.11.30 21:10:10 INFO  compiling app (1 scala source)
2023.11.30 21:10:10 INFO  time: compiled app in 0.12s
2023.11.30 21:10:27 INFO  compiling app (1 scala source)
2023.11.30 21:10:27 INFO  time: compiled app in 0.12s
2023.11.30 21:10:39 INFO  compiling app (1 scala source)
2023.11.30 21:10:39 INFO  time: compiled app in 0.18s
2023.11.30 21:10:47 INFO  compiling app (1 scala source)
2023.11.30 21:10:47 INFO  time: compiled app in 0.7s
2023.11.30 21:10:47 INFO  compiling app (1 scala source)
2023.11.30 21:10:47 INFO  time: compiled app in 0.2s
2023.11.30 22:16:39 INFO  compiling app (1 scala source)
2023.11.30 22:16:39 INFO  time: compiled app in 0.12s
2023.11.30 22:16:47 INFO  compiling app (1 scala source)
2023.11.30 22:16:47 INFO  time: compiled app in 0.78s
2023.11.30 22:17:03 INFO  compiling app (1 scala source)
2023.11.30 22:17:03 INFO  time: compiled app in 0.78s
2023.11.30 22:18:59 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4h 44m 31.359s)
2023.11.30 22:18:59 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 22:18:59 INFO  compiling app (1 scala source)
2023.11.30 22:18:59 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 22:19:00 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 22:18:59 INFO  Loaded expression compiler in 3 milliseconds
2023.11.30 22:18:59 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:18:59 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:19:01 INFO  time: compiled app in 1.24s
2023.11.30 22:19:02 INFO  Loaded all sources and classes in 2 seconds
2023.11.30 22:19:02 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62147 .
2023.11.30 22:19:02 INFO  Attaching to debuggee VM succeeded.
2023.11.30 22:19:50 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.30 22:19:50 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:59)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 22:19:50 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 22:19:50 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:58)
2023.11.30 22:19:50 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:67)
2023.11.30 22:19:50 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 22:19:50 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 22:19:50 INFO  Closing debug server tcp://0.0.0.0:62145
2023.11.30 22:19:50 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 22:20:06 INFO  compiling app (1 scala source)
2023.11.30 22:20:06 INFO  time: compiled app in 0.82s
2023.11.30 22:20:10 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4h 45m 41.534s)
nov. 30, 2023 10:20:10 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.11.30 22:20:10 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 22:20:10 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 22:20:10 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 22:20:10 INFO  Loaded expression compiler in 0 milliseconds
2023.11.30 22:20:10 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:20:10 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:20:11 INFO  Loaded all sources and classes in 1 second
2023.11.30 22:20:11 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62165 .
2023.11.30 22:20:11 INFO  Attaching to debuggee VM succeeded.
2023.11.30 22:20:31 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.30 22:20:31 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:59)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 22:20:31 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 22:20:31 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:58)
2023.11.30 22:20:31 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:67)
2023.11.30 22:20:31 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 22:20:31 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 22:20:31 INFO  Closing debug server tcp://0.0.0.0:62162
2023.11.30 22:20:32 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 22:21:57 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 22:21:57 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 22:21:57 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 22:21:57 INFO  Loaded expression compiler in 0 milliseconds
2023.11.30 22:21:57 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:21:57 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 22:21:59 INFO  Loaded all sources and classes in 1 second
2023.11.30 22:21:59 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62177 .
2023.11.30 22:21:59 INFO  Attaching to debuggee VM succeeded.
2023.11.30 22:23:16 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.11.30 22:23:16 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:59)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.11.30 22:23:16 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.11.30 22:23:16 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:58)
2023.11.30 22:23:16 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:67)
2023.11.30 22:23:16 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.11.30 22:23:16 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.11.30 22:23:16 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 22:23:16 INFO  Closing debug server tcp://0.0.0.0:62175
2023.11.30 22:23:24 INFO  compiling app (1 scala source)
2023.11.30 22:23:24 INFO  time: compiled app in 0.7s
2023.11.30 22:25:22 INFO  compiling app (1 scala source)
2023.11.30 22:25:22 INFO  time: compiled app in 0.12s
2023.11.30 22:26:19 INFO  compiling app (1 scala source)
2023.11.30 22:26:19 INFO  time: compiled app in 0.12s
2023.11.30 22:26:28 INFO  compiling app (1 scala source)
2023.11.30 22:26:28 INFO  time: compiled app in 0.1s
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.11.30 22:26:43 INFO  compiling app (1 scala source)
2023.11.30 22:26:43 INFO  time: compiled app in 93ms
2023.11.30 22:26:46 INFO  compiling app (1 scala source)
2023.11.30 22:26:46 INFO  time: compiled app in 99ms
2023.11.30 22:26:59 INFO  compiling app (1 scala source)
2023.11.30 22:26:59 INFO  time: compiled app in 0.1s
2023.11.30 22:27:04 INFO  compiling app (1 scala source)
2023.11.30 22:27:04 INFO  time: compiled app in 92ms
nov. 30, 2023 10:27:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5237
nov. 30, 2023 10:27:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5259
2023.11.30 22:27:58 INFO  compiling app (1 scala source)
2023.11.30 22:27:58 INFO  time: compiled app in 0.11s
Exception in thread "pool-5-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
nov. 30, 2023 10:28:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5367
2023.11.30 22:28:11 INFO  compiling app (1 scala source)
2023.11.30 22:28:11 INFO  time: compiled app in 0.11s
2023.11.30 22:29:11 INFO  compiling app (1 scala source)
2023.11.30 22:29:11 INFO  time: compiled app in 0.12s
2023.11.30 22:29:21 INFO  compiling app (1 scala source)
2023.11.30 22:29:21 INFO  time: compiled app in 0.11s
nov. 30, 2023 10:29:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5497
2023.11.30 22:30:08 INFO  compiling app (1 scala source)
2023.11.30 22:30:08 INFO  time: compiled app in 0.1s
2023.11.30 22:30:19 INFO  compiling app (1 scala source)
2023.11.30 22:30:19 INFO  time: compiled app in 0.1s
nov. 30, 2023 10:30:22 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5589
2023.11.30 22:30:26 INFO  compiling app (1 scala source)
2023.11.30 22:30:26 INFO  time: compiled app in 0.84s
2023.11.30 22:30:45 INFO  compiling app (1 scala source)
2023.11.30 22:30:45 INFO  time: compiled app in 0.8s
2023.11.30 22:31:12 INFO  compiling app (1 scala source)
2023.11.30 22:31:12 INFO  time: compiled app in 0.66s
2023.11.30 22:36:45 INFO  compiling app (1 scala source)
2023.11.30 22:36:45 INFO  time: compiled app in 71ms
2023.11.30 22:36:49 INFO  compiling app (1 scala source)
2023.11.30 22:36:49 INFO  time: compiled app in 60ms
2023.11.30 22:36:58 INFO  compiling app (1 scala source)
2023.11.30 22:36:58 INFO  time: compiled app in 0.31s
2023.11.30 22:37:06 INFO  compiling app (1 scala source)
2023.11.30 22:37:06 INFO  time: compiled app in 0.28s
2023.11.30 22:37:30 INFO  compiling app (1 scala source)
2023.11.30 22:37:30 INFO  time: compiled app in 63ms
2023.11.30 22:37:34 INFO  compiling app (1 scala source)
2023.11.30 22:37:34 INFO  time: compiled app in 0.87s
2023.11.30 23:18:59 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 44m 31.465s)
2023.11.30 23:19:00 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.11.30 23:19:00 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.11.30 23:19:00 INFO  Starting debug proxy for [taller4.Taller4]
2023.11.30 23:18:59 INFO  Loaded expression compiler in 1 millisecond
2023.11.30 23:18:59 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 23:18:59 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.11.30 23:19:03 INFO  Loaded all sources and classes in 2 seconds
2023.11.30 23:19:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62573 .
2023.11.30 23:19:03 INFO  Attaching to debuggee VM succeeded.
2023.11.30 23:21:54 INFO  Closing debug server tcp://0.0.0.0:62571
2023.11.30 23:21:54 INFO  Canceling debug proxy for [taller4.Taller4]
2023.11.30 23:23:11 INFO  Shutting down server
2023.11.30 23:23:11 INFO  shutting down Metals
2023.11.30 23:23:11 INFO  Shut down connection with build server.
2023.11.30 23:23:11 INFO  Exiting server
2023.12.01 07:17:17 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.01 07:17:17 INFO  time: initialize in 0.31s
2023.12.01 07:17:25 INFO  Attempting to connect to the build server...
2023.12.01 07:17:25 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.01 07:17:27 INFO  skipping build import with status 'Installed'
2023.12.01 07:17:43 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.01 07:17:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.01 07:17:47 INFO  time: Connected to build server in 22s
2023.12.01 07:17:47 INFO  Connected to Build server: Bloop v1.5.11
2023.12.01 07:17:49 INFO  time: Imported build in 0.81s
2023.12.01 07:18:02 INFO  time: indexed workspace in 13s
2023.12.01 07:18:13 INFO  compiling app-test (1 scala source)
2023.12.01 07:18:22 INFO  time: compiled app-test in 8.99s
2023.12.01 07:27:53 INFO  Shutting down server
2023.12.01 07:27:53 INFO  shutting down Metals
2023.12.01 07:27:54 INFO  Shut down connection with build server.
2023.12.01 07:27:55 INFO  Exiting server
2023.12.01 08:05:19 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.01 08:05:19 INFO  time: initialize in 0.13s
2023.12.01 08:05:22 INFO  Attempting to connect to the build server...
2023.12.01 08:05:22 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.01 08:05:23 INFO  skipping build import with status 'Installed'
2023.12.01 08:05:23 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.01 08:05:23 INFO  time: Connected to build server in 1.66s
2023.12.01 08:05:23 INFO  Connected to Build server: Bloop v1.5.11
2023.12.01 08:05:24 INFO  time: Imported build in 0.25s
2023.12.01 08:05:47 INFO  time: indexed workspace in 23s
2023.12.01 08:45:38 INFO  Shutting down server
2023.12.01 08:45:38 INFO  shutting down Metals
2023.12.01 08:45:39 INFO  Shut down connection with build server.
2023.12.01 08:45:38 INFO  Exiting server
2023.12.01 09:07:44 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.01 09:07:45 INFO  time: initialize in 0.15s
2023.12.01 09:07:50 INFO  Attempting to connect to the build server...
2023.12.01 09:07:50 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.01 09:07:52 INFO  skipping build import with status 'Installed'
2023.12.01 09:08:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.01 09:08:19 INFO  time: Connected to build server in 29s
2023.12.01 09:08:19 INFO  Connected to Build server: Bloop v1.5.11
2023.12.01 09:08:19 INFO  time: Imported build in 0.67s
2023.12.01 09:08:38 INFO  time: indexed workspace in 18s
2023.12.01 09:08:51 INFO  compiling app-test (1 scala source)
2023.12.01 09:08:58 INFO  time: compiled app-test in 6.58s
dic. 01, 2023 9:08:59 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.01 14:44:45 INFO  Shutting down server
2023.12.01 14:44:45 INFO  shutting down Metals
2023.12.01 14:44:45 INFO  Shut down connection with build server.
2023.12.01 14:44:45 INFO  Exiting server
2023.12.01 19:15:19 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.01 19:15:23 INFO  Attempting to connect to the build server...
2023.12.01 19:15:23 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.01 19:15:24 INFO  skipping build import with status 'Installed'
2023.12.01 19:15:24 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.01 19:15:24 INFO  time: Connected to build server in 1.77s
2023.12.01 19:15:24 INFO  Connected to Build server: Bloop v1.5.11
2023.12.01 19:15:25 INFO  time: Imported build in 0.73s
2023.12.01 19:15:54 INFO  time: indexed workspace in 28s
2023.12.02 00:17:44 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:17:44 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:17:45 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:17:46 INFO  Loaded expression compiler in 1 second
2023.12.02 00:17:46 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:17:46 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:17:50 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 00:17:50 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54898 .
2023.12.02 00:17:50 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:22:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:22:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

dic. 02, 2023 12:22:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 00:22:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:22:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 00:22:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:22:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 00:22:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:22:20 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 00:22:22 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:22:22 INFO  Closing debug server tcp://0.0.0.0:54894
2023.12.02 00:22:27 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:22:27 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:22:27 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:22:27 INFO  Loaded expression compiler in 4 milliseconds
2023.12.02 00:22:27 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:22:27 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:22:29 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:22:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54919 .
2023.12.02 00:22:29 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 12:22:47 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.12.02 00:23:41 INFO  compiling app (1 scala source)
2023.12.02 00:23:42 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:23:41 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 8m 17.861s)
2023.12.02 00:23:41 INFO  compiling app (1 scala source)
2023.12.02 00:23:43 INFO  time: compiled app in 1.26s
2023.12.02 00:23:43 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:23:43 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:23:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:23:43 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 00:23:43 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:23:43 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:23:45 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:23:45 INFO  Trying to attach to remote debuggee VM 127.0.0.1:54935 .
2023.12.02 00:23:45 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:25:21 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 02, 2023 12:25:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 00:25:21 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 00:25:21 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 00:25:21 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:22 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 00:25:24 INFO  Closing debug server tcp://0.0.0.0:54933
2023.12.02 00:25:24 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:25:35 INFO  compiling app (1 scala source)
2023.12.02 00:25:35 INFO  time: compiled app in 0.88s
dic. 02, 2023 12:25:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 00:25:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 00:25:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:25:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

dic. 02, 2023 12:25:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 02, 2023 12:33:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 612
2023.12.02 00:33:17 INFO  compiling app (1 scala source)
2023.12.02 00:33:17 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 17m 53.011s)
2023.12.02 00:33:17 INFO  compiling app (1 scala source)
2023.12.02 00:33:19 INFO  time: compiled app in 2.31s
dic. 02, 2023 12:33:20 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 02, 2023 12:33:29 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 00:33:29 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:33:29 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:33:30 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:33:30 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 00:33:30 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:33:30 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:33:32 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 00:33:32 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55009 .
2023.12.02 00:33:32 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:33:54 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 00:33:54 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 00:33:54 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 00:33:54 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:33:54 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:64)
2023.12.02 00:33:54 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 00:33:54 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 00:33:54 INFO  Closing debug server tcp://0.0.0.0:55007
2023.12.02 00:33:54 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 12:34:36 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 648
2023.12.02 00:34:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.02 00:34:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.02 00:34:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.02 00:34:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.02 00:34:43 INFO  compiling app (1 scala source)
2023.12.02 00:34:44 INFO  time: compiled app in 1.73s
2023.12.02 00:35:12 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 19m 47.625s)
2023.12.02 00:35:12 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:35:12 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:35:12 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:35:12 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 00:35:12 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:35:12 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:35:14 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:35:14 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55037 .
2023.12.02 00:35:14 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:35:22 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 00:35:22 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 00:35:22 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 00:35:22 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:35:22 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:64)
2023.12.02 00:35:22 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 00:35:22 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 00:35:22 INFO  Closing debug server tcp://0.0.0.0:55034
2023.12.02 00:35:22 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:36:05 INFO  compiling app (1 scala source)
2023.12.02 00:36:05 INFO  time: compiled app in 0.48s
dic. 02, 2023 12:36:10 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 749
2023.12.02 00:36:15 INFO  compiling app (1 scala source)
2023.12.02 00:36:15 INFO  time: compiled app in 0.41s
2023.12.02 00:36:35 INFO  compiling app (1 scala source)
2023.12.02 00:36:35 INFO  time: compiled app in 0.35s
2023.12.02 00:36:43 INFO  compiling app (1 scala source)
2023.12.02 00:36:43 INFO  time: compiled app in 0.28s
2023.12.02 00:38:05 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 22m 40.691s)
2023.12.02 00:38:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:38:05 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:38:05 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:38:05 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 00:38:05 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:38:05 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:38:07 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:38:07 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55072 .
2023.12.02 00:38:07 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:42:51 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 00:42:51 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 00:42:51 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 00:42:51 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:57)
2023.12.02 00:42:51 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:64)
2023.12.02 00:42:51 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 00:42:51 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 00:42:51 INFO  Closing debug server tcp://0.0.0.0:55070
2023.12.02 00:42:51 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:43:06 INFO  compiling app (1 scala source)
2023.12.02 00:43:07 INFO  time: compiled app in 1.54s
2023.12.02 00:43:41 INFO  compiling app (1 scala source)
2023.12.02 00:43:42 INFO  time: compiled app in 1.42s
2023.12.02 00:44:02 INFO  compiling app (1 scala source)
2023.12.02 00:44:03 INFO  time: compiled app in 1.28s
2023.12.02 00:44:11 INFO  compiling app (1 scala source)
2023.12.02 00:44:11 INFO  time: compiled app in 0.95s
dic. 02, 2023 12:53:26 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1303
2023.12.02 00:53:31 INFO  compiling app (1 scala source)
2023.12.02 00:53:32 INFO  time: compiled app in 1.23s
2023.12.02 00:53:42 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:53:42 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:53:42 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:53:42 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 00:53:42 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:53:42 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:53:45 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 00:53:45 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55228 .
2023.12.02 00:53:45 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:53:50 INFO  Closing debug server tcp://0.0.0.0:55226
2023.12.02 00:53:50 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:53:57 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:53:57 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:53:57 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:53:57 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 00:53:57 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:53:57 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:53:59 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:53:59 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55239 .
2023.12.02 00:53:59 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:54:41 INFO  Closing debug server tcp://0.0.0.0:55237
2023.12.02 00:54:41 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:55:14 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:55:14 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:55:14 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:55:14 INFO  Loaded expression compiler in 0 milliseconds
2023.12.02 00:55:14 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:55:14 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:55:16 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:55:16 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55256 .
2023.12.02 00:55:16 INFO  Attaching to debuggee VM succeeded.
2023.12.02 00:57:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:57:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 02, 2023 12:57:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 00:57:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:57:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 00:57:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:57:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 00:57:37 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:57:38 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 00:57:39 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 00:57:39 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 00:57:39 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 00:57:39 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 00:57:40 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 00:57:40 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:57:40 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 00:57:41 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 12:57:41 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

2023.12.02 00:57:41 INFO  Loaded all sources and classes in 1 second
2023.12.02 00:57:41 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55275 .
2023.12.02 00:57:41 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 12:58:04 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 01:04:44 INFO  Closing debug server tcp://0.0.0.0:55273
2023.12.02 01:04:44 INFO  Canceling debug proxy for [taller4.Taller4]
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
dic. 02, 2023 1:04:51 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1554
2023.12.02 01:04:52 INFO  compiling app (1 scala source)
2023.12.02 01:04:52 INFO  time: compiled app in 0.86s
2023.12.02 01:04:54 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 01:04:54 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 01:04:54 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 01:04:54 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 01:04:54 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:04:54 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:04:56 INFO  Loaded all sources and classes in 1 second
2023.12.02 01:04:56 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55325 .
2023.12.02 01:04:56 INFO  Attaching to debuggee VM succeeded.
2023.12.02 01:05:05 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 01:05:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 01:05:05 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 01:05:05 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 01:05:06 INFO  Loaded expression compiler in 4 milliseconds
2023.12.02 01:05:06 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:05:06 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:05:07 INFO  Loaded all sources and classes in 1 second
2023.12.02 01:05:07 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55336 .
2023.12.02 01:05:07 INFO  Attaching to debuggee VM succeeded.
2023.12.02 01:27:06 INFO  compiling app (1 scala source)
2023.12.02 01:27:06 INFO  time: compiled app in 0.19s
2023.12.02 01:29:02 INFO  compiling app (1 scala source)
2023.12.02 01:29:02 INFO  time: compiled app in 0.18s
2023.12.02 01:29:16 INFO  compiling app (1 scala source)
2023.12.02 01:29:16 INFO  time: compiled app in 0.19s
2023.12.02 01:29:48 INFO  compiling app (1 scala source)
2023.12.02 01:29:48 INFO  time: compiled app in 0.16s
2023.12.02 01:29:59 INFO  compiling app (1 scala source)
2023.12.02 01:29:59 INFO  time: compiled app in 0.23s
2023.12.02 01:30:27 INFO  compiling app (1 scala source)
2023.12.02 01:30:27 INFO  time: compiled app in 0.16s
2023.12.02 01:30:48 INFO  compiling app (1 scala source)
2023.12.02 01:30:49 INFO  time: compiled app in 1.12s
2023.12.02 01:30:53 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 01:30:53 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 01:30:53 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 01:30:54 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 01:30:54 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 01:30:54 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:30:54 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 01:30:56 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 01:30:56 INFO  Trying to attach to remote debuggee VM 127.0.0.1:55576 .
2023.12.02 01:30:56 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 1:30:59 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 01:47:01 INFO  Closing debug server tcp://0.0.0.0:55573
2023.12.02 01:47:01 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 01:47:03 INFO  Shutting down server
2023.12.02 01:47:03 INFO  shutting down Metals
2023.12.02 01:47:03 INFO  Shut down connection with build server.
2023.12.02 01:47:03 INFO  Exiting server
2023.12.02 11:47:30 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.02 11:47:33 INFO  Attempting to connect to the build server...
2023.12.02 11:47:33 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.02 11:47:34 INFO  skipping build import with status 'Installed'
2023.12.02 11:47:50 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.02 11:47:55 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.02 11:47:55 INFO  time: Connected to build server in 22s
2023.12.02 11:47:55 INFO  Connected to Build server: Bloop v1.5.11
2023.12.02 11:47:56 INFO  time: Imported build in 0.55s
2023.12.02 11:48:07 INFO  time: indexed workspace in 10s
2023.12.02 11:48:15 INFO  compiling app-test (1 scala source)
2023.12.02 11:48:22 INFO  time: compiled app-test in 6.57s
dic. 02, 2023 11:48:22 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 02, 2023 11:51:53 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 49
dic. 02, 2023 11:52:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 143
dic. 02, 2023 11:52:54 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 187
dic. 02, 2023 11:52:54 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 191
dic. 02, 2023 11:52:54 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 192
dic. 02, 2023 11:52:54 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 190
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1991, 1991, 2007)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1991, 1991, 2000)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1991, 1991, 2002)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1991, 1991, 2002)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1991, 1991, 2002)
dic. 02, 2023 11:56:00 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 533
2023.12.02 11:56:38 INFO  compiling app (1 scala source)
2023.12.02 11:56:40 INFO  time: compiled app in 1.43s
2023.12.02 11:56:43 INFO  compiling app (1 scala source)
2023.12.02 11:56:43 INFO  time: compiled app in 0.71s
dic. 02, 2023 11:56:53 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 609
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1488, 1488, 1504)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1488, 1488, 1497)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1488, 1488, 1504)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1488, 1488, 1497)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1488, 1488, 1504)
dic. 02, 2023 11:57:03 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 684
dic. 02, 2023 11:57:10 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 708
dic. 02, 2023 11:57:13 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 723
2023.12.02 11:58:46 INFO  compiling app (1 scala source)
2023.12.02 11:58:46 INFO  time: compiled app in 0.71s
dic. 02, 2023 11:59:16 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 927
2023.12.02 11:59:19 INFO  compiling app (1 scala source)
2023.12.02 11:59:19 INFO  time: compiled app in 0.44s
dic. 02, 2023 11:59:38 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1005
2023.12.02 11:59:41 INFO  compiling app (1 scala source)
2023.12.02 11:59:41 INFO  time: compiled app in 0.38s
2023.12.02 11:59:44 INFO  compiling app (1 scala source)
2023.12.02 11:59:47 INFO  time: compiled app in 3s
dic. 02, 2023 12:01:16 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:01:18 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:01:18 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:01:19 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:01:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1317
2023.12.02 12:01:40 INFO  compiling app (1 scala source)
2023.12.02 12:01:40 INFO  time: compiled app in 0.38s
2023.12.02 12:01:49 INFO  compiling app (1 scala source)
2023.12.02 12:01:49 INFO  time: compiled app in 0.31s
2023.12.02 12:02:09 INFO  compiling app (1 scala source)
2023.12.02 12:02:09 INFO  time: compiled app in 0.35s
2023.12.02 12:02:23 INFO  compiling app (1 scala source)
2023.12.02 12:02:23 INFO  time: compiled app in 0.66s
dic. 02, 2023 12:02:37 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1448
2023.12.02 12:02:54 INFO  compiling app (1 scala source)
2023.12.02 12:02:54 INFO  time: compiled app in 0.31s
2023.12.02 12:02:59 INFO  compiling app (1 scala source)
2023.12.02 12:02:59 INFO  time: compiled app in 0.4s
2023.12.02 12:03:08 INFO  compiling app (1 scala source)
2023.12.02 12:03:08 INFO  time: compiled app in 0.39s
2023.12.02 12:03:13 INFO  compiling app (1 scala source)
2023.12.02 12:03:15 INFO  time: compiled app in 1.8s
2023.12.02 12:03:28 INFO  compiling app (1 scala source)
2023.12.02 12:03:30 INFO  time: compiled app in 2.15s
dic. 02, 2023 12:04:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1636
2023.12.02 12:04:05 INFO  compiling app (1 scala source)
2023.12.02 12:04:07 INFO  time: compiled app in 1.58s
2023.12.02 12:04:30 INFO  compiling app (1 scala source)
2023.12.02 12:04:31 INFO  time: compiled app in 1.56s
2023.12.02 12:05:05 INFO  compiling app (1 scala source)
2023.12.02 12:05:07 INFO  time: compiled app in 1.5s
dic. 02, 2023 12:06:18 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1798
2023.12.02 12:06:55 INFO  compiling app (1 scala source)
2023.12.02 12:06:55 INFO  time: compiled app in 0.12s
2023.12.02 12:07:04 INFO  compiling app (1 scala source)
2023.12.02 12:07:04 INFO  time: compiled app in 0.47s
2023.12.02 12:07:21 INFO  compiling app (1 scala source)
2023.12.02 12:07:21 INFO  time: compiled app in 0.13s
2023.12.02 12:07:31 INFO  compiling app (1 scala source)
2023.12.02 12:07:31 INFO  time: compiled app in 0.33s
2023.12.02 12:07:37 INFO  compiling app (1 scala source)
2023.12.02 12:07:37 INFO  time: compiled app in 0.34s
2023.12.02 12:08:25 INFO  compiling app (1 scala source)
2023.12.02 12:08:25 INFO  time: compiled app in 0.25s
2023.12.02 12:09:33 INFO  compiling app (1 scala source)
2023.12.02 12:09:33 INFO  time: compiled app in 0.32s
2023.12.02 12:09:58 INFO  compiling app (1 scala source)
2023.12.02 12:09:58 INFO  time: compiled app in 0.34s
2023.12.02 12:10:31 INFO  compiling app (1 scala source)
2023.12.02 12:10:31 INFO  time: compiled app in 0.26s
dic. 02, 2023 12:11:07 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:11:08 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:11:16 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2262
2023.12.02 12:18:35 INFO  compiling app (1 scala source)
2023.12.02 12:18:35 INFO  time: compiled app in 0.27s
2023.12.02 12:18:46 INFO  compiling app (1 scala source)
2023.12.02 12:18:46 INFO  time: compiled app in 0.2s
2023.12.02 12:20:00 INFO  compiling app (1 scala source)
2023.12.02 12:20:00 INFO  time: compiled app in 0.24s
2023.12.02 12:20:05 INFO  compiling app (1 scala source)
2023.12.02 12:20:05 INFO  time: compiled app in 0.23s
2023.12.02 12:20:16 INFO  compiling app (1 scala source)
2023.12.02 12:20:16 INFO  time: compiled app in 0.24s
2023.12.02 12:21:16 INFO  compiling app (1 scala source)
2023.12.02 12:21:16 INFO  time: compiled app in 0.26s
2023.12.02 12:21:33 INFO  compiling app (1 scala source)
2023.12.02 12:21:33 INFO  time: compiled app in 0.24s
2023.12.02 12:21:41 INFO  compiling app (1 scala source)
2023.12.02 12:21:41 INFO  time: compiled app in 0.23s
2023.12.02 12:21:48 INFO  compiling app (1 scala source)
2023.12.02 12:21:48 INFO  time: compiled app in 0.17s
dic. 02, 2023 12:23:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2804
dic. 02, 2023 12:24:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2985
dic. 02, 2023 12:24:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2986
2023.12.02 12:25:07 INFO  compiling app (1 scala source)
2023.12.02 12:25:07 INFO  time: compiled app in 0.35s
2023.12.02 12:25:24 INFO  compiling app (1 scala source)
2023.12.02 12:25:24 INFO  time: compiled app in 0.23s
2023.12.02 12:26:11 INFO  compiling app (1 scala source)
2023.12.02 12:26:11 INFO  time: compiled app in 0.21s
2023.12.02 12:26:19 INFO  compiling app (1 scala source)
2023.12.02 12:26:19 INFO  time: compiled app in 0.23s
dic. 02, 2023 12:31:16 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3242
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1530, 1530, 1546)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1530, 1530, 1540)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1530, 1530, 1541)
dic. 02, 2023 12:32:27 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3365
2023.12.02 12:32:34 INFO  compiling app (1 scala source)
2023.12.02 12:32:34 INFO  time: compiled app in 0.22s
2023.12.02 12:32:50 INFO  compiling app (1 scala source)
2023.12.02 12:32:50 INFO  time: compiled app in 0.4s
2023.12.02 12:33:28 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:59: error: malformed xml literal, expected:
Expected ([\t\n\r ] | "/>" | ">"):59:27, found ")\r\n      }"
        if(posicion+1 <tam)
                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getXml(LegacyScanner.scala:937)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchLT$1(LegacyScanner.scala:295)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:303)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 12:33:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:59: error: malformed xml literal, expected:
Expected ([\t\n\r ] | "/>" | ">"):59:31, found ")\r\n      }"
        if(posicion+1 <tamanio)
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getXml(LegacyScanner.scala:937)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchLT$1(LegacyScanner.scala:295)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:303)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 12:33:32 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:59: error: malformed xml literal, expected:
Expected ([\t\n\r ] | "/>" | ">"):59:31, found "){}\r\n     "
        if(posicion+1 <tamanio){}
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getXml(LegacyScanner.scala:937)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchLT$1(LegacyScanner.scala:295)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:303)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 12:33:33 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:59: error: malformed xml literal, expected:
Expected ([\t\n\r ] | "/>" | ">"):59:31, found "){\r\n      "
        if(posicion+1 <tamanio){
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getXml(LegacyScanner.scala:937)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchLT$1(LegacyScanner.scala:295)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:303)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 12:33:33 INFO  compiling app (1 scala source)
2023.12.02 12:33:33 INFO  time: compiled app in 0.12s
2023.12.02 12:33:33 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:59: error: malformed xml literal, expected:
Expected ([\t\n\r ] | "/>" | ">"):59:31, found "){\r\n      "
        if(posicion+1 <tamanio){
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getXml(LegacyScanner.scala:937)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchLT$1(LegacyScanner.scala:295)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:303)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 12:33:43 INFO  compiling app (1 scala source)
2023.12.02 12:33:43 INFO  time: compiled app in 0.22s
2023.12.02 12:34:02 INFO  compiling app (1 scala source)
2023.12.02 12:34:02 INFO  time: compiled app in 0.21s
2023.12.02 12:34:08 INFO  compiling app (1 scala source)
2023.12.02 12:34:08 INFO  time: compiled app in 0.34s
dic. 02, 2023 12:34:21 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3678
dic. 02, 2023 12:35:18 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3821
2023.12.02 12:35:21 INFO  compiling app (1 scala source)
2023.12.02 12:35:21 INFO  time: compiled app in 0.27s
2023.12.02 12:35:41 INFO  compiling app (1 scala source)
2023.12.02 12:35:41 INFO  time: compiled app in 0.25s
2023.12.02 12:35:54 INFO  compiling app (1 scala source)
2023.12.02 12:35:54 INFO  time: compiled app in 0.21s
2023.12.02 12:36:09 INFO  compiling app (1 scala source)
2023.12.02 12:36:09 INFO  time: compiled app in 0.2s
dic. 02, 2023 12:36:22 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4007
2023.12.02 12:36:23 INFO  compiling app (1 scala source)
2023.12.02 12:36:23 INFO  time: compiled app in 0.23s
2023.12.02 12:37:07 INFO  compiling app (1 scala source)
2023.12.02 12:37:07 INFO  time: compiled app in 0.2s
2023.12.02 12:37:35 INFO  compiling app (1 scala source)
2023.12.02 12:37:37 INFO  time: compiled app in 1.73s
2023.12.02 12:38:24 INFO  compiling app (1 scala source)
2023.12.02 12:38:24 INFO  time: compiled app in 0.34s
dic. 02, 2023 12:38:32 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:38:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4237
dic. 02, 2023 12:38:40 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4245
dic. 02, 2023 12:38:40 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4246
2023.12.02 12:38:47 INFO  compiling app (1 scala source)
2023.12.02 12:38:48 INFO  time: compiled app in 1.21s
2023.12.02 12:38:55 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 12:38:55 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 12:38:56 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 12:38:57 INFO  Loaded expression compiler in 1 second
2023.12.02 12:38:57 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:38:57 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:39:03 INFO  Loaded all sources and classes in 6 seconds
2023.12.02 12:39:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60681 .
2023.12.02 12:39:03 INFO  Attaching to debuggee VM succeeded.
2023.12.02 12:41:11 INFO  compiling app (1 scala source)
2023.12.02 12:41:13 INFO  time: compiled app in 1.26s
2023.12.02 12:41:16 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 12:41:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 12:41:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 12:41:16 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 12:41:16 INFO  Loaded expression compiler in 9 milliseconds
2023.12.02 12:41:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:41:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:41:19 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 12:41:19 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60706 .
2023.12.02 12:41:19 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 12:41:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4373
2023.12.02 12:42:50 INFO  Closing debug server tcp://0.0.0.0:60704
2023.12.02 12:42:50 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 12:43:25 INFO  compiling app (1 scala source)
2023.12.02 12:43:26 INFO  time: compiled app in 1.38s
2023.12.02 12:43:48 INFO  compiling app (1 scala source)
2023.12.02 12:43:48 INFO  time: compiled app in 0.16s
2023.12.02 12:43:54 INFO  compiling app (1 scala source)
2023.12.02 12:43:54 INFO  time: compiled app in 0.15s
2023.12.02 12:44:30 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 56m 34.485s)
2023.12.02 12:44:30 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 12:44:30 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 12:44:30 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 12:44:30 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 12:44:30 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:44:30 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:44:33 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 12:44:33 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60736 .
2023.12.02 12:44:33 INFO  Attaching to debuggee VM succeeded.
2023.12.02 12:45:14 INFO  compiling app (1 scala source)
2023.12.02 12:45:14 INFO  time: compiled app in 0.13s
2023.12.02 12:45:36 INFO  compiling app (1 scala source)
2023.12.02 12:45:36 INFO  time: compiled app in 0.57s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2650)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2643)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2644)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2645)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2647)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2641, 2641, 2657)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2641, 2641, 2650)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2641, 2641, 2651)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2641, 2641, 2652)
2023.12.02 12:46:07 INFO  compiling app (1 scala source)
2023.12.02 12:46:07 INFO  time: compiled app in 0.28s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2648)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2634, 2634, 2648)
dic. 02, 2023 12:46:14 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4897
2023.12.02 12:46:23 INFO  compiling app (1 scala source)
2023.12.02 12:46:25 INFO  time: compiled app in 1.94s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2214, 2214, 2230)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2214, 2214, 2223)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2214, 2214, 2224)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2221, 2221, 2237)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2221, 2221, 2230)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2221, 2221, 2231)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2221, 2221, 2232)
dic. 02, 2023 12:47:16 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
dic. 02, 2023 12:47:18 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: Cannot invoke "scala.reflect.internal.Types$Type.decls()" because the return value of "scala.reflect.internal.Trees$Tree.tpe()" is null
2023.12.02 12:47:27 INFO  compiling app (1 scala source)
2023.12.02 12:47:28 INFO  time: compiled app in 1.48s
dic. 02, 2023 12:48:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5282
dic. 02, 2023 12:48:20 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5316
2023.12.02 12:48:31 INFO  compiling app (1 scala source)
2023.12.02 12:48:32 INFO  time: compiled app in 1.32s
2023.12.02 12:48:44 INFO  compiling app (1 scala source)
2023.12.02 12:48:44 INFO  time: compiled app in 0.21s
2023.12.02 12:48:49 INFO  compiling app (1 scala source)
2023.12.02 12:48:51 INFO  time: compiled app in 1.3s
2023.12.02 12:48:57 INFO  compiling app (1 scala source)
2023.12.02 12:48:59 INFO  time: compiled app in 1.42s
2023.12.02 12:49:00 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 12:49:00 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 12:49:00 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 12:49:00 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 12:49:00 INFO  Loaded expression compiler in 4 milliseconds
2023.12.02 12:49:00 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:49:00 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:49:03 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 12:49:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60828 .
2023.12.02 12:49:03 INFO  Attaching to debuggee VM succeeded.
2023.12.02 12:50:08 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 12:50:08 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 12:50:08 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 12:50:08 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 12:50:08 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 12:50:08 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:50:08 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 12:50:13 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 12:50:13 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60844 .
2023.12.02 12:50:13 INFO  Attaching to debuggee VM succeeded.
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2279)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2272)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2273)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2274)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2276)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2277)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2276)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2275)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2274)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2276)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2263, 2263, 2277)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2270, 2270, 2286)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2270, 2270, 2279)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2270, 2270, 2280)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2270, 2270, 2281)
2023.12.02 12:54:18 INFO  compiling app (1 scala source)
2023.12.02 12:54:20 INFO  time: compiled app in 1.68s
2023.12.02 12:55:00 INFO  compiling app (1 scala source)
2023.12.02 12:55:00 INFO  time: compiled app in 0.11s
2023.12.02 12:55:10 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 12:56:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5999
Exception in thread "pool-6-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-6-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-6-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.02 12:58:13 INFO  Disconnecting from Bloop session...
2023.12.02 12:58:13 INFO  Cancelling compilation on Bloop server
2023.12.02 12:58:13 INFO  Cancelling compilation on Bloop server
2023.12.02 12:58:15 ERROR timeout: build server 'bloop' during shutdown
2023.12.02 12:58:15 INFO  Attempting to connect to the build server...
2023.12.02 12:58:15 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
dic. 02, 2023 12:58:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$: Cannot run class, since the workspace has errors.
	at scala.meta.internal.metals.debug.DebugProvider$WorkspaceErrorsException$.<clinit>(DebugProvider.scala:925)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:467)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at jdk.internal.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.12.02 12:59:03 INFO  Shutting down server
2023.12.02 12:59:03 INFO  shutting down Metals
dic. 02, 2023 12:59:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$2(BuildServerConnection.scala:361)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:210)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$1(BuildServerConnection.scala:361)
	at scala.meta.internal.metals.Cancelable$$anon$1.cancel(Cancelable.scala:18)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:301)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1(BspSession.scala:34)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1$adapted(BspSession.scala:34)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.bsp.BspSession.cancel(BspSession.scala:34)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.MetalsLspService.cancel(MetalsLspService.scala:157)
	at scala.meta.internal.metals.MetalsLspService.onShutdown(MetalsLspService.scala:927)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2(WorkspaceLspService.scala:1170)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2$adapted(WorkspaceLspService.scala:1170)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.WorkspaceLspService.shutdown(WorkspaceLspService.scala:1170)
	at scala.meta.metals.MetalsLanguageServer.shutdown(MetalsLanguageServer.scala:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 45 more

2023.12.02 12:59:04 INFO  Failed to run request with params ScalaMainClassesResult
2023.12.02 12:59:04 INFO  Bloop should support `buildTarget/jvmRunEnvironment`, but it fails.
2023.12.02 12:59:04 INFO  Failed to run request with params ScalaTestClassesResult
2023.12.02 12:59:04 INFO  Failed to run request with params ScalaMainClassesResult
2023.12.02 12:59:04 INFO  Bloop should support `buildTarget/jvmRunEnvironment`, but it fails.
2023.12.02 12:59:04 INFO  Failed to run request with params ScalaTestClassesResult
2023.12.02 12:59:04 INFO  Failed to run request with params DebugSessionAddress
2023.12.02 12:59:03 INFO  Exiting server
2023.12.02 13:00:21 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.02 13:00:24 INFO  Attempting to connect to the build server...
2023.12.02 13:00:24 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.02 13:00:25 INFO  skipping build import with status 'Installed'
2023.12.02 13:00:24 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.02 13:00:26 INFO  time: Connected to build server in 1.2s
2023.12.02 13:00:26 INFO  Connected to Build server: Bloop v1.5.11
2023.12.02 13:00:33 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.02 13:00:34 INFO  time: Imported build in 0.13s
2023.12.02 13:00:38 INFO  time: indexed workspace in 4.9s
2023.12.02 13:00:39 INFO  compiling app (1 scala source)
2023.12.02 13:00:44 INFO  time: compiled app in 5.08s
2023.12.02 13:00:49 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:00:50 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:00:50 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:00:50 INFO  Loaded expression compiler in 3 milliseconds
2023.12.02 13:00:50 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:00:50 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:00:53 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 13:00:53 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61077 .
2023.12.02 13:00:53 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:02:09 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 3 is out of bounds (min 0, max 2)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 13:02:09 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:64)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:83)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:93)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 13:02:09 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 13:02:09 INFO  Closing debug server tcp://0.0.0.0:61074
2023.12.02 13:02:11 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:02:30 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 2m 4.5s)
2023.12.02 13:02:30 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:02:30 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:02:31 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:02:30 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 13:02:30 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:02:30 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:02:35 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 13:02:35 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61098 .
2023.12.02 13:02:35 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 1:06:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 111
dic. 02, 2023 1:07:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 146
dic. 02, 2023 1:07:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 147
dic. 02, 2023 1:07:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 149
2023.12.02 13:07:08 INFO  compiling app (1 scala source)
2023.12.02 13:07:11 INFO  time: compiled app in 2.94s
2023.12.02 13:07:22 INFO  compiling app (1 scala source)
2023.12.02 13:07:24 INFO  time: compiled app in 2.23s
2023.12.02 13:07:25 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:07:25 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:07:25 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:07:26 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:07:26 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 13:07:26 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:07:26 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:07:30 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 13:07:30 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61138 .
2023.12.02 13:07:30 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:08:07 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 3 is out of bounds (min 0, max 2)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 13:08:07 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:64)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:83)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:93)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 13:08:07 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 13:08:07 INFO  Closing debug server tcp://0.0.0.0:61136
2023.12.02 13:08:07 INFO  Canceling debug proxy for [taller4.Taller4]
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.02 13:08:28 INFO  compiling app (1 scala source)
2023.12.02 13:08:31 INFO  time: compiled app in 2.59s
dic. 02, 2023 1:08:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.12.02 13:08:40 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 8m 14.07s)
2023.12.02 13:08:40 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:08:40 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:08:40 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:08:40 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 13:08:40 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:08:40 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:08:44 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 13:08:44 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61169 .
2023.12.02 13:08:44 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:09:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:09:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

dic. 02, 2023 1:09:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 13:09:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:09:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 13:09:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:09:09 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 13:09:08 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:09:09 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 13:09:10 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:09:10 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:09:10 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:09:11 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:09:11 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 13:09:11 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:09:11 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:09:16 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 13:09:16 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61183 .
2023.12.02 13:09:16 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:09:49 INFO  compiling app (1 scala source)
2023.12.02 13:09:51 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:09:51 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 9m 25.323s)
2023.12.02 13:09:51 INFO  compiling app (1 scala source)
2023.12.02 13:09:51 INFO  time: compiled app in 0.48s
2023.12.02 13:09:52 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:09:52 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:09:52 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:09:52 INFO  Loaded expression compiler in 0 milliseconds
2023.12.02 13:09:52 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:09:52 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:09:55 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 13:09:55 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61202 .
2023.12.02 13:09:55 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:10:40 INFO  compiling app (1 scala source)
2023.12.02 13:10:41 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:10:40 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 10m 15.174s)
2023.12.02 13:10:40 INFO  compiling app (1 scala source)
2023.12.02 13:10:42 INFO  time: compiled app in 1.8s
2023.12.02 13:10:43 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:10:43 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:10:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:10:42 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 13:10:42 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:10:42 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:10:48 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 13:10:48 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61217 .
2023.12.02 13:10:48 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 1:11:33 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 13:11:34 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:11:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 13:11:34 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:11:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 13:11:34 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 1:11:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 13:11:38 INFO  Closing debug server tcp://0.0.0.0:61214
2023.12.02 13:11:38 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 13:11:50 INFO  compiling app (1 scala source)
2023.12.02 13:11:52 INFO  time: compiled app in 1.73s
dic. 02, 2023 1:11:52 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 13:11:52 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 13:11:52 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 13:11:53 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 13:11:53 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 13:11:53 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:11:53 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 13:11:56 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 13:11:56 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61237 .
2023.12.02 13:11:56 INFO  Attaching to debuggee VM succeeded.
2023.12.02 13:12:11 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 4 is out of bounds (min 0, max 3)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 13:12:11 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:64)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:83)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:93)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 13:12:11 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 13:12:11 INFO  Closing debug server tcp://0.0.0.0:61233
2023.12.02 13:12:11 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 15:44:15 INFO  compiling app (1 scala source)
2023.12.02 15:44:15 INFO  time: compiled app in 0.31s
2023.12.02 15:44:24 INFO  compiling app (1 scala source)
2023.12.02 15:44:26 INFO  time: compiled app in 1.89s
2023.12.02 15:44:29 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 2h 44m 3.351s)
2023.12.02 15:44:29 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 15:44:29 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 15:44:30 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 15:44:29 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 15:44:29 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:44:29 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:44:35 INFO  Loaded all sources and classes in 5 seconds
2023.12.02 15:44:35 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61728 .
2023.12.02 15:44:35 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 3:44:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 15:44:57 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:44:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 15:44:57 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:44:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 15:44:57 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:44:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 15:45:21 INFO  compiling app (1 scala source)
2023.12.02 15:45:21 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 15:45:21 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 2h 44m 55.666s)
2023.12.02 15:45:21 INFO  compiling app (1 scala source)
2023.12.02 15:45:23 INFO  time: compiled app in 2.2s
2023.12.02 15:45:23 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 15:45:23 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 15:45:23 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 15:45:23 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 15:45:23 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:45:23 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:45:27 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 15:45:27 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61754 .
2023.12.02 15:45:27 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 3:46:29 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 15:46:30 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:46:30 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 15:46:30 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:46:30 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 15:46:30 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 3:46:30 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 15:46:37 INFO  Closing debug server tcp://0.0.0.0:61751
2023.12.02 15:46:37 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 3:46:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.12.02 15:46:51 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 15:46:51 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 15:46:51 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 15:46:51 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 15:46:51 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:46:51 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:46:54 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 15:46:54 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61768 .
2023.12.02 15:46:54 INFO  Attaching to debuggee VM succeeded.
2023.12.02 15:47:02 INFO  compiling app (1 scala source)
2023.12.02 15:47:02 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 15:47:02 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 2h 46m 36.821s)
2023.12.02 15:47:02 INFO  compiling app (1 scala source)
2023.12.02 15:47:04 INFO  time: compiled app in 1.22s
2023.12.02 15:47:04 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-uvX4nZuRQE2d_WRHY9z90g==-ev6aND6gR5ClM84Pp0wjqg==\META-INF\semanticdb\app\src\main\scala\taller4\implAlgoritmos.scala.semanticdb to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-uvX4nZuRQE2d_WRHY9z90g==\META-INF\semanticdb\app\src\main\scala\taller4\implAlgoritmos.scala.semanticdb, you might need to restart the build server.
2023.12.02 15:47:04 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 15:47:04 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 15:47:04 INFO  Starting debug proxy for [taller4.Taller4]
dic. 02, 2023 3:47:04 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 15:47:04 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 15:47:04 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:47:04 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 15:47:08 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 15:47:08 INFO  Trying to attach to remote debuggee VM 127.0.0.1:61781 .
2023.12.02 15:47:08 INFO  Attaching to debuggee VM succeeded.
2023.12.02 15:49:18 INFO  compiling app (1 scala source)
2023.12.02 15:49:18 INFO  time: compiled app in 0.56s
2023.12.02 15:49:19 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 15:49:18 INFO  compiling app (1 scala source)
2023.12.02 15:49:20 INFO  time: compiled app in 0.76s
dic. 02, 2023 3:49:20 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 15:49:20 INFO  compiling app (1 scala source)
2023.12.02 15:49:20 INFO  time: compiled app in 0.39s
2023.12.02 15:49:20 INFO  {
  "jsonrpc": "2.0",
  "id": "185",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
Exception in thread "pool-4-thread-2" scala.tools.nsc.interactive.ShutdownReq$
dic. 02, 2023 3:49:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 683
dic. 02, 2023 3:49:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 700
dic. 02, 2023 3:49:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 699
dic. 02, 2023 3:49:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 784
dic. 02, 2023 3:49:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 791
2023.12.02 15:53:02 INFO  compiling app (1 scala source)
2023.12.02 15:53:04 INFO  time: compiled app in 1.87s
dic. 02, 2023 4:02:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1010
2023.12.02 16:04:31 INFO  compiling app (1 scala source)
2023.12.02 16:04:32 INFO  time: compiled app in 1.15s
dic. 02, 2023 4:05:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1388
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Vector[Int]]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 1530, 1530, 1548)
2023.12.02 16:18:00 INFO  compiling app (1 scala source)
2023.12.02 16:18:00 INFO  time: compiled app in 0.12s
2023.12.02 16:18:00 INFO  compiling app (1 scala source)
2023.12.02 16:18:00 INFO  time: compiled app in 0.27s
dic. 02, 2023 4:18:01 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 16:18:18 INFO  compiling app (1 scala source)
2023.12.02 16:18:18 INFO  time: compiled app in 0.95s
2023.12.02 16:18:34 INFO  compiling app (1 scala source)
2023.12.02 16:18:34 INFO  time: compiled app in 0.7s
2023.12.02 16:18:36 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3h 18m 10.757s)
2023.12.02 16:18:36 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:18:36 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:18:37 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:18:36 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:18:36 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:18:36 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:18:39 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:18:39 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62100 .
2023.12.02 16:18:39 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:19:14 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.12.02 16:19:14 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.12.02 16:19:14 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.12.02 16:19:14 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.12.02 16:19:14 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:55)
2023.12.02 16:19:14 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:79)
2023.12.02 16:19:14 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:89)
2023.12.02 16:19:14 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 16:19:14 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:19:14 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:19:14 INFO  Closing debug server tcp://0.0.0.0:62098
2023.12.02 16:20:01 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3h 19m 35.287s)
dic. 02, 2023 4:20:01 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 16:20:01 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:20:01 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:20:01 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:20:01 INFO  Loaded expression compiler in 0 milliseconds
2023.12.02 16:20:01 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:20:01 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:20:03 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:20:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62126 .
2023.12.02 16:20:03 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 4:21:27 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1633
2023.12.02 16:21:36 INFO  compiling app (1 scala source)
2023.12.02 16:21:36 INFO  time: compiled app in 0.38s
2023.12.02 16:22:26 INFO  compiling app (1 scala source)
2023.12.02 16:22:28 INFO  time: compiled app in 1.13s
2023.12.02 16:22:29 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:22:29 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:22:29 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:22:30 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:22:30 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:22:30 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:22:30 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:22:31 INFO  Loaded all sources and classes in 1 second
2023.12.02 16:22:31 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62152 .
2023.12.02 16:22:31 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:24:36 INFO  compiling app (1 scala source)
2023.12.02 16:24:38 INFO  time: compiled app in 1.11s
2023.12.02 16:24:44 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:24:44 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:24:44 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:24:44 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:24:44 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 16:24:44 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:24:44 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:24:46 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:24:46 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62181 .
2023.12.02 16:24:46 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:25:25 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$sumMatriz$1(implAlgoritmos.scala:40)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:25:25 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.implAlgoritmos.sumMatriz(implAlgoritmos.scala:40)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:57)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:79)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:89)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:33)
2023.12.02 16:25:25 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:25:25 INFO  Closing debug server tcp://0.0.0.0:62178
2023.12.02 16:25:25 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:25:48 INFO  compiling app (1 scala source)
2023.12.02 16:25:48 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3h 25m 22.759s)
2023.12.02 16:25:48 INFO  compiling app (1 scala source)
2023.12.02 16:25:48 INFO  time: compiled app in 0.55s
2023.12.02 16:25:49 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
dic. 02, 2023 4:25:49 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 16:25:49 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:25:49 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:25:49 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:25:49 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:25:49 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:25:51 INFO  Loaded all sources and classes in 1 second
2023.12.02 16:25:51 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62206 .
2023.12.02 16:25:51 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:26:30 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 0 is out of bounds (empty vector)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector0$.ioob(Vector.scala:379)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:344)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector0$.apply(Vector.scala:342)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$sumMatriz$1(implAlgoritmos.scala:40)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:26:30 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.implAlgoritmos.sumMatriz(implAlgoritmos.scala:40)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.implAlgoritmos.auxSumaVectorMatriz$1(implAlgoritmos.scala:57)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:79)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:89)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:26:30 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:26:30 INFO  Closing debug server tcp://0.0.0.0:62204
2023.12.02 16:26:30 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 4:26:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1835
2023.12.02 16:26:58 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: illegal character '\u00bf'
        val suma = sumMatriz(subMatriz(matriz,(posicion),0,matriz.length),acumuladorSuma.fill¿)
                                                                                             ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 16:28:02 INFO  compiling app (1 scala source)
2023.12.02 16:28:02 INFO  time: compiled app in 0.15s
2023.12.02 16:28:23 INFO  compiling app (1 scala source)
2023.12.02 16:28:23 INFO  time: compiled app in 0.98s
2023.12.02 16:28:27 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:28:27 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:28:27 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:28:27 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 16:28:27 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:28:27 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:28:29 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:28:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62248 .
2023.12.02 16:28:29 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:30:05 INFO  Closing debug server tcp://0.0.0.0:62246
2023.12.02 16:30:05 INFO  Canceling debug proxy for [taller4.Taller4]
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2399, 2399, 2415)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2399, 2399, 2408)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2399, 2399, 2409)
2023.12.02 16:32:37 INFO  compiling app (1 scala source)
2023.12.02 16:32:37 INFO  time: compiled app in 0.18s
2023.12.02 16:33:00 INFO  compiling app (1 scala source)
2023.12.02 16:33:00 INFO  time: compiled app in 0.17s
dic. 02, 2023 4:33:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2391
2023.12.02 16:33:57 INFO  compiling app (1 scala source)
2023.12.02 16:33:57 INFO  time: compiled app in 0.13s
2023.12.02 16:34:09 INFO  compiling app (1 scala source)
2023.12.02 16:34:09 INFO  time: compiled app in 0.12s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2805)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2798)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2805)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2798)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2801)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2800)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2799)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2798)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2799)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2798)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2789, 2789, 2799)
2023.12.02 16:34:37 INFO  compiling app (1 scala source)
2023.12.02 16:34:37 INFO  time: compiled app in 0.14s
2023.12.02 16:35:06 INFO  compiling app (1 scala source)
2023.12.02 16:35:06 INFO  time: compiled app in 0.12s
dic. 02, 2023 4:35:14 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2679
2023.12.02 16:35:16 INFO  compiling app (1 scala source)
2023.12.02 16:35:17 INFO  time: compiled app in 1.02s
2023.12.02 16:37:27 INFO  compiling app (1 scala source)
2023.12.02 16:37:27 INFO  time: compiled app in 0.77s
2023.12.02 16:37:52 INFO  compiling app (1 scala source)
2023.12.02 16:37:52 INFO  time: compiled app in 0.8s
2023.12.02 16:38:25 INFO  compiling app (1 scala source)
2023.12.02 16:38:25 INFO  time: compiled app in 0.14s
2023.12.02 16:39:11 INFO  compiling app (1 scala source)
2023.12.02 16:39:11 INFO  time: compiled app in 0.12s
2023.12.02 16:39:20 INFO  compiling app (1 scala source)
2023.12.02 16:39:20 INFO  time: compiled app in 0.84s
2023.12.02 16:39:29 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:39:29 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:39:29 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:39:29 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:39:29 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:39:29 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:39:31 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:39:31 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62430 .
2023.12.02 16:39:31 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:40:53 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:40:53 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:96)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:40:53 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:40:53 INFO  Closing debug server tcp://0.0.0.0:62428
2023.12.02 16:40:53 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:41:33 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:41:33 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:41:33 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:41:33 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:41:33 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:41:33 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:41:36 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:41:36 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62461 .
2023.12.02 16:41:36 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:42:04 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:42:04 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:96)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:42:04 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:42:04 INFO  Closing debug server tcp://0.0.0.0:62458
2023.12.02 16:42:04 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:42:18 INFO  compiling app (1 scala source)
2023.12.02 16:42:18 INFO  time: compiled app in 0.82s
2023.12.02 16:42:28 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:42:28 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:42:28 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:42:28 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:42:28 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:42:28 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:42:29 INFO  Loaded all sources and classes in 1 second
2023.12.02 16:42:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62481 .
2023.12.02 16:42:29 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 4:42:34 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 16:43:34 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:43:34 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:93)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:43:34 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:43:34 INFO  Closing debug server tcp://0.0.0.0:62479
2023.12.02 16:43:34 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:47:30 INFO  compiling app (1 scala source)
2023.12.02 16:47:30 INFO  time: compiled app in 0.83s
2023.12.02 16:47:35 INFO  compiling app (1 scala source)
2023.12.02 16:47:36 INFO  time: compiled app in 1.05s
2023.12.02 16:47:39 INFO  compiling app (1 scala source)
2023.12.02 16:47:39 INFO  time: compiled app in 0.13s
2023.12.02 16:47:42 INFO  compiling app (1 scala source)
2023.12.02 16:47:44 INFO  time: compiled app in 1.07s
2023.12.02 16:48:02 INFO  compiling app (1 scala source)
2023.12.02 16:48:02 INFO  time: compiled app in 0.94s
2023.12.02 16:48:06 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:48:06 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:48:06 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:48:06 INFO  Loaded expression compiler in 0 milliseconds
2023.12.02 16:48:06 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:48:06 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:48:08 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 16:48:08 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62571 .
2023.12.02 16:48:08 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:48:39 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:48:39 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:92)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:102)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:48:39 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:48:39 INFO  Closing debug server tcp://0.0.0.0:62568
2023.12.02 16:48:39 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 4:48:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
java.util.concurrent.CompletionException: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:747)
	at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)
	at java.base/java.util.concurrent.CompletableFuture.thenAcceptAsync(CompletableFuture.java:2186)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.thenAccept(FutureConvertersImpl.scala:37)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:279)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$: There is nothing to run or test in the current file.
	at scala.meta.internal.metals.debug.DebugProvider$NoRunOptionException$.<clinit>(DebugProvider.scala:929)
	at scala.meta.internal.metals.debug.DebugProvider.$anonfun$resolveInFile$2(DebugProvider.scala:370)
	at scala.Option.fold(Option.scala:263)
	at scala.meta.internal.metals.debug.DebugProvider.resolveInFile(DebugProvider.scala:341)
	at scala.meta.internal.metals.debug.DebugProvider.debugDiscovery(DebugProvider.scala:475)
	at scala.meta.internal.metals.MetalsLspService.debugDiscovery(MetalsLspService.scala:1857)
	at scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:880)
	at scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	... 9 more

2023.12.02 16:49:02 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 16:49:02 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 16:49:02 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 16:49:02 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 16:49:02 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:49:02 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 16:49:04 INFO  Loaded all sources and classes in 1 second
2023.12.02 16:49:04 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62589 .
2023.12.02 16:49:04 INFO  Attaching to debuggee VM succeeded.
2023.12.02 16:50:28 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 16:50:28 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:77)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:92)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:102)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 16:50:28 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 16:50:28 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 16:50:28 INFO  Closing debug server tcp://0.0.0.0:62587
2023.12.02 16:51:52 INFO  compiling app (1 scala source)
2023.12.02 16:51:52 INFO  time: compiled app in 0.82s
2023.12.02 16:59:05 INFO  compiling app (1 scala source)
2023.12.02 16:59:05 INFO  time: compiled app in 0.97s
dic. 02, 2023 5:21:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3901
dic. 02, 2023 5:21:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3902
2023.12.02 17:21:35 INFO  compiling app (1 scala source)
2023.12.02 17:21:35 INFO  time: compiled app in 0.13s
dic. 02, 2023 5:21:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3975
dic. 02, 2023 5:21:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3976
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmos.scala, 2271, 2271, 2281)
2023.12.02 17:21:53 INFO  compiling app (1 scala source)
2023.12.02 17:21:53 INFO  time: compiled app in 0.12s
dic. 02, 2023 5:21:56 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4030
2023.12.02 17:23:36 INFO  compiling app (1 scala source)
2023.12.02 17:23:36 INFO  time: compiled app in 0.91s
2023.12.02 17:23:43 INFO  compiling app (1 scala source)
2023.12.02 17:23:43 INFO  time: compiled app in 0.76s
dic. 02, 2023 5:23:49 P. M. scala.meta.internal.pc.CompletionProvider expected$1
WARNING: offset 2873, count -1, length 3218
2023.12.02 17:23:57 INFO  compiling app (1 scala source)
2023.12.02 17:23:57 INFO  time: compiled app in 0.77s
2023.12.02 17:24:17 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
dic. 02, 2023 5:24:17 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4385
2023.12.02 17:24:17 INFO  time: compiled app in 0.88s
dic. 02, 2023 5:24:36 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 17:24:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.02 17:24:36 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4h 24m 10.396s)
2023.12.02 17:24:36 INFO  compiling app (1 scala source)
2023.12.02 17:24:36 INFO  compiling app (1 scala source)
2023.12.02 17:24:37 INFO  time: compiled app in 1.16s
2023.12.02 17:24:38 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 17:24:38 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 17:24:38 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 17:24:37 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 17:24:37 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:24:37 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:24:42 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 17:24:42 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62931 .
2023.12.02 17:24:42 INFO  Attaching to debuggee VM succeeded.
2023.12.02 17:25:18 ERROR Build server error: Exception in thread "main" java.lang.IndexOutOfBoundsException: 2 is out of bounds (min 0, max 1)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector.ioob(Vector.scala:283)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector1.apply(Vector.scala:388)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$subMatriz$1(implAlgoritmos.scala:48)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.runtime.java8.JFunction2$mcIII$sp.apply(JFunction2$mcIII$sp.scala:17)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2(Factory.scala:210)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$2$adapted(Factory.scala:210)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1(Factory.scala:210)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.$anonfun$tabulate$1$adapted(Factory.scala:210)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate(Factory.scala:210)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.IterableFactory.tabulate$(Factory.scala:209)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.implAlgoritmos.subMatriz(implAlgoritmos.scala:48)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.implAlgoritmos.$anonfun$multMatrizRec$1(implAlgoritmos.scala:73)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.runtime.java8.JFunction1$mcII$sp.apply(JFunction1$mcII$sp.scala:17)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate(Factory.scala:341)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.StrictOptimizedSeqFactory.tabulate$(Factory.scala:336)
2023.12.02 17:25:18 ERROR Build server error: 	at scala.collection.immutable.Vector$.tabulate(Vector.scala:34)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.implAlgoritmos.auxMultMatrizRec$1(implAlgoritmos.scala:73)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.implAlgoritmos.multMatrizRec(implAlgoritmos.scala:91)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.Taller4$.main(Taller4.scala:25)
2023.12.02 17:25:18 ERROR Build server error: 	at taller4.Taller4.main(Taller4.scala)
2023.12.02 17:25:18 INFO  Closing debug server tcp://0.0.0.0:62929
2023.12.02 17:25:18 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 17:25:27 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 17:25:27 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 17:25:27 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 17:25:27 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 17:25:27 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:25:27 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:25:29 INFO  Loaded all sources and classes in 1 second
2023.12.02 17:25:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62958 .
2023.12.02 17:25:29 INFO  Attaching to debuggee VM succeeded.
2023.12.02 17:27:59 INFO  compiling app (1 scala source)
2023.12.02 17:27:59 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 17:27:59 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4h 27m 33.546s)
2023.12.02 17:27:59 INFO  compiling app (1 scala source)
2023.12.02 17:28:00 INFO  time: compiled app in 0.96s
2023.12.02 17:28:00 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 17:28:00 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 17:28:00 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 17:28:00 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 17:28:00 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:28:00 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:28:03 INFO  Loaded all sources and classes in 2 seconds
2023.12.02 17:28:03 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62981 .
2023.12.02 17:28:03 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 5:28:03 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 17:29:16 INFO  compiling app (1 scala source)
2023.12.02 17:29:16 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 17:29:16 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 4h 28m 50.339s)
2023.12.02 17:29:16 INFO  compiling app (1 scala source)
2023.12.02 17:29:17 INFO  time: compiled app in 0.85s
2023.12.02 17:29:17 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 17:29:17 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 17:29:17 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 17:29:17 INFO  Loaded expression compiler in 0 milliseconds
2023.12.02 17:29:17 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:29:17 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:29:18 INFO  Loaded all sources and classes in 1 second
2023.12.02 17:29:18 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63006 .
2023.12.02 17:29:18 INFO  Attaching to debuggee VM succeeded.
2023.12.02 17:30:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:30:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 02, 2023 5:30:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 17:30:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:30:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 17:30:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:30:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 17:30:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:30:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:31:49 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:31:49 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:31:58 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:31:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:32:00 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:32:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:33:15 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:33:15 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:33:16 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 17:33:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 17:33:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 17:33:16 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 17:33:16 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 17:33:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:33:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 17:33:18 INFO  Loaded all sources and classes in 1 second
2023.12.02 17:33:18 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63077 .
2023.12.02 17:33:18 INFO  Attaching to debuggee VM succeeded.
dic. 02, 2023 5:35:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
  ]
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:608)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2023.12.02 17:35:25 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:35:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1634)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1633)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2023.12.02 17:35:25 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:447)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:35:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1624)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2023.12.02 17:35:25 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:462)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:35:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.semanticTokens(Compilers.scala:424)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$semanticTokensFull$2(MetalsLspService.scala:1556)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 12 more

2023.12.02 17:35:26 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java

Uri: jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 02, 2023 5:35:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.Compilers.withPCAndAdjustLsp(Compilers.scala:1027)
	at scala.meta.internal.metals.Compilers.hover(Compilers.scala:685)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$hover$1(MetalsLspService.scala:1383)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.hover(MetalsLspService.scala:1381)
	at scala.meta.internal.metals.WorkspaceLspService.hover(WorkspaceLspService.scala:367)
	at scala.meta.metals.lsp.DelegatingScalaService.hover(DelegatingScalaService.scala:82)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 28 more

2023.12.02 17:35:58 INFO  compiling app (1 scala source)
2023.12.02 17:35:59 INFO  time: compiled app in 1.04s
2023.12.02 17:35:59 INFO  Closing debug server tcp://0.0.0.0:63075
2023.12.02 17:36:00 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 02, 2023 5:36:01 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4604
dic. 02, 2023 6:10:32 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4616
2023.12.02 18:49:22 INFO  compiling app (1 scala source)
2023.12.02 18:49:23 INFO  time: compiled app in 1.66s
2023.12.02 18:49:58 INFO  compiling app (1 scala source)
2023.12.02 18:49:58 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 49m 32.681s)
2023.12.02 18:49:58 INFO  compiling app (1 scala source)
2023.12.02 18:49:58 INFO  time: compiled app in 0.64s
dic. 02, 2023 6:49:59 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 18:50:15 INFO  compiling app (1 scala source)
2023.12.02 18:50:15 INFO  time: compiled app in 0.94s
2023.12.02 18:50:53 INFO  compiling app (1 scala source)
2023.12.02 18:50:54 INFO  time: compiled app in 1.13s
2023.12.02 18:51:07 INFO  compiling app (1 scala source)
dic. 02, 2023 6:51:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4864
2023.12.02 18:51:07 INFO  time: compiled app in 0.72s
dic. 02, 2023 6:51:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4882
2023.12.02 18:52:22 INFO  compiling app (1 scala source)
2023.12.02 18:52:22 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 5h 51m 56.881s)
2023.12.02 18:52:22 INFO  compiling app (1 scala source)
2023.12.02 18:52:24 INFO  time: compiled app in 1.22s
dic. 02, 2023 6:52:24 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 18:52:34 INFO  compiling app (1 scala source)
2023.12.02 18:52:36 INFO  time: compiled app in 2.04s
2023.12.02 18:52:50 INFO  compiling app (1 scala source)
2023.12.02 18:52:50 INFO  time: compiled app in 0.65s
dic. 02, 2023 6:59:55 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5047
dic. 02, 2023 7:00:39 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5084
2023.12.02 19:15:01 INFO  compiling app (1 scala source)
2023.12.02 19:15:05 INFO  time: compiled app in 3.16s
2023.12.02 19:15:16 INFO  compiling app (1 scala source)
2023.12.02 19:15:16 INFO  time: compiled app in 0.67s
2023.12.02 19:15:43 INFO  compiling app (1 scala source)
2023.12.02 19:15:44 INFO  time: compiled app in 1.06s
dic. 02, 2023 7:15:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5217
2023.12.02 19:15:55 INFO  compiling app (1 scala source)
2023.12.02 19:15:55 INFO  time: compiled app in 0.94s
2023.12.02 19:16:19 INFO  compiling app (1 scala source)
2023.12.02 19:16:19 INFO  time: compiled app in 0.78s
2023.12.02 19:20:02 INFO  compiling app (1 scala source)
dic. 02, 2023 7:20:02 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 02, 2023 7:20:02 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-12-02\r_compiler-error_(app)_19-20-02-583.md
2023.12.02 19:20:02 INFO  time: compiled app in 0.57s
2023.12.02 19:20:05 INFO  compiling app (1 scala source)
2023.12.02 19:20:05 INFO  time: compiled app in 0.91s
dic. 02, 2023 7:21:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5367
2023.12.02 19:21:03 INFO  compiling app (1 scala source)
2023.12.02 19:21:03 INFO  time: compiled app in 0.47s
dic. 02, 2023 7:21:15 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5382
2023.12.02 19:21:17 INFO  compiling app (1 scala source)
2023.12.02 19:21:17 INFO  time: compiled app in 0.4s
2023.12.02 19:22:50 INFO  compiling app (1 scala source)
2023.12.02 19:22:50 INFO  time: compiled app in 0.46s
2023.12.02 19:23:07 INFO  compiling app (1 scala source)
2023.12.02 19:23:07 INFO  time: compiled app in 0.31s
2023.12.02 19:23:32 INFO  compiling app (1 scala source)
2023.12.02 19:23:32 INFO  time: compiled app in 0.52s
2023.12.02 19:23:37 INFO  compiling app (1 scala source)
2023.12.02 19:23:37 INFO  time: compiled app in 0.5s
2023.12.02 19:29:01 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala:54:76: stale bloop error: Cannot construct a collection of type Array[Array[Int]] with elements of type scala.collection.mutable.ArraySeq[Int] based on a collection of type scala.collection.mutable.ArraySeq[Array[Int]].
  def add(a: Array[Array[Int]], b: Array[Array[Int]]): Array[Array[Int]] = (a, b).zipped.map((rowA, rowB) => (rowA, rowB).zipped.map(_ + _))
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2023.12.02 19:29:01 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala:56:81: stale bloop error: Cannot construct a collection of type Array[Array[Int]] with elements of type scala.collection.mutable.ArraySeq[Int] based on a collection of type scala.collection.mutable.ArraySeq[Array[Int]].
  def subtract(a: Array[Array[Int]], b: Array[Array[Int]]): Array[Array[Int]] = (a, b).zipped.map((rowA, rowB) => (rowA, rowB).zipped.map(_ - _))
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2023.12.02 19:29:03 INFO  compiling app (1 scala source)
2023.12.02 19:29:03 INFO  time: compiled app in 0.43s
2023.12.02 19:29:27 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala:48:5: stale bloop error: Cannot construct a collection of type Array[Array[Int]] with elements of type scala.collection.mutable.ArraySeq[Int] based on a collection of type scala.collection.mutable.ArraySeq[Array[Int]].
    (a, b).zipped.map((rowA, rowB) => (rowA, rowB).zipped.map(_ + _))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2023.12.02 19:29:27 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala:51:5: stale bloop error: Cannot construct a collection of type Array[Array[Int]] with elements of type scala.collection.mutable.ArraySeq[Int] based on a collection of type scala.collection.mutable.ArraySeq[Array[Int]].
    (a, b).zipped.map((rowA, rowB) => (rowA, rowB).zipped.map(_ - _))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
dic. 02, 2023 7:32:24 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
dic. 02, 2023 7:47:17 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5651
2023.12.02 21:52:26 INFO  compiling app (1 scala source)
2023.12.02 21:52:29 INFO  time: compiled app in 3.18s
2023.12.02 21:52:59 INFO  compiling app (1 scala source)
2023.12.02 21:52:59 INFO  time: compiled app in 0.73s
2023.12.02 21:53:18 INFO  compiling app (1 scala source)
2023.12.02 21:53:18 INFO  time: compiled app in 0.83s
2023.12.02 21:53:34 INFO  compiling app (1 scala source)
2023.12.02 21:53:34 INFO  time: compiled app in 0.75s
2023.12.02 21:53:59 INFO  compiling app (1 scala source)
2023.12.02 21:53:59 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.02 21:53:59 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.02 21:54:02 INFO  time: compiled app in 3.19s
2023.12.02 21:54:12 INFO  compiling app (1 scala source)
2023.12.02 21:54:12 INFO  time: compiled app in 0.66s
2023.12.02 21:54:31 INFO  compiling app (1 scala source)
2023.12.02 21:54:31 INFO  time: compiled app in 0.56s
dic. 02, 2023 9:54:50 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5966
2023.12.02 21:54:53 INFO  compiling app (1 scala source)
2023.12.02 21:54:53 INFO  time: compiled app in 0.56s
2023.12.02 21:55:07 INFO  compiling app (1 scala source)
2023.12.02 21:55:07 INFO  time: compiled app in 0.6s
dic. 02, 2023 9:55:33 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.02 21:55:33 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 21:55:33 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 21:55:33 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.02 21:55:33 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 21:55:33 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 21:55:33 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.02 21:55:38 INFO  Loaded all sources and classes in 4 seconds
2023.12.02 21:55:38 INFO  Trying to attach to remote debuggee VM 127.0.0.1:64903 .
2023.12.02 21:55:38 INFO  Attaching to debuggee VM succeeded.
2023.12.02 21:55:52 INFO  Closing debug server tcp://0.0.0.0:64900
2023.12.02 21:55:52 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.02 22:02:34 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala
scala.meta.tokenizers.TokenizeException: <input>:3: error: empty quoted identifier
```scala
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:485)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:337)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 22:02:36 INFO  compiling app (1 scala source)
2023.12.02 22:02:36 INFO  time: compiled app in 0.13s
2023.12.02 22:02:36 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala
scala.meta.tokenizers.TokenizeException: <input>:3: error: empty quoted identifier
```scala
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:485)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:337)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 22:02:38 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala
scala.meta.tokenizers.TokenizeException: <input>:3: error: empty quoted identifier
```scala
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:485)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:337)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 22:02:38 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala
scala.meta.tokenizers.TokenizeException: <input>:3: error: empty quoted identifier
```scala
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:485)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:337)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 22:02:38 INFO  compiling app (1 scala source)
2023.12.02 22:02:38 INFO  time: compiled app in 85ms
2023.12.02 22:02:39 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala
scala.meta.tokenizers.TokenizeException: <input>:3: error: empty quoted identifier
```scala
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:485)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:337)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.02 22:02:44 INFO  compiling app (1 scala source)
2023.12.02 22:02:46 INFO  time: compiled app in 1.5s
dic. 02, 2023 10:02:50 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 02, 2023 10:12:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6143
2023.12.02 22:12:06 INFO  compiling app (1 scala source)
2023.12.02 22:12:07 INFO  time: compiled app in 1.24s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 88)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 81)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 82)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 83)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 84)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 85)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 84)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 84)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 85)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 72, 72, 86)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 79, 79, 95)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 79, 79, 88)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 79, 79, 89)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 79, 79, 90)
2023.12.02 22:20:59 INFO  compiling app (1 scala source)
2023.12.02 22:20:59 INFO  time: compiled app in 0.23s
2023.12.02 22:21:26 INFO  compiling app (1 scala source)
2023.12.02 22:21:26 INFO  time: compiled app in 0.31s
2023.12.02 22:21:57 INFO  compiling app (1 scala source)
2023.12.02 22:21:57 INFO  time: compiled app in 0.42s
dic. 02, 2023 10:22:14 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6499
2023.12.02 22:22:19 INFO  compiling app (1 scala source)
2023.12.02 22:22:19 INFO  time: compiled app in 0.24s
2023.12.02 22:22:53 INFO  compiling app (1 scala source)
2023.12.02 22:22:53 INFO  time: compiled app in 0.2s
2023.12.02 22:22:57 INFO  compiling app (1 scala source)
2023.12.02 22:22:57 INFO  time: compiled app in 0.34s
dic. 02, 2023 10:22:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6605
2023.12.02 22:23:56 INFO  compiling app (1 scala source)
2023.12.02 22:23:56 INFO  time: compiled app in 0.26s
2023.12.02 22:24:08 INFO  compiling app (1 scala source)
2023.12.02 22:24:08 INFO  time: compiled app in 0.38s
2023.12.02 22:24:24 INFO  compiling app (1 scala source)
2023.12.02 22:24:24 INFO  time: compiled app in 0.24s
dic. 02, 2023 10:24:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6809
2023.12.02 22:24:29 INFO  compiling app (1 scala source)
2023.12.02 22:24:29 INFO  time: compiled app in 0.22s
dic. 02, 2023 10:24:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6906
2023.12.02 22:24:56 INFO  compiling app (1 scala source)
2023.12.02 22:24:56 INFO  time: compiled app in 0.23s
2023.12.02 22:25:40 INFO  compiling app (1 scala source)
2023.12.02 22:25:40 INFO  time: compiled app in 0.29s
2023.12.02 22:25:44 INFO  compiling app (1 scala source)
2023.12.02 22:25:44 INFO  time: compiled app in 0.17s
2023.12.02 22:25:56 INFO  compiling app (1 scala source)
2023.12.02 22:25:56 INFO  time: compiled app in 0.22s
2023.12.02 22:25:58 INFO  compiling app (1 scala source)
2023.12.02 22:25:58 INFO  time: compiled app in 0.14s
dic. 02, 2023 10:27:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7122
2023.12.02 22:31:31 INFO  compiling app (1 scala source)
2023.12.02 22:31:31 INFO  time: compiled app in 0.18s
2023.12.02 22:32:25 INFO  compiling app (1 scala source)
2023.12.02 22:32:25 INFO  time: compiled app in 0.15s
2023.12.02 22:32:37 INFO  compiling app (1 scala source)
2023.12.02 22:32:38 INFO  time: compiled app in 1.2s
dic. 02, 2023 10:32:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7336
dic. 02, 2023 10:32:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7343
2023.12.02 22:34:32 INFO  compiling app (1 scala source)
2023.12.02 22:34:36 INFO  time: compiled app in 4.25s
2023.12.02 22:34:51 INFO  compiling app (1 scala source)
2023.12.02 22:34:52 INFO  time: compiled app in 1.08s
dic. 02, 2023 10:34:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7488
dic. 02, 2023 10:34:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7494
dic. 02, 2023 10:34:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7495
dic. 02, 2023 10:34:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7500
2023.12.02 22:35:40 INFO  compiling app (1 scala source)
2023.12.02 22:35:41 INFO  time: compiled app in 1.11s
2023.12.02 22:36:27 INFO  compiling app (1 scala source)
2023.12.02 22:36:28 INFO  time: compiled app in 1.29s
dic. 02, 2023 10:37:24 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7614
dic. 02, 2023 10:37:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7616
2023.12.02 22:39:22 INFO  compiling app (1 scala source)
2023.12.02 22:39:22 INFO  time: compiled app in 0.89s
2023.12.02 22:39:35 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 22:39:35 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 22:39:35 INFO  Starting debug proxy for [taller4.StrassenMultiply]
2023.12.02 22:39:35 INFO  Loaded expression compiler in 1 millisecond
2023.12.02 22:39:35 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.StrassenMultiply)
2023.12.02 22:39:35 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.StrassenMultiply)
2023.12.02 22:39:38 INFO  Loaded all sources and classes in 3 seconds
2023.12.02 22:39:38 INFO  Trying to attach to remote debuggee VM 127.0.0.1:49290 .
2023.12.02 22:39:38 INFO  Attaching to debuggee VM succeeded.
Exception in thread "pool-4-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-4-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-4-thread-6" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-4-thread-7" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.02 22:41:36 INFO  compiling app (1 scala source)
2023.12.02 22:41:36 INFO  time: compiled app in 0.98s
2023.12.02 22:42:14 INFO  compiling app (1 scala source)
2023.12.02 22:42:14 INFO  time: compiled app in 0.88s
2023.12.02 22:42:16 INFO  Canceling debug proxy for [taller4.StrassenMultiply]
2023.12.02 22:42:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.02 22:42:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.02 22:42:16 INFO  Starting debug proxy for [taller4.StrassenMultiply]
2023.12.02 22:42:17 INFO  Loaded expression compiler in 2 milliseconds
2023.12.02 22:42:17 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.StrassenMultiply)
2023.12.02 22:42:17 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.StrassenMultiply)
2023.12.02 22:42:18 INFO  Loaded all sources and classes in 1 second
2023.12.02 22:42:18 INFO  Trying to attach to remote debuggee VM 127.0.0.1:49326 .
2023.12.02 22:42:18 INFO  Attaching to debuggee VM succeeded.
2023.12.02 22:45:37 INFO  Closing debug server tcp://0.0.0.0:49324
2023.12.02 22:45:37 INFO  Canceling debug proxy for [taller4.StrassenMultiply]
2023.12.02 22:49:51 INFO  compiling app (1 scala source)
dic. 02, 2023 10:49:51 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 02, 2023 10:49:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-12-02\r_compiler-error_(app)_22-49-51-473.md
2023.12.02 22:49:51 INFO  time: compiled app in 0.42s
2023.12.02 22:49:54 INFO  compiling app (1 scala source)
2023.12.02 22:49:54 INFO  time: compiled app in 0.11s
2023.12.02 22:51:52 INFO  compiling app (1 scala source)
2023.12.02 22:51:52 INFO  time: compiled app in 92ms
2023.12.02 22:51:55 INFO  compiling app (1 scala source)
2023.12.02 22:51:55 INFO  time: compiled app in 0.14s
2023.12.02 22:52:01 INFO  compiling app (1 scala source)
2023.12.02 22:52:01 INFO  time: compiled app in 75ms
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:1:1: stale bloop error: expected class or object definition
def strassen_multiply(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:53:1: stale bloop error: expected class or object definition
def sum_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:65:1: stale bloop error: expected class or object definition
def subtract_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:77:1: stale bloop error: expected class or object definition
def pad_matrix(matrix: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:1:1: stale bloop error: expected class or object definition
def strassen_multiply(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:53:1: stale bloop error: expected class or object definition
def sum_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:65:1: stale bloop error: expected class or object definition
def subtract_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:40 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:77:1: stale bloop error: expected class or object definition
def pad_matrix(matrix: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:53:43 INFO  compiling app (1 scala source)
2023.12.02 22:53:43 INFO  time: compiled app in 0.1s
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:1:1: stale bloop error: expected class or object definition
def strassen_multiply(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:53:1: stale bloop error: expected class or object definition
def sum_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:65:1: stale bloop error: expected class or object definition
def subtract_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:77:1: stale bloop error: expected class or object definition
def pad_matrix(matrix: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:91:1: stale bloop error: expected class or object definition
def main(): Unit = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:128:1: stale bloop error: expected class or object definition
def print_matrix(matrix: Array[Array[Int]]): Unit = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:134:1: stale bloop error: expected class or object definition
if (__name__ == "__main__") {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:1:1: stale bloop error: expected class or object definition
def strassen_multiply(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:53:1: stale bloop error: expected class or object definition
def sum_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:65:1: stale bloop error: expected class or object definition
def subtract_matrices(A: Array[Array[Int]], B: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:77:1: stale bloop error: expected class or object definition
def pad_matrix(matrix: Array[Array[Int]]): Array[Array[Int]] = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:91:1: stale bloop error: expected class or object definition
def main(): Unit = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:128:1: stale bloop error: expected class or object definition
def print_matrix(matrix: Array[Array[Int]]): Unit = {
^
2023.12.02 22:54:49 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strags.scala:134:1: stale bloop error: expected class or object definition
if (__name__ == "__main__") {
^
2023.12.02 23:33:35 INFO  Shutting down server
2023.12.02 23:33:35 INFO  shutting down Metals
2023.12.02 23:33:36 INFO  Shut down connection with build server.
2023.12.02 23:33:35 INFO  Exiting server
2023.12.03 10:37:32 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 10:37:33 INFO  time: initialize in 0.49s
2023.12.03 10:37:38 INFO  Attempting to connect to the build server...
2023.12.03 10:37:38 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 10:37:39 INFO  skipping build import with status 'Installed'
2023.12.03 10:37:54 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 10:37:54 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\strassen.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.03 10:37:54 INFO  time: Connected to build server in 16s
2023.12.03 10:37:54 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 10:37:56 INFO  time: Imported build in 0.71s
2023.12.03 10:38:10 INFO  time: indexed workspace in 14s
2023.12.03 10:38:20 INFO  compiling app-test (1 scala source)
dic. 03, 2023 10:38:20 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 10:38:29 INFO  time: compiled app-test in 9.15s
2023.12.03 10:43:06 INFO  compiling app (1 scala source)
2023.12.03 10:43:13 INFO  time: compiled app in 7.39s
2023.12.03 10:43:31 INFO  compiling app (1 scala source)
2023.12.03 10:43:34 INFO  time: compiled app in 3.33s
dic. 03, 2023 10:43:56 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 101
dic. 03, 2023 10:44:01 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 116
dic. 03, 2023 10:44:01 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 117
2023.12.03 10:44:10 INFO  compiling app (1 scala source)
2023.12.03 10:44:14 INFO  time: compiled app in 3.67s
dic. 03, 2023 10:44:44 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 194
dic. 03, 2023 10:44:49 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 211
dic. 03, 2023 10:44:55 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 240
2023.12.03 10:44:58 INFO  compiling app (1 scala source)
2023.12.03 10:45:00 INFO  time: compiled app in 2.55s
2023.12.03 10:45:06 INFO  compiling app (1 scala source)
2023.12.03 10:45:08 INFO  time: compiled app in 1.9s
dic. 03, 2023 10:45:29 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 269
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
dic. 03, 2023 10:46:02 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 305
2023.12.03 10:53:38 INFO  compiling app (1 scala source)
2023.12.03 10:53:40 INFO  time: compiled app in 1.87s
dic. 03, 2023 10:53:44 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 436
dic. 03, 2023 10:53:56 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 438
dic. 03, 2023 10:54:58 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 519
2023.12.03 10:55:08 INFO  compiling app (1 scala source)
2023.12.03 10:55:10 INFO  time: compiled app in 2.1s
2023.12.03 10:55:18 INFO  compiling app (1 scala source)
2023.12.03 10:55:24 INFO  time: compiled app in 5.91s
2023.12.03 10:56:11 INFO  compiling app (1 scala source)
2023.12.03 10:56:12 INFO  time: compiled app in 1.63s
dic. 03, 2023 10:56:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 678
dic. 03, 2023 10:56:58 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 691
2023.12.03 10:57:05 INFO  compiling app (1 scala source)
2023.12.03 10:57:07 INFO  time: compiled app in 2.28s
dic. 03, 2023 10:57:48 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 718
2023.12.03 10:57:54 INFO  compiling app (1 scala source)
2023.12.03 10:57:57 INFO  time: compiled app in 2.71s
2023.12.03 10:57:58 INFO  compiling app (1 scala source)
2023.12.03 10:58:00 INFO  time: compiled app in 2.43s
dic. 03, 2023 11:02:54 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 744
2023.12.03 11:02:58 INFO  compiling app (1 scala source)
2023.12.03 11:02:58 INFO  time: compiled app in 0.29s
2023.12.03 11:03:07 INFO  compiling app (1 scala source)
2023.12.03 11:03:07 INFO  time: compiled app in 0.37s
dic. 03, 2023 11:03:26 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 860
2023.12.03 11:03:36 INFO  compiling app (1 scala source)
2023.12.03 11:03:36 INFO  time: compiled app in 0.13s
dic. 03, 2023 11:04:08 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 961
2023.12.03 11:04:29 INFO  compiling app (1 scala source)
2023.12.03 11:04:29 INFO  time: compiled app in 0.24s
2023.12.03 11:04:53 INFO  compiling app (1 scala source)
2023.12.03 11:04:53 INFO  time: compiled app in 0.23s
2023.12.03 11:05:15 INFO  compiling app (1 scala source)
2023.12.03 11:05:15 INFO  time: compiled app in 0.33s
2023.12.03 11:05:20 INFO  compiling app (1 scala source)
2023.12.03 11:05:20 INFO  time: compiled app in 0.27s
2023.12.03 11:05:23 INFO  compiling app (1 scala source)
2023.12.03 11:05:23 INFO  time: compiled app in 0.25s
2023.12.03 11:05:29 INFO  compiling app (1 scala source)
2023.12.03 11:05:29 INFO  time: compiled app in 0.25s
2023.12.03 11:05:34 INFO  compiling app (1 scala source)
2023.12.03 11:05:35 INFO  time: compiled app in 1.71s
2023.12.03 11:05:49 INFO  compiling app (1 scala source)
2023.12.03 11:05:49 INFO  time: compiled app in 0.28s
2023.12.03 11:06:07 INFO  compiling app (1 scala source)
2023.12.03 11:06:07 INFO  time: compiled app in 0.24s
Exception in thread "pool-4-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
dic. 03, 2023 11:07:23 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1364
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 1870, 1870, 1886)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 1877, 1877, 1893)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 1877, 1877, 1886)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/strassen.scala, 1877, 1877, 1887)
2023.12.03 11:07:28 INFO  compiling app (1 scala source)
2023.12.03 11:07:28 INFO  time: compiled app in 0.35s
2023.12.03 11:07:36 INFO  compiling app (1 scala source)
2023.12.03 11:07:36 INFO  time: compiled app in 0.23s
2023.12.03 11:07:41 INFO  compiling app (1 scala source)
2023.12.03 11:07:41 INFO  time: compiled app in 0.27s
2023.12.03 11:07:44 INFO  compiling app (1 scala source)
2023.12.03 11:07:44 INFO  time: compiled app in 0.24s
2023.12.03 11:07:48 INFO  compiling app (1 scala source)
2023.12.03 11:07:50 INFO  time: compiled app in 1.94s
dic. 03, 2023 11:08:09 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1492
2023.12.03 11:08:22 INFO  compiling app (1 scala source)
2023.12.03 11:08:24 INFO  time: compiled app in 1.68s
2023.12.03 11:09:12 INFO  compiling app (1 scala source)
2023.12.03 11:09:12 INFO  time: compiled app in 0.22s
dic. 03, 2023 11:09:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1571
2023.12.03 11:09:22 INFO  compiling app (1 scala source)
2023.12.03 11:09:22 INFO  time: compiled app in 0.23s
2023.12.03 11:09:26 INFO  compiling app (1 scala source)
2023.12.03 11:09:26 INFO  time: compiled app in 0.24s
2023.12.03 11:09:42 INFO  compiling app (1 scala source)
2023.12.03 11:09:42 INFO  time: compiled app in 0.21s
2023.12.03 11:09:50 INFO  compiling app (1 scala source)
2023.12.03 11:09:50 INFO  time: compiled app in 0.28s
2023.12.03 11:09:58 INFO  compiling app (1 scala source)
2023.12.03 11:09:58 INFO  time: compiled app in 0.21s
dic. 03, 2023 11:10:07 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1804
2023.12.03 11:10:13 INFO  compiling app (1 scala source)
2023.12.03 11:10:13 INFO  time: compiled app in 0.19s
2023.12.03 11:10:19 INFO  compiling app (1 scala source)
2023.12.03 11:10:19 INFO  time: compiled app in 0.21s
2023.12.03 11:10:21 INFO  compiling app (1 scala source)
2023.12.03 11:10:21 INFO  time: compiled app in 0.21s
2023.12.03 11:10:26 INFO  compiling app (1 scala source)
2023.12.03 11:10:26 INFO  time: compiled app in 0.21s
2023.12.03 11:10:30 INFO  compiling app (1 scala source)
2023.12.03 11:10:30 INFO  time: compiled app in 0.19s
2023.12.03 11:10:42 INFO  compiling app (1 scala source)
2023.12.03 11:10:42 INFO  time: compiled app in 0.18s
2023.12.03 11:10:48 INFO  compiling app (1 scala source)
2023.12.03 11:10:49 INFO  time: compiled app in 1.2s
dic. 03, 2023 11:11:22 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2004
2023.12.03 11:11:24 INFO  compiling app (1 scala source)
2023.12.03 11:11:26 INFO  time: compiled app in 1.95s
2023.12.03 11:12:30 INFO  compiling app (1 scala source)
2023.12.03 11:12:32 INFO  time: compiled app in 1.38s
2023.12.03 11:12:39 INFO  compiling app (1 scala source)
2023.12.03 11:12:40 INFO  time: compiled app in 1.24s
Exception in thread "pool-4-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 11:14:20 INFO  compiling app (1 scala source)
2023.12.03 11:14:22 INFO  time: compiled app in 1.76s
Exception in thread "pool-4-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 11:15:33 INFO  compiling app (1 scala source)
2023.12.03 11:15:33 INFO  time: compiled app in 0.57s
2023.12.03 11:15:43 INFO  compiling app (1 scala source)
2023.12.03 11:15:43 WARN  Using indexes to guess the definition of sumMatrices
2023.12.03 11:15:43 INFO  time: compiled app in 0.47s
dic. 03, 2023 11:16:23 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2216
2023.12.03 11:17:43 INFO  compiling app (1 scala source)
2023.12.03 11:17:43 INFO  time: compiled app in 0.13s
2023.12.03 11:17:51 INFO  compiling app (1 scala source)
2023.12.03 11:17:51 INFO  time: compiled app in 0.5s
2023.12.03 11:18:18 INFO  compiling app (1 scala source)
2023.12.03 11:18:21 INFO  time: compiled app in 2.18s
2023.12.03 11:18:28 INFO  compiling app (1 scala source)
2023.12.03 11:18:29 INFO  time: compiled app in 1.78s
dic. 03, 2023 11:18:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2556
2023.12.03 11:18:48 INFO  compiling app (1 scala source)
2023.12.03 11:18:49 INFO  time: compiled app in 1.7s
2023.12.03 11:18:57 INFO  compiling app (1 scala source)
2023.12.03 11:18:57 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 41m 2.846s)
2023.12.03 11:18:57 INFO  compiling app (1 scala source)
2023.12.03 11:18:58 INFO  time: compiled app in 1.4s
2023.12.03 11:18:59 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 11:18:58 INFO  compiling app (1 scala source)
2023.12.03 11:19:01 INFO  time: compiled app in 1.58s
2023.12.03 11:19:03 INFO  compiling app (1 scala source)
2023.12.03 11:19:04 INFO  time: compiled app in 1.39s
dic. 03, 2023 11:19:09 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2619
2023.12.03 11:19:23 INFO  compiling app (1 scala source)
2023.12.03 11:19:24 INFO  time: compiled app in 1.27s
dic. 03, 2023 11:19:34 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2685
2023.12.03 11:19:59 INFO  compiling app (1 scala source)
2023.12.03 11:20:00 INFO  time: compiled app in 1.34s
2023.12.03 11:21:28 INFO  compiling app (1 scala source)
2023.12.03 11:21:28 INFO  time: compiled app in 0.18s
2023.12.03 11:21:31 WARN  Using indexes to guess the definition of B
2023.12.03 11:21:31 INFO  compiling app (1 scala source)
2023.12.03 11:21:33 INFO  time: compiled app in 1.52s
2023.12.03 11:22:00 INFO  compiling app (1 scala source)
2023.12.03 11:22:00 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 44m 5.972s)
2023.12.03 11:22:00 INFO  compiling app (1 scala source)
2023.12.03 11:22:00 INFO  time: compiled app in 0.9s
dic. 03, 2023 11:23:05 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2994
2023.12.03 11:23:17 INFO  compiling app (1 scala source)
2023.12.03 11:23:17 INFO  time: compiled app in 0.15s
2023.12.03 11:23:24 INFO  compiling app (1 scala source)
2023.12.03 11:23:25 INFO  time: compiled app in 1.43s
2023.12.03 11:23:47 INFO  compiling app (1 scala source)
2023.12.03 11:23:48 INFO  time: compiled app in 1.07s
dic. 03, 2023 11:24:19 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3146
dic. 03, 2023 11:26:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3168
Exception in thread "pool-4-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 11:30:07 INFO  compiling app (1 scala source)
2023.12.03 11:30:07 INFO  time: compiled app in 0.27s
2023.12.03 11:30:29 INFO  compiling app (1 scala source)
2023.12.03 11:30:29 INFO  time: compiled app in 0.23s
2023.12.03 11:30:37 WARN  Using indexes to guess the definition of multMatriz
2023.12.03 11:30:37 INFO  compiling app (1 scala source)
2023.12.03 11:30:37 WARN  Using indexes to guess the definition of multMatriz
2023.12.03 11:30:37 INFO  time: compiled app in 0.24s
2023.12.03 11:30:43 INFO  compiling app (1 scala source)
2023.12.03 11:30:43 INFO  time: compiled app in 0.23s
2023.12.03 11:30:51 INFO  compiling app (1 scala source)
dic. 03, 2023 11:30:51 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3574
2023.12.03 11:30:51 INFO  time: compiled app in 0.21s
2023.12.03 11:30:55 INFO  compiling app (1 scala source)
2023.12.03 11:30:56 INFO  time: compiled app in 1.22s
2023.12.03 11:31:09 INFO  compiling app (1 scala source)
2023.12.03 11:31:11 INFO  time: compiled app in 1.46s
2023.12.03 11:31:32 INFO  compiling app (1 scala source)
2023.12.03 11:31:33 INFO  time: compiled app in 1.08s
2023.12.03 11:31:37 INFO  compiling app (1 scala source)
2023.12.03 11:31:38 INFO  time: compiled app in 1.54s
dic. 03, 2023 11:36:44 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3678
dic. 03, 2023 11:39:00 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4032
2023.12.03 11:39:02 INFO  compiling app (1 scala source)
2023.12.03 11:39:02 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 1m 7.552s)
2023.12.03 11:39:02 INFO  compiling app (1 scala source)
dic. 03, 2023 11:39:02 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4045
2023.12.03 11:39:04 INFO  time: compiled app in 2.24s
dic. 03, 2023 11:39:04 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 11:39:04 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 1m 10.327s)
Exception in thread "pool-4-thread-6" scala.tools.nsc.interactive.ShutdownReq$
dic. 03, 2023 11:44:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4335
dic. 03, 2023 11:44:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4336
dic. 03, 2023 11:44:53 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4440
2023.12.03 11:45:57 INFO  compiling app (1 scala source)
2023.12.03 11:45:59 INFO  time: compiled app in 1.65s
2023.12.03 11:46:08 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:37: error: unclosed comment
    /*val strassenTime = (1 to 100).map(_ => 0.0).toArray
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 11:46:11 INFO  compiling app (1 scala source)
2023.12.03 11:46:11 INFO  time: compiled app in 0.99s
2023.12.03 11:47:01 INFO  compiling app (1 scala source)
2023.12.03 11:47:03 INFO  time: compiled app in 1.54s
2023.12.03 11:49:30 INFO  compiling app (1 scala source)
2023.12.03 11:49:32 INFO  time: compiled app in 1.79s
dic. 03, 2023 11:49:32 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 11:49:43 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4795
2023.12.03 11:49:55 INFO  compiling app (1 scala source)
2023.12.03 11:49:57 INFO  time: compiled app in 1.97s
2023.12.03 11:50:12 INFO  compiling app (1 scala source)
2023.12.03 11:50:14 INFO  time: compiled app in 2.07s
dic. 03, 2023 11:50:59 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4945
2023.12.03 11:51:22 INFO  compiling app (1 scala source)
2023.12.03 11:51:23 INFO  time: compiled app in 1.57s
dic. 03, 2023 11:51:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5042
2023.12.03 11:51:46 INFO  compiling app (1 scala source)
2023.12.03 11:51:49 INFO  time: compiled app in 2.15s
dic. 03, 2023 11:51:49 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 11:51:55 INFO  compiling app (1 scala source)
2023.12.03 11:51:57 INFO  time: compiled app in 1.86s
dic. 03, 2023 11:52:13 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5088
dic. 03, 2023 11:52:21 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5148
2023.12.03 11:52:21 INFO  compiling app (1 scala source)
2023.12.03 11:52:23 INFO  time: compiled app in 1.87s
dic. 03, 2023 11:52:23 A. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 11:54:56 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5173
2023.12.03 11:55:13 INFO  compiling app (1 scala source)
2023.12.03 11:55:13 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 17m 19.267s)
2023.12.03 11:55:13 INFO  compiling app (1 scala source)
2023.12.03 11:55:14 INFO  time: compiled app in 0.99s
2023.12.03 11:55:31 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:37: error: unclosed comment
    /*val strassenTime = (1 to 100).map(_ => 0.0).toArray
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 11:55:31 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:37: error: unclosed comment
    /*val strassenTime = (1 to 100).map(_ => 0.0).toArray
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 11:55:35 INFO  compiling app (1 scala source)
2023.12.03 11:55:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 11:55:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 11:55:37 INFO  time: compiled app in 1.62s
2023.12.03 11:57:20 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:37: error: unclosed comment
    /*val strassenTime = (1 to 100).map(_ => 0.0).toArray
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 03, 2023 11:57:22 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5287
dic. 03, 2023 11:57:26 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5322
2023.12.03 11:57:29 INFO  compiling app (1 scala source)
2023.12.03 11:57:30 INFO  time: compiled app in 1.11s
2023.12.03 11:57:34 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:37: error: unclosed comment
    /*val strassenTime = (1 to 100).map(_ => 0.0).toArray
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 11:57:39 INFO  compiling app (1 scala source)
2023.12.03 11:57:40 INFO  time: compiled app in 1.15s
dic. 03, 2023 11:58:57 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5381
dic. 03, 2023 11:59:08 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5395
2023.12.03 11:59:21 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 11:59:21 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 11:59:22 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 11:59:23 INFO  Loaded expression compiler in 1 second
2023.12.03 11:59:23 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 11:59:23 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 11:59:29 INFO  Loaded all sources and classes in 5 seconds
2023.12.03 11:59:29 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62822 .
2023.12.03 11:59:29 INFO  Attaching to debuggee VM succeeded.
2023.12.03 11:59:36 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 11:59:36 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 11:59:36 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 11:59:37 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 11:59:37 INFO  Loaded expression compiler in 2 milliseconds
2023.12.03 11:59:37 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 11:59:37 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 11:59:40 INFO  Loaded all sources and classes in 2 seconds
2023.12.03 11:59:40 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62832 .
2023.12.03 11:59:40 INFO  Attaching to debuggee VM succeeded.
2023.12.03 12:00:58 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 12:00:58 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 12:00:58 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 12:00:58 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 12:00:58 INFO  Loaded expression compiler in 2 milliseconds
2023.12.03 12:00:58 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:00:58 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:01:01 INFO  Loaded all sources and classes in 2 seconds
2023.12.03 12:01:01 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62841 .
2023.12.03 12:01:01 INFO  Attaching to debuggee VM succeeded.
dic. 03, 2023 12:01:04 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 12:01:58 INFO  Closing debug server tcp://0.0.0.0:62839
2023.12.03 12:01:58 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 12:06:47 INFO  compiling app (1 scala source)
2023.12.03 12:06:49 INFO  time: compiled app in 1.75s
2023.12.03 12:06:54 INFO  compiling app (1 scala source)
2023.12.03 12:06:56 INFO  time: compiled app in 1.34s
2023.12.03 12:08:02 INFO  compiling app (1 scala source)
2023.12.03 12:08:04 INFO  time: compiled app in 2.26s
2023.12.03 12:09:36 INFO  compiling app (1 scala source)
2023.12.03 12:09:38 INFO  time: compiled app in 1.43s
2023.12.03 12:09:47 INFO  compiling app (1 scala source)
2023.12.03 12:09:47 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 31m 52.496s)
2023.12.03 12:09:47 INFO  compiling app (1 scala source)
2023.12.03 12:09:48 INFO  time: compiled app in 1.46s
2023.12.03 12:10:04 INFO  compiling app (1 scala source)
2023.12.03 12:10:04 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 12:10:04 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 12:10:06 INFO  time: compiled app in 1.53s
2023.12.03 12:10:26 INFO  compiling app (1 scala source)
2023.12.03 12:10:28 INFO  time: compiled app in 2.34s
2023.12.03 12:10:52 INFO  compiling app (1 scala source)
2023.12.03 12:10:52 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 12:10:52 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
Exception in thread "pool-4-thread-7" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 12:10:52 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 12:10:52 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 12:10:53 INFO  time: compiled app in 1.59s
2023.12.03 12:11:45 INFO  compiling app (1 scala source)
2023.12.03 12:11:45 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 33m 51.201s)
2023.12.03 12:11:45 INFO  compiling app (1 scala source)
dic. 03, 2023 12:11:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5955
dic. 03, 2023 12:11:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5957
2023.12.03 12:11:47 INFO  time: compiled app in 1.66s
dic. 03, 2023 12:11:47 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 12:13:41 INFO  compiling app (1 scala source)
2023.12.03 12:13:43 INFO  time: compiled app in 1.21s
2023.12.03 12:14:42 INFO  compiling app (1 scala source)
2023.12.03 12:14:43 INFO  time: compiled app in 1.33s
2023.12.03 12:14:50 INFO  compiling app (1 scala source)
2023.12.03 12:14:51 INFO  time: compiled app in 1.26s
2023.12.03 12:14:56 INFO  compiling app (1 scala source)
2023.12.03 12:14:57 INFO  time: compiled app in 1.39s
2023.12.03 12:15:06 INFO  compiling app (1 scala source)
2023.12.03 12:15:08 INFO  time: compiled app in 2.07s
2023.12.03 12:18:10 INFO  compiling app (1 scala source)
2023.12.03 12:18:11 INFO  time: compiled app in 1.13s
2023.12.03 12:18:41 INFO  compiling app (1 scala source)
2023.12.03 12:18:42 INFO  time: compiled app in 1.17s
2023.12.03 12:18:43 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 12:18:43 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 12:18:43 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 12:18:43 INFO  Loaded expression compiler in 0 milliseconds
2023.12.03 12:18:43 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:18:43 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:18:47 INFO  Loaded all sources and classes in 3 seconds
2023.12.03 12:18:47 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63163 .
2023.12.03 12:18:47 INFO  Attaching to debuggee VM succeeded.
2023.12.03 12:19:20 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 12:19:20 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 12:19:20 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 12:19:20 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 12:19:20 INFO  Loaded expression compiler in 3 milliseconds
2023.12.03 12:19:20 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:19:20 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:19:24 INFO  Loaded all sources and classes in 3 seconds
2023.12.03 12:19:24 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63170 .
2023.12.03 12:19:24 INFO  Attaching to debuggee VM succeeded.
2023.12.03 12:19:43 INFO  compiling app (1 scala source)
2023.12.03 12:19:44 INFO  time: compiled app in 1.29s
2023.12.03 12:19:53 INFO  compiling app (1 scala source)
2023.12.03 12:19:55 INFO  time: compiled app in 1.47s
2023.12.03 12:20:08 INFO  compiling app (1 scala source)
2023.12.03 12:20:09 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 12:20:11 INFO  time: compiled app in 2.11s
2023.12.03 12:20:28 INFO  Shutting down server
2023.12.03 12:20:28 INFO  shutting down Metals
2023.12.03 12:20:28 INFO  Shut down connection with build server.
dic. 03, 2023 12:20:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$2(BuildServerConnection.scala:361)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:210)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$1(BuildServerConnection.scala:361)
	at scala.meta.internal.metals.Cancelable$$anon$1.cancel(Cancelable.scala:18)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:301)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$shutdown$1(BuildServerConnection.scala:139)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$shutdown$1$adapted(BuildServerConnection.scala:131)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 20 more

2023.12.03 12:20:28 INFO  Cancelling compilation on Bloop server
2023.12.03 12:20:28 INFO  Cancelling compilation on Bloop server
2023.12.03 12:20:28 INFO  Exiting server
2023.12.03 12:21:17 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 12:21:22 INFO  Attempting to connect to the build server...
2023.12.03 12:21:22 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 12:21:23 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 12:21:23 INFO  skipping build import with status 'Installed'
2023.12.03 12:21:23 INFO  time: Connected to build server in 2.13s
2023.12.03 12:21:23 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 12:21:42 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.03 12:21:44 INFO  time: Imported build in 0.21s
2023.12.03 12:21:49 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala. Using presentation compiler with project's scala-library version: 3.3.1
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 12:21:52 INFO  time: indexed workspace in 8.77s
2023.12.03 12:22:07 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 12:22:09 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 12:22:09 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 12:22:09 INFO  Loaded expression compiler in 4 milliseconds
2023.12.03 12:22:09 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:22:09 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:22:15 INFO  Loaded all sources and classes in 5 seconds
2023.12.03 12:22:15 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63345 .
2023.12.03 12:22:15 INFO  Attaching to debuggee VM succeeded.
2023.12.03 12:23:12 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 12:23:13 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 12:23:13 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 12:23:13 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 12:23:14 INFO  Loaded expression compiler in 0 milliseconds
2023.12.03 12:23:14 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:23:14 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 12:23:19 INFO  Loaded all sources and classes in 4 seconds
2023.12.03 12:23:19 INFO  Trying to attach to remote debuggee VM 127.0.0.1:63376 .
2023.12.03 12:23:19 INFO  Attaching to debuggee VM succeeded.
2023.12.03 12:26:00 INFO  Closing debug server tcp://0.0.0.0:63372
2023.12.03 12:26:00 INFO  Canceling debug proxy for [taller4.Taller4]
dic. 03, 2023 1:28:39 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
dic. 03, 2023 1:41:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 231
2023.12.03 13:42:08 INFO  compiling app (1 scala source)
2023.12.03 13:42:10 INFO  time: compiled app in 1.27s
2023.12.03 13:42:16 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 1h 20m 52.186s)
2023.12.03 13:42:16 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.03 13:42:16 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.03 13:42:16 INFO  Starting debug proxy for [taller4.Taller4]
2023.12.03 13:42:16 INFO  Loaded expression compiler in 1 millisecond
2023.12.03 13:42:16 WARN  Found duplicate entry scala-xml_2.13 in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 13:42:16 WARN  Found duplicate entry scala-library in debuggee MainClassDebugAdapter(app, taller4.Taller4)
2023.12.03 13:42:19 INFO  Loaded all sources and classes in 2 seconds
2023.12.03 13:42:19 INFO  Trying to attach to remote debuggee VM 127.0.0.1:62178 .
2023.12.03 13:42:19 INFO  Attaching to debuggee VM succeeded.
2023.12.03 13:46:47 INFO  Closing debug server tcp://0.0.0.0:62176
2023.12.03 13:46:47 INFO  Canceling debug proxy for [taller4.Taller4]
2023.12.03 13:49:04 INFO  compiling app (1 scala source)
2023.12.03 13:49:06 INFO  time: compiled app in 1.96s
2023.12.03 15:03:36 INFO  compiling app (1 scala source)
2023.12.03 15:03:38 INFO  time: compiled app in 1.8s
2023.12.03 15:05:18 INFO  compiling app (1 scala source)
2023.12.03 15:05:20 INFO  time: compiled app in 1.84s
2023.12.03 15:05:57 INFO  compiling app (1 scala source)
2023.12.03 15:05:58 INFO  time: compiled app in 1.34s
2023.12.03 15:06:38 INFO  compiling app (1 scala source)
2023.12.03 15:06:39 INFO  time: compiled app in 1.06s
dic. 03, 2023 3:16:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1285
2023.12.03 15:34:32 INFO  compiling app (1 scala source)
2023.12.03 15:34:34 INFO  time: compiled app in 2.21s
2023.12.03 15:57:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:234: error: illegal character '\u00a0'
    m1(i)(j) + m2(i)(j)
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 15:58:00 INFO  compiling app (1 scala source)
2023.12.03 15:58:00 INFO  time: compiled app in 0.26s
2023.12.03 15:58:01 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:234: error: illegal character '\u00a0'
    m1(i)(j) + m2(i)(j)
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 15:58:04 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:234: error: illegal character '\u00a0'
    m1(i)(j) + m2(i)(j)
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 15:58:04 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:234: error: illegal character '\u00a0'
    m1(i)(j) + m2(i)(j)}
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 15:58:08 INFO  compiling app (1 scala source)
2023.12.03 15:58:08 INFO  time: compiled app in 0.38s
2023.12.03 15:58:24 INFO  compiling app (1 scala source)
2023.12.03 15:58:26 INFO  time: compiled app in 1.9s
2023.12.03 15:58:36 INFO  compiling app (1 scala source)
2023.12.03 15:58:38 INFO  time: compiled app in 1.57s
2023.12.03 15:58:41 INFO  compiling app (1 scala source)
dic. 03, 2023 3:58:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1585
dic. 03, 2023 3:58:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1586
2023.12.03 15:58:41 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 3h 37m 18.144s)
2023.12.03 15:58:41 INFO  compiling app (1 scala source)
2023.12.03 15:58:44 INFO  time: compiled app in 2.14s
2023.12.03 15:58:44 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==-ffSzPWrQT1iZ1JNmEtHerQ==\META-INF\semanticdb\app\src\main\scala\taller4\strassen.scala.semanticdb to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==\META-INF\semanticdb\app\src\main\scala\taller4\strassen.scala.semanticdb, you might need to restart the build server.
2023.12.03 15:58:44 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==-ffSzPWrQT1iZ1JNmEtHerQ==\META-INF\semanticdb\app\src\main\scala\taller4\implAlgoritmos.scala.semanticdb to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==\META-INF\semanticdb\app\src\main\scala\taller4\implAlgoritmos.scala.semanticdb, you might need to restart the build server.
2023.12.03 15:58:44 ERROR Build server error: Unexpected error when copying C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-internal-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==-ffSzPWrQT1iZ1JNmEtHerQ==\META-INF\semanticdb\app\src\main\scala\common\package.scala.semanticdb to C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.bloop\app\build\bloop-bsp-clients-classes\classes-Metals-v4Nd5IGNT0qZMc_NgtrMgg==\META-INF\semanticdb\app\src\main\scala\common\package.scala.semanticdb, you might need to restart the build server.
2023.12.03 16:05:08 INFO  compiling app (1 scala source)
2023.12.03 16:05:10 INFO  time: compiled app in 1.49s
2023.12.03 16:05:10 INFO  compiling app (1 scala source)
dic. 03, 2023 4:05:10 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 16:05:10 INFO  time: compiled app in 0.19s
Exception in thread "pool-5-thread-2" scala.tools.nsc.interactive.ShutdownReq$
2023.12.03 16:05:10 INFO  compiling app (1 scala source)
2023.12.03 16:05:10 INFO  time: compiled app in 0.73s
2023.12.03 16:05:10 INFO  compiling app (1 scala source)
2023.12.03 16:05:11 INFO  time: compiled app in 0.25s
2023.12.03 16:05:17 INFO  compiling app (3 scala sources)
2023.12.03 16:05:20 INFO  time: compiled app in 2.87s
2023.12.03 16:06:42 INFO  compiling app (1 scala source)
2023.12.03 16:06:43 INFO  time: compiled app in 1.48s
2023.12.03 16:10:27 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:39: error: unclosed comment
    /*
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:10:30 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:39: error: unclosed comment
    /*
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:10:30 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:39: error: unclosed comment
    /*
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

Exception in thread "pool-5-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 16:10:32 INFO  compiling app (1 scala source)
2023.12.03 16:10:33 INFO  time: compiled app in 1.26s
dic. 03, 2023 4:10:33 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 4:12:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1856
2023.12.03 16:12:59 INFO  compiling app (1 scala source)
2023.12.03 16:12:59 INFO  time: compiled app in 0.24s
2023.12.03 16:13:00 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:05 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:08 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:10 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:13 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:14 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:13:18 INFO  compiling app (1 scala source)
2023.12.03 16:13:19 INFO  time: compiled app in 1.57s
2023.12.03 16:24:36 INFO  compiling app (1 scala source)
2023.12.03 16:24:36 INFO  time: compiled app in 0.18s
2023.12.03 16:24:57 INFO  compiling app (1 scala source)
2023.12.03 16:24:58 INFO  time: compiled app in 1.04s
2023.12.03 16:25:37 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:40 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:41 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:42 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:43 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      } }}
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:45 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }}}
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:45 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
   }}}
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:25:47 INFO  compiling app (1 scala source)
dic. 03, 2023 4:25:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2142
2023.12.03 16:25:50 INFO  time: compiled app in 2.26s
2023.12.03 16:26:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:39: error: unclosed comment
    /*
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:52)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:71)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:313)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:26:14 INFO  compiling app (1 scala source)
2023.12.03 16:26:14 INFO  time: compiled app in 0.93s
2023.12.03 16:26:40 INFO  compiling app (1 scala source)
2023.12.03 16:26:40 INFO  time: compiled app in 0.74s
Exception in thread "pool-5-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 16:31:04 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }}}
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:31:05 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:31:05 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:222: error: illegal character '\u00a0'
      }
 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 16:31:08 INFO  compiling app (1 scala source)
2023.12.03 16:31:09 INFO  time: compiled app in 1.01s
2023.12.03 16:31:09 INFO  compiling app (1 scala source)
2023.12.03 16:31:09 INFO  time: compiled app in 0.11s
2023.12.03 16:31:15 INFO  compiling app (3 scala sources)
2023.12.03 16:31:17 INFO  time: compiled app in 2.05s
dic. 03, 2023 4:31:18 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2304
2023.12.03 16:36:52 INFO  compiling app (1 scala source)
2023.12.03 16:36:52 INFO  time: compiled app in 0.2s
2023.12.03 16:36:53 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:08 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:10 INFO  compiling app (1 scala source)
2023.12.03 16:37:10 INFO  time: compiled app in 0.17s
2023.12.03 16:37:10 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:24 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:26 INFO  compiling app (1 scala source)
2023.12.03 16:37:26 INFO  time: compiled app in 0.22s
2023.12.03 16:37:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:31 INFO  compiling app (1 scala source)
2023.12.03 16:37:31 INFO  time: compiled app in 0.22s
2023.12.03 16:37:31 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:38 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:38 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:37:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:44:42 INFO  compiling app (1 scala source)
2023.12.03 16:44:43 WARN  Using indexes to guess the definition of Int
2023.12.03 16:44:42 INFO  time: compiled app in 0.53s
dic. 03, 2023 4:45:21 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2852
2023.12.03 16:45:31 INFO  compiling app (1 scala source)
2023.12.03 16:45:32 INFO  time: compiled app in 1.3s
2023.12.03 16:46:03 INFO  compiling app (1 scala source)
2023.12.03 16:46:03 INFO  time: compiled app in 0.13s
2023.12.03 16:46:05 INFO  compiling app (1 scala source)
2023.12.03 16:46:06 INFO  time: compiled app in 1.15s
2023.12.03 16:46:17 INFO  compiling app (1 scala source)
2023.12.03 16:46:19 INFO  time: compiled app in 1.23s
dic. 03, 2023 4:47:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3346
Exception in thread "pool-5-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 16:47:43 INFO  compiling app (1 scala source)
2023.12.03 16:47:43 INFO  time: compiled app in 94ms
2023.12.03 16:48:11 INFO  compiling app (1 scala source)
2023.12.03 16:48:11 INFO  time: compiled app in 0.14s
2023.12.03 16:48:15 INFO  compiling app (1 scala source)
2023.12.03 16:48:16 INFO  time: compiled app in 1.56s
dic. 03, 2023 4:48:40 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3483
dic. 03, 2023 4:48:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3486
2023.12.03 16:49:09 INFO  compiling app (1 scala source)
2023.12.03 16:49:09 INFO  time: compiled app in 60ms
2023.12.03 16:49:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:49:12 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:49:14 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:49:18 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 16:49:18 INFO  compiling app (1 scala source)
2023.12.03 16:49:18 INFO  time: compiled app in 0.95s
2023.12.03 16:49:34 INFO  compiling app (1 scala source)
2023.12.03 16:49:34 INFO  time: compiled app in 0.93s
2023.12.03 16:51:45 INFO  compiling app (1 scala source)
2023.12.03 16:51:45 INFO  time: compiled app in 0.94s
dic. 03, 2023 4:52:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3678
2023.12.03 16:52:10 INFO  compiling app (1 scala source)
2023.12.03 16:52:10 INFO  time: compiled app in 0.16s
2023.12.03 16:52:24 INFO  compiling app (1 scala source)
2023.12.03 16:52:24 INFO  time: compiled app in 0.23s
2023.12.03 16:52:29 INFO  compiling app (1 scala source)
2023.12.03 16:52:29 INFO  time: compiled app in 0.21s
2023.12.03 16:52:34 INFO  compiling app (1 scala source)
2023.12.03 16:52:34 INFO  time: compiled app in 0.14s
2023.12.03 16:53:25 INFO  compiling app (1 scala source)
2023.12.03 16:53:25 INFO  time: compiled app in 0.12s
2023.12.03 16:53:32 INFO  compiling app (1 scala source)
2023.12.03 16:53:32 INFO  time: compiled app in 0.12s
2023.12.03 16:54:01 INFO  compiling app (1 scala source)
2023.12.03 16:54:01 INFO  time: compiled app in 0.15s
2023.12.03 16:54:05 INFO  compiling app (1 scala source)
2023.12.03 16:54:05 INFO  time: compiled app in 0.13s
2023.12.03 16:54:14 INFO  compiling app (1 scala source)
2023.12.03 16:54:15 INFO  time: compiled app in 1.11s
2023.12.03 16:54:25 INFO  compiling app (1 scala source)
2023.12.03 16:54:25 INFO  time: compiled app in 0.13s
dic. 03, 2023 4:54:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4047
dic. 03, 2023 4:54:25 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4048
dic. 03, 2023 4:54:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4074
2023.12.03 16:55:01 INFO  compiling app (1 scala source)
2023.12.03 16:55:01 INFO  time: compiled app in 0.2s
2023.12.03 16:55:23 INFO  compiling app (1 scala source)
2023.12.03 16:55:23 INFO  time: compiled app in 0.86s
2023.12.03 16:55:37 INFO  compiling app (1 scala source)
2023.12.03 16:55:37 INFO  time: compiled app in 78ms
2023.12.03 16:55:40 INFO  compiling app (1 scala source)
2023.12.03 16:55:40 INFO  time: compiled app in 0.92s
2023.12.03 16:56:34 INFO  compiling app (1 scala source)
2023.12.03 16:56:34 INFO  time: compiled app in 0.89s
2023.12.03 16:57:45 INFO  compiling app (1 scala source)
2023.12.03 16:57:47 INFO  time: compiled app in 1.3s
2023.12.03 16:58:10 INFO  compiling app (1 scala source)
2023.12.03 16:58:10 INFO  time: compiled app in 0.73s
2023.12.03 16:59:18 INFO  compiling app (1 scala source)
2023.12.03 16:59:18 INFO  time: compiled app in 0.96s
dic. 03, 2023 5:00:18 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 17:01:45 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 03, 2023 5:01:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\n/*\n *\n *\n *\n *\n *\n * Written by Doug Lea with assistance from members of JCP JSR-166\n * Expert Group and released to the public domain, as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\n\npackage java.util.concurrent;\n\nimport java.io.Serializable;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.VarHandle;\nimport java.lang.reflect.Constructor;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.RandomAccess;\nimport java.util.concurrent.locks.LockSupport;\n\n/**\n * Abstract base class for tasks that run within a {@link ForkJoinPool}.\n * A {@code ForkJoinTask} is a thread-like entity that is much\n * lighter weight than a normal thread.  Huge numbers of tasks and\n * subtasks may be hosted by a small number of actual threads in a\n * ForkJoinPool, at the price of some usage limitations.\n *\n * \u003cp\u003eA \"main\" {@code ForkJoinTask} begins execution when it is\n * explicitly submitted to a {@link ForkJoinPool}, or, if not already\n * engaged in a ForkJoin computation, commenced in the {@link\n * ForkJoinPool#commonPool()} via {@link #fork}, {@link #invoke}, or\n * related methods.  Once started, it will usually in turn start other\n * subtasks.  As indicated by the name of this class, many programs\n * using {@code ForkJoinTask} employ only methods {@link #fork} and\n * {@link #join}, or derivatives such as {@link\n * #invokeAll(ForkJoinTask...) invokeAll}.  However, this class also\n * provides a number of other methods that can come into play in\n * advanced usages, as well as extension mechanics that allow support\n * of new forms of fork/join processing.\n *\n * \u003cp\u003eA {@code ForkJoinTask} is a lightweight form of {@link Future}.\n * The efficiency of {@code ForkJoinTask}s stems from a set of\n * restrictions (that are only partially statically enforceable)\n * reflecting their main use as computational tasks calculating pure\n * functions or operating on purely isolated objects.  The primary\n * coordination mechanisms are {@link #fork}, that arranges\n * asynchronous execution, and {@link #join}, that doesn\u0027t proceed\n * until the task\u0027s result has been computed.  Computations should\n * ideally avoid {@code synchronized} methods or blocks, and should\n * minimize other blocking synchronization apart from joining other\n * tasks or using synchronizers such as Phasers that are advertised to\n * cooperate with fork/join scheduling. Subdividable tasks should also\n * not perform blocking I/O, and should ideally access variables that\n * are completely independent of those accessed by other running\n * tasks. These guidelines are loosely enforced by not permitting\n * checked exceptions such as {@code IOExceptions} to be\n * thrown. However, computations may still encounter unchecked\n * exceptions, that are rethrown to callers attempting to join\n * them. These exceptions may additionally include {@link\n * RejectedExecutionException} stemming from internal resource\n * exhaustion, such as failure to allocate internal task\n * queues. Rethrown exceptions behave in the same way as regular\n * exceptions, but, when possible, contain stack traces (as displayed\n * for example using {@code ex.printStackTrace()}) of both the thread\n * that initiated the computation as well as the thread actually\n * encountering the exception; minimally only the latter.\n *\n * \u003cp\u003eIt is possible to define and use ForkJoinTasks that may block,\n * but doing so requires three further considerations: (1) Completion\n * of few if any \u003cem\u003eother\u003c/em\u003e tasks should be dependent on a task\n * that blocks on external synchronization or I/O. Event-style async\n * tasks that are never joined (for example, those subclassing {@link\n * CountedCompleter}) often fall into this category.  (2) To minimize\n * resource impact, tasks should be small; ideally performing only the\n * (possibly) blocking action. (3) Unless the {@link\n * ForkJoinPool.ManagedBlocker} API is used, or the number of possibly\n * blocked tasks is known to be less than the pool\u0027s {@link\n * ForkJoinPool#getParallelism} level, the pool cannot guarantee that\n * enough threads will be available to ensure progress or good\n * performance.\n *\n * \u003cp\u003eThe primary method for awaiting completion and extracting\n * results of a task is {@link #join}, but there are several variants:\n * The {@link Future#get} methods support interruptible and/or timed\n * waits for completion and report results using {@code Future}\n * conventions. Method {@link #invoke} is semantically\n * equivalent to {@code fork(); join()} but always attempts to begin\n * execution in the current thread. The \"\u003cem\u003equiet\u003c/em\u003e\" forms of\n * these methods do not extract results or report exceptions. These\n * may be useful when a set of tasks are being executed, and you need\n * to delay processing of results or exceptions until all complete.\n * Method {@code invokeAll} (available in multiple versions)\n * performs the most common form of parallel invocation: forking a set\n * of tasks and joining them all.\n *\n * \u003cp\u003eIn the most typical usages, a fork-join pair act like a call\n * (fork) and return (join) from a parallel recursive function. As is\n * the case with other forms of recursive calls, returns (joins)\n * should be performed innermost-first. For example, {@code a.fork();\n * b.fork(); b.join(); a.join();} is likely to be substantially more\n * efficient than joining {@code a} before {@code b}.\n *\n * \u003cp\u003eThe execution status of tasks may be queried at several levels\n * of detail: {@link #isDone} is true if a task completed in any way\n * (including the case where a task was cancelled without executing);\n * {@link #isCompletedNormally} is true if a task completed without\n * cancellation or encountering an exception; {@link #isCancelled} is\n * true if the task was cancelled (in which case {@link #getException}\n * returns a {@link CancellationException}); and\n * {@link #isCompletedAbnormally} is true if a task was either\n * cancelled or encountered an exception, in which case {@link\n * #getException} will return either the encountered exception or\n * {@link CancellationException}.\n *\n * \u003cp\u003eThe ForkJoinTask class is not usually directly subclassed.\n * Instead, you subclass one of the abstract classes that support a\n * particular style of fork/join processing, typically {@link\n * RecursiveAction} for most computations that do not return results,\n * {@link RecursiveTask} for those that do, and {@link\n * CountedCompleter} for those in which completed actions trigger\n * other actions.  Normally, a concrete ForkJoinTask subclass declares\n * fields comprising its parameters, established in a constructor, and\n * then defines a {@code compute} method that somehow uses the control\n * methods supplied by this base class.\n *\n * \u003cp\u003eMethod {@link #join} and its variants are appropriate for use\n * only when completion dependencies are acyclic; that is, the\n * parallel computation can be described as a directed acyclic graph\n * (DAG). Otherwise, executions may encounter a form of deadlock as\n * tasks cyclically wait for each other.  However, this framework\n * supports other methods and techniques (for example the use of\n * {@link Phaser}, {@link #helpQuiesce}, and {@link #complete}) that\n * may be of use in constructing custom subclasses for problems that\n * are not statically structured as DAGs. To support such usages, a\n * ForkJoinTask may be atomically \u003cem\u003etagged\u003c/em\u003e with a {@code short}\n * value using {@link #setForkJoinTaskTag} or {@link\n * #compareAndSetForkJoinTaskTag} and checked using {@link\n * #getForkJoinTaskTag}. The ForkJoinTask implementation does not use\n * these {@code protected} methods or tags for any purpose, but they\n * may be of use in the construction of specialized subclasses.  For\n * example, parallel graph traversals can use the supplied methods to\n * avoid revisiting nodes/tasks that have already been processed.\n * (Method names for tagging are bulky in part to encourage definition\n * of methods that reflect their usage patterns.)\n *\n * \u003cp\u003eMost base support methods are {@code final}, to prevent\n * overriding of implementations that are intrinsically tied to the\n * underlying lightweight task scheduling framework.  Developers\n * creating new basic styles of fork/join processing should minimally\n * implement {@code protected} methods {@link #exec}, {@link\n * #setRawResult}, and {@link #getRawResult}, while also introducing\n * an abstract computational method that can be implemented in its\n * subclasses, possibly relying on other {@code protected} methods\n * provided by this class.\n *\n * \u003cp\u003eForkJoinTasks should perform relatively small amounts of\n * computation. Large tasks should be split into smaller subtasks,\n * usually via recursive decomposition. As a very rough rule of thumb,\n * a task should perform more than 100 and less than 10000 basic\n * computational steps, and should avoid indefinite looping. If tasks\n * are too big, then parallelism cannot improve throughput. If too\n * small, then memory and internal task maintenance overhead may\n * overwhelm processing.\n *\n * \u003cp\u003eThis class provides {@code adapt} methods for {@link Runnable}\n * and {@link Callable}, that may be of use when mixing execution of\n * {@code ForkJoinTasks} with other kinds of tasks. When all tasks are\n * of this form, consider using a pool constructed in \u003cem\u003easyncMode\u003c/em\u003e.\n *\n * \u003cp\u003eForkJoinTasks are {@code Serializable}, which enables them to be\n * used in extensions such as remote execution frameworks. It is\n * sensible to serialize tasks only before or after, but not during,\n * execution. Serialization is not relied on during execution itself.\n *\n * @since 1.7\n * @author Doug Lea\n */\npublic abstract class ForkJoinTask\u003cV\u003e implements Future\u003cV\u003e, Serializable {\n\n    /*\n     * See the internal documentation of class ForkJoinPool for a\n     * general implementation overview.  ForkJoinTasks are mainly\n     * responsible for maintaining their \"status\" field amidst relays\n     * to methods in ForkJoinWorkerThread and ForkJoinPool.\n     *\n     * The methods of this class are more-or-less layered into\n     * (1) basic status maintenance\n     * (2) execution and awaiting completion\n     * (3) user-level methods that additionally report results.\n     * This is sometimes hard to see because this file orders exported\n     * methods in a way that flows well in javadocs.\n     *\n     * Revision notes: The use of \"Aux\" field replaces previous\n     * reliance on a table to hold exceptions and synchronized blocks\n     * and monitors to wait for completion.\n     */\n\n    /**\n     * Nodes for threads waiting for completion, or holding a thrown\n     * exception (never both). Waiting threads prepend nodes\n     * Treiber-stack-style.  Signallers detach and unpark\n     * waiters. Cancelled waiters try to unsplice.\n     */\n    static final class Aux {\n        final Thread thread;\n        final Throwable ex;  // null if a waiter\n        Aux next;            // accessed only via memory-acquire chains\n        Aux(Thread thread, Throwable ex) {\n            this.thread \u003d thread;\n            this.ex \u003d ex;\n        }\n        final boolean casNext(Aux c, Aux v) { // used only in cancellation\n            return NEXT.compareAndSet(this, c, v);\n        }\n        private static final VarHandle NEXT;\n        static {\n            try {\n                NEXT \u003d MethodHandles.lookup()\n                    .findVarHandle(Aux.class, \"next\", Aux.class);\n            } catch (ReflectiveOperationException e) {\n                throw new ExceptionInInitializerError(e);\n            }\n        }\n    }\n\n    /*\n     * The status field holds bits packed into a single int to ensure\n     * atomicity.  Status is initially zero, and takes on nonnegative\n     * values until completed, upon which it holds (sign bit) DONE,\n     * possibly with ABNORMAL (cancelled or exceptional) and THROWN\n     * (in which case an exception has been stored). A value of\n     * ABNORMAL without DONE signifies an interrupted wait.  These\n     * control bits occupy only (some of) the upper half (16 bits) of\n     * status field. The lower bits are used for user-defined tags.\n     */\n    private static final int DONE         \u003d 1 \u003c\u003c 31; // must be negative\n    private static final int ABNORMAL     \u003d 1 \u003c\u003c 16;\n    private static final int THROWN       \u003d 1 \u003c\u003c 17;\n    private static final int SMASK        \u003d 0xffff;  // short bits for tags\n    private static final int UNCOMPENSATE \u003d 1 \u003c\u003c 16; // helpJoin return sentinel\n\n    // Fields\n    volatile int status;                // accessed directly by pool and workers\n    private transient volatile Aux aux; // either waiters or thrown Exception\n\n    // Support for atomic operations\n    private static final VarHandle STATUS;\n    private static final VarHandle AUX;\n    private int getAndBitwiseOrStatus(int v) {\n        return (int)STATUS.getAndBitwiseOr(this, v);\n    }\n    private boolean casStatus(int c, int v) {\n        return STATUS.compareAndSet(this, c, v);\n    }\n    private boolean casAux(Aux c, Aux v) {\n        return AUX.compareAndSet(this, c, v);\n    }\n\n    /** Removes and unparks waiters */\n    private void signalWaiters() {\n        for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n            if (casAux(a, null)) {             // detach entire list\n                for (Thread t; a !\u003d null; a \u003d a.next) {\n                    if ((t \u003d a.thread) !\u003d Thread.currentThread() \u0026\u0026 t !\u003d null)\n                        LockSupport.unpark(t); // don\u0027t self-signal\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * Sets DONE status and wakes up threads waiting to join this task.\n     * @return status on exit\n     */\n    private int setDone() {\n        int s \u003d getAndBitwiseOrStatus(DONE) | DONE;\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Sets ABNORMAL DONE status unless already done, and wakes up threads\n     * waiting to join this task.\n     * @return status on exit\n     */\n    private int trySetCancelled() {\n        int s;\n        do {} while ((s \u003d status) \u003e\u003d 0 \u0026\u0026 !casStatus(s, s |\u003d (DONE | ABNORMAL)));\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Records exception and sets ABNORMAL THROWN DONE status unless\n     * already done, and wakes up threads waiting to join this task.\n     * If losing a race with setDone or trySetCancelled, the exception\n     * may be recorded but not reported.\n     *\n     * @return status on exit\n     */\n    final int trySetThrown(Throwable ex) {\n        Aux h \u003d new Aux(Thread.currentThread(), ex), p \u003d null;\n        boolean installed \u003d false;\n        int s;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a;\n            if (!installed \u0026\u0026 ((a \u003d aux) \u003d\u003d null || a.ex \u003d\u003d null) \u0026\u0026\n                (installed \u003d casAux(a, h)))\n                p \u003d a; // list of waiters replaced by h\n            if (installed \u0026\u0026 casStatus(s, s |\u003d (DONE | ABNORMAL | THROWN)))\n                break;\n        }\n        for (; p !\u003d null; p \u003d p.next)\n            LockSupport.unpark(p.thread);\n        return s;\n    }\n\n    /**\n     * Records exception unless already done. Overridable in subclasses.\n     *\n     * @return status on exit\n     */\n    int trySetException(Throwable ex) {\n        return trySetThrown(ex);\n    }\n\n    /**\n     * Constructor for subclasses to call.\n     */\n    public ForkJoinTask() {}\n\n    static boolean isExceptionalStatus(int s) {  // needed by subclasses\n        return (s \u0026 THROWN) !\u003d 0;\n    }\n\n    /**\n     * Unless done, calls exec and records status if completed, but\n     * doesn\u0027t wait for completion otherwise.\n     *\n     * @return status on exit from this method\n     */\n    final int doExec() {\n        int s; boolean completed;\n        if ((s \u003d status) \u003e\u003d 0) {\n            try {\n                completed \u003d exec();\n            } catch (Throwable rex) {\n                s \u003d trySetException(rex);\n                completed \u003d false;\n            }\n            if (completed)\n                s \u003d setDone();\n        }\n        return s;\n    }\n\n    /**\n     * Helps and/or waits for completion from join, get, or invoke;\n     * called from either internal or external threads.\n     *\n     * @param pool if nonnull, known submitted pool, else assumes current pool\n     * @param ran true if task known to have been exec\u0027d\n     * @param interruptible true if park interruptibly when external\n     * @param timed true if use timed wait\n     * @param nanos if timed, timeout value\n     * @return ABNORMAL if interrupted, else status on exit\n     */\n    private int awaitDone(ForkJoinPool pool, boolean ran,\n                          boolean interruptible, boolean timed,\n                          long nanos) {\n        ForkJoinPool p; boolean internal; int s; Thread t;\n        ForkJoinPool.WorkQueue q \u003d null;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) {\n            ForkJoinWorkerThread wt \u003d (ForkJoinWorkerThread)t;\n            p \u003d wt.pool;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (internal \u003d (pool \u003d\u003d p))\n                q \u003d wt.workQueue;\n        }\n        else {\n            internal \u003d false;\n            p \u003d ForkJoinPool.common;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (pool \u003d\u003d p \u0026\u0026 p !\u003d null)\n                q \u003d p.externalQueue();\n        }\n        if (interruptible \u0026\u0026 Thread.interrupted())\n            return ABNORMAL;\n        if ((s \u003d status) \u003c 0)\n            return s;\n        long deadline \u003d 0L;\n        if (timed) {\n            if (nanos \u003c\u003d 0L)\n                return 0;\n            else if ((deadline \u003d nanos + System.nanoTime()) \u003d\u003d 0L)\n                deadline \u003d 1L;\n        }\n        boolean uncompensate \u003d false;\n        if (q !\u003d null \u0026\u0026 p !\u003d null) {  // try helping\n            // help even in timed mode if pool has no parallelism\n            boolean canHelp \u003d !timed || (p.mode \u0026 SMASK) \u003d\u003d 0;\n            if (canHelp) {\n                if ((this instanceof CountedCompleter) \u0026\u0026\n                    (s \u003d p.helpComplete(this, q, internal)) \u003c 0)\n                    return s;\n                if (!ran \u0026\u0026 ((!internal \u0026\u0026 q.externalTryUnpush(this)) ||\n                             q.tryRemove(this, internal)) \u0026\u0026 (s \u003d doExec()) \u003c 0)\n                    return s;\n            }\n            if (internal) {\n                if ((s \u003d p.helpJoin(this, q, canHelp)) \u003c 0)\n                    return s;\n                if (s \u003d\u003d UNCOMPENSATE)\n                    uncompensate \u003d true;\n            }\n        }\n        // block until done or cancelled wait\n        boolean interrupted \u003d false, queued \u003d false;\n        boolean parked \u003d false, fail \u003d false;\n        Aux node \u003d null;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a; long ns;\n            if (fail || (fail \u003d (pool !\u003d null \u0026\u0026 pool.mode \u003c 0)))\n                casStatus(s, s | (DONE | ABNORMAL)); // try to cancel\n            else if (parked \u0026\u0026 Thread.interrupted()) {\n                if (interruptible) {\n                    s \u003d ABNORMAL;\n                    break;\n                }\n                interrupted \u003d true;\n            }\n            else if (queued) {\n                if (deadline !\u003d 0L) {\n                    if ((ns \u003d deadline - System.nanoTime()) \u003c\u003d 0L)\n                        break;\n                    LockSupport.parkNanos(ns);\n                }\n                else\n                    LockSupport.park();\n                parked \u003d true;\n            }\n            else if (node !\u003d null) {\n                if ((a \u003d aux) !\u003d null \u0026\u0026 a.ex !\u003d null)\n                    Thread.onSpinWait();     // exception in progress\n                else if (queued \u003d casAux(node.next \u003d a, node))\n                    LockSupport.setCurrentBlocker(this);\n            }\n            else {\n                try {\n                    node \u003d new Aux(Thread.currentThread(), null);\n                } catch (Throwable ex) {     // cannot create\n                    fail \u003d true;\n                }\n            }\n        }\n        if (pool !\u003d null \u0026\u0026 uncompensate)\n            pool.uncompensate();\n\n        if (queued) {\n            LockSupport.setCurrentBlocker(null);\n            if (s \u003e\u003d 0) { // cancellation similar to AbstractQueuedSynchronizer\n                outer: for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n                    for (Aux trail \u003d null;;) {\n                        Aux next \u003d a.next;\n                        if (a \u003d\u003d node) {\n                            if (trail !\u003d null)\n                                trail.casNext(trail, next);\n                            else if (casAux(a, next))\n                                break outer; // cannot be re-encountered\n                            break;           // restart\n                        } else {\n                            trail \u003d a;\n                            if ((a \u003d next) \u003d\u003d null)\n                                break outer;\n                        }\n                    }\n                }\n            }\n            else {\n                signalWaiters();             // help clean or signal\n                if (interrupted)\n                    Thread.currentThread().interrupt();\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Cancels, ignoring any exceptions thrown by cancel.  Cancel is\n     * spec\u0027ed not to throw any exceptions, but if it does anyway, we\n     * have no recourse, so guard against this case.\n     */\n    static final void cancelIgnoringExceptions(Future\u003c?\u003e t) {\n        if (t !\u003d null) {\n            try {\n                t.cancel(true);\n            } catch (Throwable ignore) {\n            }\n        }\n    }\n\n    /**\n     * Returns a rethrowable exception for this task, if available.\n     * To provide accurate stack traces, if the exception was not\n     * thrown by the current thread, we try to create a new exception\n     * of the same type as the one thrown, but with the recorded\n     * exception as its cause. If there is no such constructor, we\n     * instead try to use a no-arg constructor, followed by initCause,\n     * to the same effect. If none of these apply, or any fail due to\n     * other exceptions, we return the recorded exception, which is\n     * still correct, although it may contain a misleading stack\n     * trace.\n     *\n     * @return the exception, or null if none\n     */\n    private Throwable getThrowableException() {\n        Throwable ex; Aux a;\n        if ((a \u003d aux) \u003d\u003d null)\n            ex \u003d null;\n        else if ((ex \u003d a.ex) !\u003d null \u0026\u0026 a.thread !\u003d Thread.currentThread()) {\n            try {\n                Constructor\u003c?\u003e noArgCtor \u003d null, oneArgCtor \u003d null;\n                for (Constructor\u003c?\u003e c : ex.getClass().getConstructors()) {\n                    Class\u003c?\u003e[] ps \u003d c.getParameterTypes();\n                    if (ps.length \u003d\u003d 0)\n                        noArgCtor \u003d c;\n                    else if (ps.length \u003d\u003d 1 \u0026\u0026 ps[0] \u003d\u003d Throwable.class) {\n                        oneArgCtor \u003d c;\n                        break;\n                    }\n                }\n                if (oneArgCtor !\u003d null)\n                    ex \u003d (Throwable)oneArgCtor.newInstance(ex);\n                else if (noArgCtor !\u003d null) {\n                    Throwable rx \u003d (Throwable)noArgCtor.newInstance();\n                    rx.initCause(ex);\n                    ex \u003d rx;\n                }\n            } catch (Exception ignore) {\n            }\n        }\n        return ex;\n    }\n\n    /**\n     * Returns exception associated with the given status, or null if none.\n     */\n    private Throwable getException(int s) {\n        Throwable ex \u003d null;\n        if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026\n            ((s \u0026 THROWN) \u003d\u003d 0 || (ex \u003d getThrowableException()) \u003d\u003d null))\n            ex \u003d new CancellationException();\n        return ex;\n    }\n\n    /**\n     * Throws exception associated with the given status, or\n     * CancellationException if none recorded.\n     */\n    private void reportException(int s) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(\n            (s \u0026 THROWN) !\u003d 0 ? getThrowableException() : null);\n    }\n\n    /**\n     * Throws exception for (timed or untimed) get, wrapping if\n     * necessary in an ExecutionException.\n     */\n    private void reportExecutionException(int s) {\n        Throwable ex \u003d null;\n        if (s \u003d\u003d ABNORMAL)\n            ex \u003d new InterruptedException();\n        else if (s \u003e\u003d 0)\n            ex \u003d new TimeoutException();\n        else if ((s \u0026 THROWN) !\u003d 0 \u0026\u0026 (ex \u003d getThrowableException()) !\u003d null)\n            ex \u003d new ExecutionException(ex);\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * A version of \"sneaky throw\" to relay exceptions in other\n     * contexts.\n     */\n    static void rethrow(Throwable ex) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * The sneaky part of sneaky throw, relying on generics\n     * limitations to evade compiler complaints about rethrowing\n     * unchecked exceptions. If argument null, throws\n     * CancellationException.\n     */\n    @SuppressWarnings(\"unchecked\") static \u003cT extends Throwable\u003e\n    void uncheckedThrow(Throwable t) throws T {\n        if (t \u003d\u003d null)\n            t \u003d new CancellationException();\n        throw (T)t; // rely on vacuous cast\n    }\n\n    // public methods\n\n    /**\n     * Arranges to asynchronously execute this task in the pool the\n     * current task is running in, if applicable, or using the {@link\n     * ForkJoinPool#commonPool()} if not {@link #inForkJoinPool}.  While\n     * it is not necessarily enforced, it is a usage error to fork a\n     * task more than once unless it has completed and been\n     * reinitialized.  Subsequent modifications to the state of this\n     * task or any data it operates on are not necessarily\n     * consistently observable by any thread other than the one\n     * executing it unless preceded by a call to {@link #join} or\n     * related methods, or a call to {@link #isDone} returning {@code\n     * true}.\n     *\n     * @return {@code this}, to simplify usage\n     */\n    public final ForkJoinTask\u003cV\u003e fork() {\n        Thread t; ForkJoinWorkerThread w;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            (w \u003d (ForkJoinWorkerThread)t).workQueue.push(this, w.pool);\n        else\n            ForkJoinPool.common.externalPush(this);\n        return this;\n    }\n\n    /**\n     * Returns the result of the computation when it\n     * {@linkplain #isDone is done}.\n     * This method differs from {@link #get()} in that abnormal\n     * completion results in {@code RuntimeException} or {@code Error},\n     * not {@code ExecutionException}, and that interrupts of the\n     * calling thread do \u003cem\u003enot\u003c/em\u003e cause the method to abruptly\n     * return by throwing {@code InterruptedException}.\n     *\n     * @return the computed result\n     */\n    public final V join() {\n        int s;\n        if ((s \u003d status) \u003e\u003d 0)\n            s \u003d awaitDone(null, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Commences performing this task, awaits its completion if\n     * necessary, and returns its result, or throws an (unchecked)\n     * {@code RuntimeException} or {@code Error} if the underlying\n     * computation did so.\n     *\n     * @return the computed result\n     */\n    public final V invoke() {\n        int s;\n        if ((s \u003d doExec()) \u003e\u003d 0)\n            s \u003d awaitDone(null, true, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, the\n     * other may be cancelled. However, the execution status of\n     * individual tasks is not guaranteed upon exceptional return. The\n     * status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param t1 the first task\n     * @param t2 the second task\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e t1, ForkJoinTask\u003c?\u003e t2) {\n        int s1, s2;\n        if (t1 \u003d\u003d null || t2 \u003d\u003d null)\n            throw new NullPointerException();\n        t2.fork();\n        if ((s1 \u003d t1.doExec()) \u003e\u003d 0)\n            s1 \u003d t1.awaitDone(null, true, false, false, 0L);\n        if ((s1 \u0026 ABNORMAL) !\u003d 0) {\n            cancelIgnoringExceptions(t2);\n            t1.reportException(s1);\n        }\n        else if (((s2 \u003d t2.awaitDone(null, false, false, false, 0L)) \u0026 ABNORMAL) !\u003d 0)\n            t2.reportException(s2);\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, others\n     * may be cancelled. However, the execution status of individual\n     * tasks is not guaranteed upon exceptional return. The status of\n     * each task may be obtained using {@link #getException()} and\n     * related methods to check if they have been cancelled, completed\n     * normally or exceptionally, or left unprocessed.\n     *\n     * @param tasks the tasks\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e... tasks) {\n        Throwable ex \u003d null;\n        int last \u003d tasks.length - 1;\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d tasks[i]) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d tasks[i]) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(tasks[i]);\n            rethrow(ex);\n        }\n    }\n\n    /**\n     * Forks all tasks in the specified collection, returning when\n     * {@code isDone} holds for each task or an (unchecked) exception\n     * is encountered, in which case the exception is rethrown. If\n     * more than one task encounters an exception, then this method\n     * throws any one of these exceptions. If any task encounters an\n     * exception, others may be cancelled. However, the execution\n     * status of individual tasks is not guaranteed upon exceptional\n     * return. The status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param tasks the collection of tasks\n     * @param \u003cT\u003e the type of the values returned from the tasks\n     * @return the tasks argument, to simplify usage\n     * @throws NullPointerException if tasks or any element are null\n     */\n    public static \u003cT extends ForkJoinTask\u003c?\u003e\u003e Collection\u003cT\u003e invokeAll(Collection\u003cT\u003e tasks) {\n        if (!(tasks instanceof RandomAccess) || !(tasks instanceof List\u003c?\u003e)) {\n            invokeAll(tasks.toArray(new ForkJoinTask\u003c?\u003e[0]));\n            return tasks;\n        }\n        @SuppressWarnings(\"unchecked\")\n        List\u003c? extends ForkJoinTask\u003c?\u003e\u003e ts \u003d\n            (List\u003c? extends ForkJoinTask\u003c?\u003e\u003e) tasks;\n        Throwable ex \u003d null;\n        int last \u003d ts.size() - 1;  // nearly same as array version\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d ts.get(i)) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d ts.get(i)) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(ts.get(i));\n            rethrow(ex);\n        }\n        return tasks;\n    }\n\n    /**\n     * Attempts to cancel execution of this task. This attempt will\n     * fail if the task has already completed or could not be\n     * cancelled for some other reason. If successful, and this task\n     * has not started when {@code cancel} is called, execution of\n     * this task is suppressed. After this method returns\n     * successfully, unless there is an intervening call to {@link\n     * #reinitialize}, subsequent calls to {@link #isCancelled},\n     * {@link #isDone}, and {@code cancel} will return {@code true}\n     * and calls to {@link #join} and related methods will result in\n     * {@code CancellationException}.\n     *\n     * \u003cp\u003eThis method may be overridden in subclasses, but if so, must\n     * still ensure that these properties hold. In particular, the\n     * {@code cancel} method itself must not throw exceptions.\n     *\n     * \u003cp\u003eThis method is designed to be invoked by \u003cem\u003eother\u003c/em\u003e\n     * tasks. To terminate the current task, you can just return or\n     * throw an unchecked exception from its computation method, or\n     * invoke {@link #completeExceptionally(Throwable)}.\n     *\n     * @param mayInterruptIfRunning this value has no effect in the\n     * default implementation because interrupts are not used to\n     * control cancellation.\n     *\n     * @return {@code true} if this task is now cancelled\n     */\n    public boolean cancel(boolean mayInterruptIfRunning) {\n        return (trySetCancelled() \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    public final boolean isDone() {\n        return status \u003c 0;\n    }\n\n    public final boolean isCancelled() {\n        return (status \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    /**\n     * Returns {@code true} if this task threw an exception or was cancelled.\n     *\n     * @return {@code true} if this task threw an exception or was cancelled\n     */\n    public final boolean isCompletedAbnormally() {\n        return (status \u0026 ABNORMAL) !\u003d 0;\n    }\n\n    /**\n     * Returns {@code true} if this task completed without throwing an\n     * exception and was not cancelled.\n     *\n     * @return {@code true} if this task completed without throwing an\n     * exception and was not cancelled\n     */\n    public final boolean isCompletedNormally() {\n        return (status \u0026 (DONE | ABNORMAL)) \u003d\u003d DONE;\n    }\n\n    /**\n     * Returns the exception thrown by the base computation, or a\n     * {@code CancellationException} if cancelled, or {@code null} if\n     * none or if the method has not yet completed.\n     *\n     * @return the exception, or {@code null} if none\n     */\n    public final Throwable getException() {\n        return getException(status);\n    }\n\n    /**\n     * Completes this task abnormally, and if not already aborted or\n     * cancelled, causes it to throw the given exception upon\n     * {@code join} and related operations. This method may be used\n     * to induce exceptions in asynchronous tasks, or to force\n     * completion of tasks that would not otherwise complete.  Its use\n     * in other situations is discouraged.  This method is\n     * overridable, but overridden versions must invoke {@code super}\n     * implementation to maintain guarantees.\n     *\n     * @param ex the exception to throw. If this exception is not a\n     * {@code RuntimeException} or {@code Error}, the actual exception\n     * thrown will be a {@code RuntimeException} with cause {@code ex}.\n     */\n    public void completeExceptionally(Throwable ex) {\n        trySetException((ex instanceof RuntimeException) ||\n                        (ex instanceof Error) ? ex :\n                        new RuntimeException(ex));\n    }\n\n    /**\n     * Completes this task, and if not already aborted or cancelled,\n     * returning the given value as the result of subsequent\n     * invocations of {@code join} and related operations. This method\n     * may be used to provide results for asynchronous tasks, or to\n     * provide alternative handling for tasks that would not otherwise\n     * complete normally. Its use in other situations is\n     * discouraged. This method is overridable, but overridden\n     * versions must invoke {@code super} implementation to maintain\n     * guarantees.\n     *\n     * @param value the result value for this task\n     */\n    public void complete(V value) {\n        try {\n            setRawResult(value);\n        } catch (Throwable rex) {\n            trySetException(rex);\n            return;\n        }\n        setDone();\n    }\n\n    /**\n     * Completes this task normally without setting a value. The most\n     * recent value established by {@link #setRawResult} (or {@code\n     * null} by default) will be returned as the result of subsequent\n     * invocations of {@code join} and related operations.\n     *\n     * @since 1.8\n     */\n    public final void quietlyComplete() {\n        setDone();\n    }\n\n    /**\n     * Waits if necessary for the computation to complete, and then\n     * retrieves its result.\n     *\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     */\n    public final V get() throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(null, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Waits if necessary for at most the given time for the computation\n     * to complete, and then retrieves its result, if available.\n     *\n     * @param timeout the maximum time to wait\n     * @param unit the time unit of the timeout argument\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     * @throws TimeoutException if the wait timed out\n     */\n    public final V get(long timeout, TimeUnit unit)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        long nanos \u003d unit.toNanos(timeout);\n        int s \u003d awaitDone(null, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Joins this task, without returning its result or throwing its\n     * exception. This method may be useful when processing\n     * collections of tasks when some have been cancelled or otherwise\n     * known to have aborted.\n     */\n    public final void quietlyJoin() {\n        if (status \u003e\u003d 0)\n            awaitDone(null, false, false, false, 0L);\n    }\n\n\n    /**\n     * Commences performing this task and awaits its completion if\n     * necessary, without returning its result or throwing its\n     * exception.\n     */\n    public final void quietlyInvoke() {\n        if (doExec() \u003e\u003d 0)\n            awaitDone(null, true, false, false, 0L);\n    }\n\n    // Versions of join/get for pool.invoke* methods that use external,\n    // possibly-non-commonPool submits\n\n    final void awaitPoolInvoke(ForkJoinPool pool) {\n        awaitDone(pool, false, false, false, 0L);\n    }\n    final void awaitPoolInvoke(ForkJoinPool pool, long nanos) {\n        awaitDone(pool, false, true, true, nanos);\n    }\n    final V joinForPoolInvoke(ForkJoinPool pool) {\n        int s \u003d awaitDone(pool, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool)\n        throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(pool, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool, long nanos)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        int s \u003d awaitDone(pool, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Possibly executes tasks until the pool hosting the current task\n     * {@linkplain ForkJoinPool#isQuiescent is quiescent}.  This\n     * method may be of use in designs in which many tasks are forked,\n     * but none are explicitly joined, instead executing them until\n     * all are processed.\n     */\n    public static void helpQuiesce() {\n        Thread t; ForkJoinWorkerThread w; ForkJoinPool p;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread \u0026\u0026\n            (p \u003d (w \u003d (ForkJoinWorkerThread)t).pool) !\u003d null)\n            p.helpQuiescePool(w.workQueue, Long.MAX_VALUE, false);\n        else\n            ForkJoinPool.common.externalHelpQuiescePool(Long.MAX_VALUE, false);\n    }\n\n    /**\n     * Resets the internal bookkeeping state of this task, allowing a\n     * subsequent {@code fork}. This method allows repeated reuse of\n     * this task, but only if reuse occurs when this task has either\n     * never been forked, or has been forked, then completed and all\n     * outstanding joins of this task have also completed. Effects\n     * under any other usage conditions are not guaranteed.\n     * This method may be useful when executing\n     * pre-constructed trees of subtasks in loops.\n     *\n     * \u003cp\u003eUpon completion of this method, {@code isDone()} reports\n     * {@code false}, and {@code getException()} reports {@code\n     * null}. However, the value returned by {@code getRawResult} is\n     * unaffected. To clear this value, you can invoke {@code\n     * setRawResult(null)}.\n     */\n    public void reinitialize() {\n        aux \u003d null;\n        status \u003d 0;\n    }\n\n    /**\n     * Returns the pool hosting the current thread, or {@code null}\n     * if the current thread is executing outside of any ForkJoinPool.\n     *\n     * \u003cp\u003eThis method returns {@code null} if and only if {@link\n     * #inForkJoinPool} returns {@code false}.\n     *\n     * @return the pool, or {@code null} if none\n     */\n    public static ForkJoinPool getPool() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread) t).pool : null);\n    }\n\n    /**\n     * Returns {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation.\n     *\n     * @return {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation,\n     * or {@code false} otherwise\n     */\n    public static boolean inForkJoinPool() {\n        return Thread.currentThread() instanceof ForkJoinWorkerThread;\n    }\n\n    /**\n     * Tries to unschedule this task for execution. This method will\n     * typically (but is not guaranteed to) succeed if this task is\n     * the most recently forked task by the current thread, and has\n     * not commenced executing in another thread.  This method may be\n     * useful when arranging alternative local processing of tasks\n     * that could have been, but were not, stolen.\n     *\n     * @return {@code true} if unforked\n     */\n    public boolean tryUnfork() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        return ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            ? (q \u003d ((ForkJoinWorkerThread)t).workQueue) !\u003d null\n               \u0026\u0026 q.tryUnpush(this)\n            : (q \u003d ForkJoinPool.commonQueue()) !\u003d null\n               \u0026\u0026 q.externalTryUnpush(this);\n    }\n\n    /**\n     * Returns an estimate of the number of tasks that have been\n     * forked by the current worker thread but not yet executed. This\n     * value may be useful for heuristic decisions about whether to\n     * fork other tasks.\n     *\n     * @return the number of tasks\n     */\n    public static int getQueuedTaskCount() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? 0 : q.queueSize();\n    }\n\n    /**\n     * Returns an estimate of how many more locally queued tasks are\n     * held by the current worker thread than there are other worker\n     * threads that might steal them, or zero if this thread is not\n     * operating in a ForkJoinPool. This value may be useful for\n     * heuristic decisions about whether to fork other tasks. In many\n     * usages of ForkJoinTasks, at steady state, each worker should\n     * aim to maintain a small constant surplus (for example, 3) of\n     * tasks, and to process computations locally if this threshold is\n     * exceeded.\n     *\n     * @return the surplus number of tasks, which may be negative\n     */\n    public static int getSurplusQueuedTaskCount() {\n        return ForkJoinPool.getSurplusQueuedTaskCount();\n    }\n\n    // Extension methods\n\n    /**\n     * Returns the result that would be returned by {@link #join}, even\n     * if this task completed abnormally, or {@code null} if this task\n     * is not known to have been completed.  This method is designed\n     * to aid debugging, as well as to support extensions. Its use in\n     * any other context is discouraged.\n     *\n     * @return the result, or {@code null} if not completed\n     */\n    public abstract V getRawResult();\n\n    /**\n     * Forces the given value to be returned as a result.  This method\n     * is designed to support extensions, and should not in general be\n     * called otherwise.\n     *\n     * @param value the value\n     */\n    protected abstract void setRawResult(V value);\n\n    /**\n     * Immediately performs the base action of this task and returns\n     * true if, upon return from this method, this task is guaranteed\n     * to have completed. This method may return false otherwise, to\n     * indicate that this task is not necessarily complete (or is not\n     * known to be complete), for example in asynchronous actions that\n     * require explicit invocations of completion methods. This method\n     * may also throw an (unchecked) exception to indicate abnormal\n     * exit. This method is designed to support extensions, and should\n     * not in general be called otherwise.\n     *\n     * @return {@code true} if this task is known to have completed normally\n     */\n    protected abstract boolean exec();\n\n    /**\n     * Returns, but does not unschedule or execute, a task queued by\n     * the current thread but not yet executed, if one is immediately\n     * available. There is no guarantee that this task will actually\n     * be polled or executed next. Conversely, this method may return\n     * null even if a task exists but cannot be accessed without\n     * contention with other threads.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e peekNextLocalTask() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? null : q.peek();\n    }\n\n    /**\n     * Unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if the\n     * current thread is operating in a ForkJoinPool.  This method is\n     * designed primarily to support extensions, and is unlikely to be\n     * useful otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollNextLocalTask() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).workQueue.nextLocalTask() : null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if one is\n     * available, or if not available, a task that was forked by some\n     * other thread, if available. Availability may be transient, so a\n     * {@code null} result does not necessarily imply quiescence of\n     * the pool this task is operating in.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollTask() {\n        Thread t; ForkJoinWorkerThread w;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                (w \u003d (ForkJoinWorkerThread)t).pool.nextTaskFor(w.workQueue) :\n                null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, a task externally\n     * submitted to the pool, if one is available. Availability may be\n     * transient, so a {@code null} result does not necessarily imply\n     * quiescence of the pool.  This method is designed primarily to\n     * support extensions, and is unlikely to be useful otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     * @since 9\n     */\n    protected static ForkJoinTask\u003c?\u003e pollSubmission() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).pool.pollSubmission() : null);\n    }\n\n    // tag operations\n\n    /**\n     * Returns the tag for this task.\n     *\n     * @return the tag for this task\n     * @since 1.8\n     */\n    public final short getForkJoinTaskTag() {\n        return (short)status;\n    }\n\n    /**\n     * Atomically sets the tag value for this task and returns the old value.\n     *\n     * @param newValue the new tag value\n     * @return the previous value of the tag\n     * @since 1.8\n     */\n    public final short setForkJoinTaskTag(short newValue) {\n        for (int s;;) {\n            if (casStatus(s \u003d status, (s \u0026 ~SMASK) | (newValue \u0026 SMASK)))\n                return (short)s;\n        }\n    }\n\n    /**\n     * Atomically conditionally sets the tag value for this task.\n     * Among other applications, tags can be used as visit markers\n     * in tasks operating on graphs, as in methods that check: {@code\n     * if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))}\n     * before processing, otherwise exiting because the node has\n     * already been visited.\n     *\n     * @param expect the expected tag value\n     * @param update the new tag value\n     * @return {@code true} if successful; i.e., the current value was\n     * equal to {@code expect} and was changed to {@code update}.\n     * @since 1.8\n     */\n    public final boolean compareAndSetForkJoinTaskTag(short expect, short update) {\n        for (int s;;) {\n            if ((short)(s \u003d status) !\u003d expect)\n                return false;\n            if (casStatus(s, (s \u0026 ~SMASK) | (update \u0026 SMASK)))\n                return true;\n        }\n    }\n\n    /**\n     * Adapter for Runnables. This implements RunnableFuture\n     * to be compliant with AbstractExecutorService constraints\n     * when used in ForkJoinPool.\n     */\n    static final class AdaptedRunnable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedRunnable(Runnable runnable, T result) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n            this.result \u003d result; // OK to set this even before completion\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables without results.\n     */\n    static final class AdaptedRunnableAction extends ForkJoinTask\u003cVoid\u003e\n        implements RunnableFuture\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        AdaptedRunnableAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables in which failure forces worker exception.\n     */\n    static final class RunnableExecuteAction extends ForkJoinTask\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        RunnableExecuteAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        int trySetException(Throwable ex) { // if a handler, invoke it\n            int s; Thread t; java.lang.Thread.UncaughtExceptionHandler h;\n            if (isExceptionalStatus(s \u003d trySetThrown(ex)) \u0026\u0026\n                (h \u003d ((t \u003d Thread.currentThread()).\n                      getUncaughtExceptionHandler())) !\u003d null) {\n                try {\n                    h.uncaughtException(t, ex);\n                } catch (Throwable ignore) {\n                }\n            }\n            return s;\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Callables.\n     */\n    static final class AdaptedCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            try {\n                result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            }\n        }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    static final class AdaptedInterruptibleCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        transient volatile Thread runner;\n        T result;\n        AdaptedInterruptibleCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            Thread.interrupted();\n            runner \u003d Thread.currentThread();\n            try {\n                if (!isDone()) // recheck\n                    result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            } finally {\n                runner \u003d null;\n                Thread.interrupted();\n            }\n        }\n        public final void run() { invoke(); }\n        public final boolean cancel(boolean mayInterruptIfRunning) {\n            Thread t;\n            boolean stat \u003d super.cancel(false);\n            if (mayInterruptIfRunning \u0026\u0026 (t \u003d runner) !\u003d null) {\n                try {\n                    t.interrupt();\n                } catch (Throwable ignore) {\n                }\n            }\n            return stat;\n        }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * a null result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @return the task\n     */\n    public static ForkJoinTask\u003c?\u003e adapt(Runnable runnable) {\n        return new AdaptedRunnableAction(runnable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * the given result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @param result the result upon completion\n     * @param \u003cT\u003e the type of the result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Runnable runnable, T result) {\n        return new AdaptedRunnable\u003cT\u003e(runnable, result);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedCallable\u003cT\u003e(callable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.  Additionally,\n     * invocations of {@code cancel} with {@code mayInterruptIfRunning\n     * true} will attempt to interrupt the thread performing the task.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     *\n     * @since 17\n     */\n    // adaptInterruptible deferred to its own independent change\n    // https://bugs.openjdk.java.net/browse/JDK-8246587\n    /* TODO: public */ private static \u003cT\u003e ForkJoinTask\u003cT\u003e adaptInterruptible(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedInterruptibleCallable\u003cT\u003e(callable);\n    }\n\n    // Serialization support\n\n    private static final long serialVersionUID \u003d -7721805057305804111L;\n\n    /**\n     * Saves this task to a stream (that is, serializes it).\n     *\n     * @param s the stream\n     * @throws java.io.IOException if an I/O error occurs\n     * @serialData the current run status and the exception thrown\n     * during execution, or {@code null} if none\n     */\n    private void writeObject(java.io.ObjectOutputStream s)\n        throws java.io.IOException {\n        Aux a;\n        s.defaultWriteObject();\n        s.writeObject((a \u003d aux) \u003d\u003d null ? null : a.ex);\n    }\n\n    /**\n     * Reconstitutes this task from a stream (that is, deserializes it).\n     * @param s the stream\n     * @throws ClassNotFoundException if the class of a serialized object\n     *         could not be found\n     * @throws java.io.IOException if an I/O error occurs\n     */\n    private void readObject(java.io.ObjectInputStream s)\n        throws java.io.IOException, ClassNotFoundException {\n        s.defaultReadObject();\n        Object ex \u003d s.readObject();\n        if (ex !\u003d null)\n            trySetThrown((Throwable)ex);\n    }\n\n    static {\n        try {\n            MethodHandles.Lookup l \u003d MethodHandles.lookup();\n            STATUS \u003d l.findVarHandle(ForkJoinTask.class, \"status\", int.class);\n            AUX \u003d l.findVarHandle(ForkJoinTask.class, \"aux\", Aux.class);\n        } catch (ReflectiveOperationException e) {\n            throw new ExceptionInInitializerError(e);\n        }\n    }\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

dic. 03, 2023 5:01:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Exception in thread "pool-5-thread-6" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 17:02:28 INFO  compiling app (1 scala source)
2023.12.03 17:02:28 INFO  time: compiled app in 0.52s
2023.12.03 17:02:57 INFO  compiling app (1 scala source)
2023.12.03 17:02:57 INFO  time: compiled app in 0.93s
dic. 03, 2023 5:05:06 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4749
2023.12.03 17:06:11 INFO  compiling app (1 scala source)
2023.12.03 17:06:11 INFO  time: compiled app in 0.11s
2023.12.03 17:06:14 INFO  compiling app (1 scala source)
dic. 03, 2023 5:06:14 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4859
2023.12.03 17:06:14 INFO  time: compiled app in 0.8s
2023.12.03 17:06:38 INFO  compiling app (1 scala source)
2023.12.03 17:06:38 INFO  time: compiled app in 0.25s
2023.12.03 17:06:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:06:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:06:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:06:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:06:43 INFO  compiling app (1 scala source)
2023.12.03 17:06:43 INFO  time: compiled app in 0.86s
2023.12.03 17:07:02 INFO  compiling app (1 scala source)
2023.12.03 17:07:02 INFO  time: compiled app in 0.76s
2023.12.03 17:08:11 INFO  compiling app (1 scala source)
2023.12.03 17:08:11 INFO  time: compiled app in 0.77s
dic. 03, 2023 5:08:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5103
2023.12.03 17:14:39 INFO  compiling app (1 scala source)
2023.12.03 17:14:39 INFO  time: compiled app in 0.22s
2023.12.03 17:14:59 INFO  compiling app (1 scala source)
2023.12.03 17:14:59 INFO  time: compiled app in 0.48s
dic. 03, 2023 5:15:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5419
2023.12.03 17:15:11 INFO  compiling app (1 scala source)
dic. 03, 2023 5:15:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5432
2023.12.03 17:15:14 INFO  time: compiled app in 2.24s
2023.12.03 17:15:58 INFO  compiling app (1 scala source)
2023.12.03 17:15:58 INFO  time: compiled app in 0.26s
2023.12.03 17:16:19 INFO  compiling app (1 scala source)
2023.12.03 17:16:19 INFO  time: compiled app in 0.27s
2023.12.03 17:16:24 INFO  compiling app (1 scala source)
2023.12.03 17:16:24 INFO  time: compiled app in 0.18s
dic. 03, 2023 5:16:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5814
2023.12.03 17:17:09 INFO  compiling app (1 scala source)
2023.12.03 17:17:11 INFO  time: compiled app in 1.6s
dic. 03, 2023 5:17:30 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5979
2023.12.03 17:17:33 INFO  compiling app (1 scala source)
2023.12.03 17:17:35 INFO  time: compiled app in 1.96s
dic. 03, 2023 5:21:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6003
2023.12.03 17:21:34 INFO  compiling app (1 scala source)
2023.12.03 17:21:35 INFO  time: compiled app in 1.37s
dic. 03, 2023 5:23:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6098
dic. 03, 2023 5:23:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6111
dic. 03, 2023 5:23:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6137
2023.12.03 17:23:42 INFO  compiling app (1 scala source)
2023.12.03 17:23:43 INFO  time: compiled app in 1.07s
dic. 03, 2023 5:32:21 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6238
Exception in thread "pool-5-thread-7" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 17:46:37 INFO  compiling app (1 scala source)
2023.12.03 17:46:39 INFO  time: compiled app in 2.05s
2023.12.03 17:47:16 INFO  compiling app (1 scala source)
2023.12.03 17:47:17 INFO  time: compiled app in 1.06s
dic. 03, 2023 5:47:35 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6461
2023.12.03 17:47:49 INFO  compiling app (1 scala source)
2023.12.03 17:47:51 INFO  time: compiled app in 1.58s
2023.12.03 17:47:54 INFO  compiling app (1 scala source)
2023.12.03 17:47:56 INFO  time: compiled app in 2.02s
2023.12.03 17:48:06 INFO  compiling app (1 scala source)
2023.12.03 17:48:06 INFO  time: compiled app in 0.89s
dic. 03, 2023 5:48:07 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 17:48:08 INFO  compiling app (1 scala source)
2023.12.03 17:48:08 INFO  time: compiled app in 0.84s
2023.12.03 17:48:17 INFO  compiling app (1 scala source)
2023.12.03 17:48:17 INFO  time: compiled app in 0.98s
2023.12.03 17:50:47 INFO  compiling app (1 scala source)
2023.12.03 17:50:48 INFO  time: compiled app in 1.11s
2023.12.03 17:50:55 INFO  compiling app (1 scala source)
2023.12.03 17:50:55 INFO  time: compiled app in 0.99s
2023.12.03 17:50:59 INFO  compiling app (1 scala source)
2023.12.03 17:51:00 INFO  time: compiled app in 1.16s
2023.12.03 17:51:00 INFO  compiling app (1 scala source)
2023.12.03 17:51:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:51:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:51:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:51:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 17:51:01 WARN  Using indexes to guess the definition of matrizAlAzar
2023.12.03 17:51:02 INFO  time: compiled app in 0.84s
2023.12.03 17:51:06 INFO  compiling app (1 scala source)
2023.12.03 17:51:06 INFO  time: compiled app in 89ms
2023.12.03 17:51:07 INFO  compiling app (1 scala source)
2023.12.03 17:51:08 INFO  time: compiled app in 1.4s
dic. 03, 2023 5:51:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6819
2023.12.03 17:52:11 INFO  compiling app (1 scala source)
2023.12.03 17:52:12 INFO  time: compiled app in 1.15s
2023.12.03 17:52:29 INFO  compiling app (1 scala source)
2023.12.03 17:52:30 INFO  time: compiled app in 1.01s
2023.12.03 17:52:54 INFO  compiling app (1 scala source)
2023.12.03 17:52:56 INFO  time: compiled app in 1.23s
2023.12.03 17:53:03 INFO  compiling app (1 scala source)
2023.12.03 17:53:05 INFO  time: compiled app in 1.47s
2023.12.03 17:53:11 INFO  compiling app (1 scala source)
2023.12.03 17:53:13 INFO  time: compiled app in 1.27s
2023.12.03 17:54:09 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:50: error: illegal character '\u00a0'
    println(multMatrizParV2(m1, m2))
                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 17:54:13 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:50: error: illegal character '\u00a0'
    println(multMatrizParV2(m1, m2))
                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 17:54:13 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:50: error: illegal character '\u00a0'
    println(multMatrizParV2(m1, m2))}
                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 17:54:22 INFO  compiling app (1 scala source)
2023.12.03 17:54:22 INFO  time: compiled app in 98ms
2023.12.03 17:54:25 INFO  compiling app (1 scala source)
2023.12.03 17:54:25 INFO  time: compiled app in 0.21s
2023.12.03 17:54:41 INFO  compiling app (1 scala source)
2023.12.03 17:54:41 INFO  time: compiled app in 0.33s
2023.12.03 17:54:47 INFO  compiling app (1 scala source)
2023.12.03 17:54:47 INFO  time: compiled app in 0.22s
dic. 03, 2023 5:54:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7196
2023.12.03 17:54:56 INFO  compiling app (1 scala source)
2023.12.03 17:54:57 INFO  time: compiled app in 1.25s
2023.12.03 17:56:28 INFO  compiling app (1 scala source)
2023.12.03 17:56:28 INFO  time: compiled app in 0.99s
2023.12.03 17:58:17 INFO  Shutting down server
2023.12.03 17:58:17 INFO  shutting down Metals
2023.12.03 17:58:17 INFO  Shut down connection with build server.
2023.12.03 17:58:17 INFO  Exiting server
2023.12.03 17:59:14 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 17:59:14 INFO  time: initialize in 0.14s
2023.12.03 17:59:19 INFO  Attempting to connect to the build server...
2023.12.03 17:59:19 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 17:59:21 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 17:59:21 INFO  skipping build import with status 'Installed'
2023.12.03 17:59:21 INFO  time: Connected to build server in 2.14s
2023.12.03 17:59:21 INFO  Connected to Build server: Bloop v1.5.11
dic. 03, 2023 5:59:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6
dic. 03, 2023 5:59:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7
dic. 03, 2023 5:59:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8
2023.12.03 17:59:38 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.03 17:59:39 INFO  time: Imported build in 0.13s
2023.12.03 17:59:46 INFO  time: indexed workspace in 7.21s
dic. 03, 2023 6:02:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 57
2023.12.03 18:05:36 INFO  compiling app (1 scala source)
2023.12.03 18:05:40 INFO  time: compiled app in 3.31s
dic. 03, 2023 6:05:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 145
2023.12.03 18:05:57 INFO  compiling app (1 scala source)
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 18:06:00 INFO  time: compiled app in 3.1s
2023.12.03 18:07:58 INFO  compiling app (1 scala source)
2023.12.03 18:08:00 INFO  time: compiled app in 2.1s
2023.12.03 18:08:10 INFO  compiling app (1 scala source)
2023.12.03 18:08:12 INFO  time: compiled app in 1.91s
2023.12.03 18:11:03 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
scala.meta.tokenizers.TokenizeException: <input>:239: error: Non-zero integral values may not have a leading zero.
      val 01 = task(strassenParallel(A11, restaMatriz(B12, B22)))
          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.restOfUncertainToken$1(LegacyScanner.scala:856)
	at scala.meta.internal.tokenizers.LegacyScanner.getNumber(LegacyScanner.scala:872)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchZero$1(LegacyScanner.scala:330)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:332)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 03, 2023 6:11:55 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 530
dic. 03, 2023 6:12:16 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 590
2023.12.03 18:12:21 INFO  compiling app (1 scala source)
2023.12.03 18:12:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:21 INFO  time: compiled app in 0.49s
2023.12.03 18:12:22 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:44 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:45 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:50 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:53 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:12:58 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:05 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:05 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:11 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:13 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:18 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:22 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:24 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:28 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:44 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:47 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:48 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:51 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:54 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:56 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:13:56 INFO  compiling app (1 scala source)
2023.12.03 18:13:58 INFO  time: compiled app in 1.69s
2023.12.03 18:15:54 INFO  compiling app (1 scala source)
2023.12.03 18:15:54 WARN  Using indexes to guess the definition of task
2023.12.03 18:15:56 INFO  time: compiled app in 1.83s
2023.12.03 18:15:57 INFO  compiling app (1 scala source)
2023.12.03 18:15:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:15:59 INFO  time: compiled app in 1.79s
2023.12.03 18:16:00 INFO  compiling app (1 scala source)
2023.12.03 18:16:00 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 03, 2023 6:16:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\n/*\n *\n *\n *\n *\n *\n * Written by Doug Lea with assistance from members of JCP JSR-166\n * Expert Group and released to the public domain, as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\n\npackage java.util.concurrent;\n\nimport java.io.Serializable;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.VarHandle;\nimport java.lang.reflect.Constructor;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.RandomAccess;\nimport java.util.concurrent.locks.LockSupport;\n\n/**\n * Abstract base class for tasks that run within a {@link ForkJoinPool}.\n * A {@code ForkJoinTask} is a thread-like entity that is much\n * lighter weight than a normal thread.  Huge numbers of tasks and\n * subtasks may be hosted by a small number of actual threads in a\n * ForkJoinPool, at the price of some usage limitations.\n *\n * \u003cp\u003eA \"main\" {@code ForkJoinTask} begins execution when it is\n * explicitly submitted to a {@link ForkJoinPool}, or, if not already\n * engaged in a ForkJoin computation, commenced in the {@link\n * ForkJoinPool#commonPool()} via {@link #fork}, {@link #invoke}, or\n * related methods.  Once started, it will usually in turn start other\n * subtasks.  As indicated by the name of this class, many programs\n * using {@code ForkJoinTask} employ only methods {@link #fork} and\n * {@link #join}, or derivatives such as {@link\n * #invokeAll(ForkJoinTask...) invokeAll}.  However, this class also\n * provides a number of other methods that can come into play in\n * advanced usages, as well as extension mechanics that allow support\n * of new forms of fork/join processing.\n *\n * \u003cp\u003eA {@code ForkJoinTask} is a lightweight form of {@link Future}.\n * The efficiency of {@code ForkJoinTask}s stems from a set of\n * restrictions (that are only partially statically enforceable)\n * reflecting their main use as computational tasks calculating pure\n * functions or operating on purely isolated objects.  The primary\n * coordination mechanisms are {@link #fork}, that arranges\n * asynchronous execution, and {@link #join}, that doesn\u0027t proceed\n * until the task\u0027s result has been computed.  Computations should\n * ideally avoid {@code synchronized} methods or blocks, and should\n * minimize other blocking synchronization apart from joining other\n * tasks or using synchronizers such as Phasers that are advertised to\n * cooperate with fork/join scheduling. Subdividable tasks should also\n * not perform blocking I/O, and should ideally access variables that\n * are completely independent of those accessed by other running\n * tasks. These guidelines are loosely enforced by not permitting\n * checked exceptions such as {@code IOExceptions} to be\n * thrown. However, computations may still encounter unchecked\n * exceptions, that are rethrown to callers attempting to join\n * them. These exceptions may additionally include {@link\n * RejectedExecutionException} stemming from internal resource\n * exhaustion, such as failure to allocate internal task\n * queues. Rethrown exceptions behave in the same way as regular\n * exceptions, but, when possible, contain stack traces (as displayed\n * for example using {@code ex.printStackTrace()}) of both the thread\n * that initiated the computation as well as the thread actually\n * encountering the exception; minimally only the latter.\n *\n * \u003cp\u003eIt is possible to define and use ForkJoinTasks that may block,\n * but doing so requires three further considerations: (1) Completion\n * of few if any \u003cem\u003eother\u003c/em\u003e tasks should be dependent on a task\n * that blocks on external synchronization or I/O. Event-style async\n * tasks that are never joined (for example, those subclassing {@link\n * CountedCompleter}) often fall into this category.  (2) To minimize\n * resource impact, tasks should be small; ideally performing only the\n * (possibly) blocking action. (3) Unless the {@link\n * ForkJoinPool.ManagedBlocker} API is used, or the number of possibly\n * blocked tasks is known to be less than the pool\u0027s {@link\n * ForkJoinPool#getParallelism} level, the pool cannot guarantee that\n * enough threads will be available to ensure progress or good\n * performance.\n *\n * \u003cp\u003eThe primary method for awaiting completion and extracting\n * results of a task is {@link #join}, but there are several variants:\n * The {@link Future#get} methods support interruptible and/or timed\n * waits for completion and report results using {@code Future}\n * conventions. Method {@link #invoke} is semantically\n * equivalent to {@code fork(); join()} but always attempts to begin\n * execution in the current thread. The \"\u003cem\u003equiet\u003c/em\u003e\" forms of\n * these methods do not extract results or report exceptions. These\n * may be useful when a set of tasks are being executed, and you need\n * to delay processing of results or exceptions until all complete.\n * Method {@code invokeAll} (available in multiple versions)\n * performs the most common form of parallel invocation: forking a set\n * of tasks and joining them all.\n *\n * \u003cp\u003eIn the most typical usages, a fork-join pair act like a call\n * (fork) and return (join) from a parallel recursive function. As is\n * the case with other forms of recursive calls, returns (joins)\n * should be performed innermost-first. For example, {@code a.fork();\n * b.fork(); b.join(); a.join();} is likely to be substantially more\n * efficient than joining {@code a} before {@code b}.\n *\n * \u003cp\u003eThe execution status of tasks may be queried at several levels\n * of detail: {@link #isDone} is true if a task completed in any way\n * (including the case where a task was cancelled without executing);\n * {@link #isCompletedNormally} is true if a task completed without\n * cancellation or encountering an exception; {@link #isCancelled} is\n * true if the task was cancelled (in which case {@link #getException}\n * returns a {@link CancellationException}); and\n * {@link #isCompletedAbnormally} is true if a task was either\n * cancelled or encountered an exception, in which case {@link\n * #getException} will return either the encountered exception or\n * {@link CancellationException}.\n *\n * \u003cp\u003eThe ForkJoinTask class is not usually directly subclassed.\n * Instead, you subclass one of the abstract classes that support a\n * particular style of fork/join processing, typically {@link\n * RecursiveAction} for most computations that do not return results,\n * {@link RecursiveTask} for those that do, and {@link\n * CountedCompleter} for those in which completed actions trigger\n * other actions.  Normally, a concrete ForkJoinTask subclass declares\n * fields comprising its parameters, established in a constructor, and\n * then defines a {@code compute} method that somehow uses the control\n * methods supplied by this base class.\n *\n * \u003cp\u003eMethod {@link #join} and its variants are appropriate for use\n * only when completion dependencies are acyclic; that is, the\n * parallel computation can be described as a directed acyclic graph\n * (DAG). Otherwise, executions may encounter a form of deadlock as\n * tasks cyclically wait for each other.  However, this framework\n * supports other methods and techniques (for example the use of\n * {@link Phaser}, {@link #helpQuiesce}, and {@link #complete}) that\n * may be of use in constructing custom subclasses for problems that\n * are not statically structured as DAGs. To support such usages, a\n * ForkJoinTask may be atomically \u003cem\u003etagged\u003c/em\u003e with a {@code short}\n * value using {@link #setForkJoinTaskTag} or {@link\n * #compareAndSetForkJoinTaskTag} and checked using {@link\n * #getForkJoinTaskTag}. The ForkJoinTask implementation does not use\n * these {@code protected} methods or tags for any purpose, but they\n * may be of use in the construction of specialized subclasses.  For\n * example, parallel graph traversals can use the supplied methods to\n * avoid revisiting nodes/tasks that have already been processed.\n * (Method names for tagging are bulky in part to encourage definition\n * of methods that reflect their usage patterns.)\n *\n * \u003cp\u003eMost base support methods are {@code final}, to prevent\n * overriding of implementations that are intrinsically tied to the\n * underlying lightweight task scheduling framework.  Developers\n * creating new basic styles of fork/join processing should minimally\n * implement {@code protected} methods {@link #exec}, {@link\n * #setRawResult}, and {@link #getRawResult}, while also introducing\n * an abstract computational method that can be implemented in its\n * subclasses, possibly relying on other {@code protected} methods\n * provided by this class.\n *\n * \u003cp\u003eForkJoinTasks should perform relatively small amounts of\n * computation. Large tasks should be split into smaller subtasks,\n * usually via recursive decomposition. As a very rough rule of thumb,\n * a task should perform more than 100 and less than 10000 basic\n * computational steps, and should avoid indefinite looping. If tasks\n * are too big, then parallelism cannot improve throughput. If too\n * small, then memory and internal task maintenance overhead may\n * overwhelm processing.\n *\n * \u003cp\u003eThis class provides {@code adapt} methods for {@link Runnable}\n * and {@link Callable}, that may be of use when mixing execution of\n * {@code ForkJoinTasks} with other kinds of tasks. When all tasks are\n * of this form, consider using a pool constructed in \u003cem\u003easyncMode\u003c/em\u003e.\n *\n * \u003cp\u003eForkJoinTasks are {@code Serializable}, which enables them to be\n * used in extensions such as remote execution frameworks. It is\n * sensible to serialize tasks only before or after, but not during,\n * execution. Serialization is not relied on during execution itself.\n *\n * @since 1.7\n * @author Doug Lea\n */\npublic abstract class ForkJoinTask\u003cV\u003e implements Future\u003cV\u003e, Serializable {\n\n    /*\n     * See the internal documentation of class ForkJoinPool for a\n     * general implementation overview.  ForkJoinTasks are mainly\n     * responsible for maintaining their \"status\" field amidst relays\n     * to methods in ForkJoinWorkerThread and ForkJoinPool.\n     *\n     * The methods of this class are more-or-less layered into\n     * (1) basic status maintenance\n     * (2) execution and awaiting completion\n     * (3) user-level methods that additionally report results.\n     * This is sometimes hard to see because this file orders exported\n     * methods in a way that flows well in javadocs.\n     *\n     * Revision notes: The use of \"Aux\" field replaces previous\n     * reliance on a table to hold exceptions and synchronized blocks\n     * and monitors to wait for completion.\n     */\n\n    /**\n     * Nodes for threads waiting for completion, or holding a thrown\n     * exception (never both). Waiting threads prepend nodes\n     * Treiber-stack-style.  Signallers detach and unpark\n     * waiters. Cancelled waiters try to unsplice.\n     */\n    static final class Aux {\n        final Thread thread;\n        final Throwable ex;  // null if a waiter\n        Aux next;            // accessed only via memory-acquire chains\n        Aux(Thread thread, Throwable ex) {\n            this.thread \u003d thread;\n            this.ex \u003d ex;\n        }\n        final boolean casNext(Aux c, Aux v) { // used only in cancellation\n            return NEXT.compareAndSet(this, c, v);\n        }\n        private static final VarHandle NEXT;\n        static {\n            try {\n                NEXT \u003d MethodHandles.lookup()\n                    .findVarHandle(Aux.class, \"next\", Aux.class);\n            } catch (ReflectiveOperationException e) {\n                throw new ExceptionInInitializerError(e);\n            }\n        }\n    }\n\n    /*\n     * The status field holds bits packed into a single int to ensure\n     * atomicity.  Status is initially zero, and takes on nonnegative\n     * values until completed, upon which it holds (sign bit) DONE,\n     * possibly with ABNORMAL (cancelled or exceptional) and THROWN\n     * (in which case an exception has been stored). A value of\n     * ABNORMAL without DONE signifies an interrupted wait.  These\n     * control bits occupy only (some of) the upper half (16 bits) of\n     * status field. The lower bits are used for user-defined tags.\n     */\n    private static final int DONE         \u003d 1 \u003c\u003c 31; // must be negative\n    private static final int ABNORMAL     \u003d 1 \u003c\u003c 16;\n    private static final int THROWN       \u003d 1 \u003c\u003c 17;\n    private static final int SMASK        \u003d 0xffff;  // short bits for tags\n    private static final int UNCOMPENSATE \u003d 1 \u003c\u003c 16; // helpJoin return sentinel\n\n    // Fields\n    volatile int status;                // accessed directly by pool and workers\n    private transient volatile Aux aux; // either waiters or thrown Exception\n\n    // Support for atomic operations\n    private static final VarHandle STATUS;\n    private static final VarHandle AUX;\n    private int getAndBitwiseOrStatus(int v) {\n        return (int)STATUS.getAndBitwiseOr(this, v);\n    }\n    private boolean casStatus(int c, int v) {\n        return STATUS.compareAndSet(this, c, v);\n    }\n    private boolean casAux(Aux c, Aux v) {\n        return AUX.compareAndSet(this, c, v);\n    }\n\n    /** Removes and unparks waiters */\n    private void signalWaiters() {\n        for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n            if (casAux(a, null)) {             // detach entire list\n                for (Thread t; a !\u003d null; a \u003d a.next) {\n                    if ((t \u003d a.thread) !\u003d Thread.currentThread() \u0026\u0026 t !\u003d null)\n                        LockSupport.unpark(t); // don\u0027t self-signal\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * Sets DONE status and wakes up threads waiting to join this task.\n     * @return status on exit\n     */\n    private int setDone() {\n        int s \u003d getAndBitwiseOrStatus(DONE) | DONE;\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Sets ABNORMAL DONE status unless already done, and wakes up threads\n     * waiting to join this task.\n     * @return status on exit\n     */\n    private int trySetCancelled() {\n        int s;\n        do {} while ((s \u003d status) \u003e\u003d 0 \u0026\u0026 !casStatus(s, s |\u003d (DONE | ABNORMAL)));\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Records exception and sets ABNORMAL THROWN DONE status unless\n     * already done, and wakes up threads waiting to join this task.\n     * If losing a race with setDone or trySetCancelled, the exception\n     * may be recorded but not reported.\n     *\n     * @return status on exit\n     */\n    final int trySetThrown(Throwable ex) {\n        Aux h \u003d new Aux(Thread.currentThread(), ex), p \u003d null;\n        boolean installed \u003d false;\n        int s;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a;\n            if (!installed \u0026\u0026 ((a \u003d aux) \u003d\u003d null || a.ex \u003d\u003d null) \u0026\u0026\n                (installed \u003d casAux(a, h)))\n                p \u003d a; // list of waiters replaced by h\n            if (installed \u0026\u0026 casStatus(s, s |\u003d (DONE | ABNORMAL | THROWN)))\n                break;\n        }\n        for (; p !\u003d null; p \u003d p.next)\n            LockSupport.unpark(p.thread);\n        return s;\n    }\n\n    /**\n     * Records exception unless already done. Overridable in subclasses.\n     *\n     * @return status on exit\n     */\n    int trySetException(Throwable ex) {\n        return trySetThrown(ex);\n    }\n\n    /**\n     * Constructor for subclasses to call.\n     */\n    public ForkJoinTask() {}\n\n    static boolean isExceptionalStatus(int s) {  // needed by subclasses\n        return (s \u0026 THROWN) !\u003d 0;\n    }\n\n    /**\n     * Unless done, calls exec and records status if completed, but\n     * doesn\u0027t wait for completion otherwise.\n     *\n     * @return status on exit from this method\n     */\n    final int doExec() {\n        int s; boolean completed;\n        if ((s \u003d status) \u003e\u003d 0) {\n            try {\n                completed \u003d exec();\n            } catch (Throwable rex) {\n                s \u003d trySetException(rex);\n                completed \u003d false;\n            }\n            if (completed)\n                s \u003d setDone();\n        }\n        return s;\n    }\n\n    /**\n     * Helps and/or waits for completion from join, get, or invoke;\n     * called from either internal or external threads.\n     *\n     * @param pool if nonnull, known submitted pool, else assumes current pool\n     * @param ran true if task known to have been exec\u0027d\n     * @param interruptible true if park interruptibly when external\n     * @param timed true if use timed wait\n     * @param nanos if timed, timeout value\n     * @return ABNORMAL if interrupted, else status on exit\n     */\n    private int awaitDone(ForkJoinPool pool, boolean ran,\n                          boolean interruptible, boolean timed,\n                          long nanos) {\n        ForkJoinPool p; boolean internal; int s; Thread t;\n        ForkJoinPool.WorkQueue q \u003d null;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) {\n            ForkJoinWorkerThread wt \u003d (ForkJoinWorkerThread)t;\n            p \u003d wt.pool;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (internal \u003d (pool \u003d\u003d p))\n                q \u003d wt.workQueue;\n        }\n        else {\n            internal \u003d false;\n            p \u003d ForkJoinPool.common;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (pool \u003d\u003d p \u0026\u0026 p !\u003d null)\n                q \u003d p.externalQueue();\n        }\n        if (interruptible \u0026\u0026 Thread.interrupted())\n            return ABNORMAL;\n        if ((s \u003d status) \u003c 0)\n            return s;\n        long deadline \u003d 0L;\n        if (timed) {\n            if (nanos \u003c\u003d 0L)\n                return 0;\n            else if ((deadline \u003d nanos + System.nanoTime()) \u003d\u003d 0L)\n                deadline \u003d 1L;\n        }\n        boolean uncompensate \u003d false;\n        if (q !\u003d null \u0026\u0026 p !\u003d null) {  // try helping\n            // help even in timed mode if pool has no parallelism\n            boolean canHelp \u003d !timed || (p.mode \u0026 SMASK) \u003d\u003d 0;\n            if (canHelp) {\n                if ((this instanceof CountedCompleter) \u0026\u0026\n                    (s \u003d p.helpComplete(this, q, internal)) \u003c 0)\n                    return s;\n                if (!ran \u0026\u0026 ((!internal \u0026\u0026 q.externalTryUnpush(this)) ||\n                             q.tryRemove(this, internal)) \u0026\u0026 (s \u003d doExec()) \u003c 0)\n                    return s;\n            }\n            if (internal) {\n                if ((s \u003d p.helpJoin(this, q, canHelp)) \u003c 0)\n                    return s;\n                if (s \u003d\u003d UNCOMPENSATE)\n                    uncompensate \u003d true;\n            }\n        }\n        // block until done or cancelled wait\n        boolean interrupted \u003d false, queued \u003d false;\n        boolean parked \u003d false, fail \u003d false;\n        Aux node \u003d null;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a; long ns;\n            if (fail || (fail \u003d (pool !\u003d null \u0026\u0026 pool.mode \u003c 0)))\n                casStatus(s, s | (DONE | ABNORMAL)); // try to cancel\n            else if (parked \u0026\u0026 Thread.interrupted()) {\n                if (interruptible) {\n                    s \u003d ABNORMAL;\n                    break;\n                }\n                interrupted \u003d true;\n            }\n            else if (queued) {\n                if (deadline !\u003d 0L) {\n                    if ((ns \u003d deadline - System.nanoTime()) \u003c\u003d 0L)\n                        break;\n                    LockSupport.parkNanos(ns);\n                }\n                else\n                    LockSupport.park();\n                parked \u003d true;\n            }\n            else if (node !\u003d null) {\n                if ((a \u003d aux) !\u003d null \u0026\u0026 a.ex !\u003d null)\n                    Thread.onSpinWait();     // exception in progress\n                else if (queued \u003d casAux(node.next \u003d a, node))\n                    LockSupport.setCurrentBlocker(this);\n            }\n            else {\n                try {\n                    node \u003d new Aux(Thread.currentThread(), null);\n                } catch (Throwable ex) {     // cannot create\n                    fail \u003d true;\n                }\n            }\n        }\n        if (pool !\u003d null \u0026\u0026 uncompensate)\n            pool.uncompensate();\n\n        if (queued) {\n            LockSupport.setCurrentBlocker(null);\n            if (s \u003e\u003d 0) { // cancellation similar to AbstractQueuedSynchronizer\n                outer: for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n                    for (Aux trail \u003d null;;) {\n                        Aux next \u003d a.next;\n                        if (a \u003d\u003d node) {\n                            if (trail !\u003d null)\n                                trail.casNext(trail, next);\n                            else if (casAux(a, next))\n                                break outer; // cannot be re-encountered\n                            break;           // restart\n                        } else {\n                            trail \u003d a;\n                            if ((a \u003d next) \u003d\u003d null)\n                                break outer;\n                        }\n                    }\n                }\n            }\n            else {\n                signalWaiters();             // help clean or signal\n                if (interrupted)\n                    Thread.currentThread().interrupt();\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Cancels, ignoring any exceptions thrown by cancel.  Cancel is\n     * spec\u0027ed not to throw any exceptions, but if it does anyway, we\n     * have no recourse, so guard against this case.\n     */\n    static final void cancelIgnoringExceptions(Future\u003c?\u003e t) {\n        if (t !\u003d null) {\n            try {\n                t.cancel(true);\n            } catch (Throwable ignore) {\n            }\n        }\n    }\n\n    /**\n     * Returns a rethrowable exception for this task, if available.\n     * To provide accurate stack traces, if the exception was not\n     * thrown by the current thread, we try to create a new exception\n     * of the same type as the one thrown, but with the recorded\n     * exception as its cause. If there is no such constructor, we\n     * instead try to use a no-arg constructor, followed by initCause,\n     * to the same effect. If none of these apply, or any fail due to\n     * other exceptions, we return the recorded exception, which is\n     * still correct, although it may contain a misleading stack\n     * trace.\n     *\n     * @return the exception, or null if none\n     */\n    private Throwable getThrowableException() {\n        Throwable ex; Aux a;\n        if ((a \u003d aux) \u003d\u003d null)\n            ex \u003d null;\n        else if ((ex \u003d a.ex) !\u003d null \u0026\u0026 a.thread !\u003d Thread.currentThread()) {\n            try {\n                Constructor\u003c?\u003e noArgCtor \u003d null, oneArgCtor \u003d null;\n                for (Constructor\u003c?\u003e c : ex.getClass().getConstructors()) {\n                    Class\u003c?\u003e[] ps \u003d c.getParameterTypes();\n                    if (ps.length \u003d\u003d 0)\n                        noArgCtor \u003d c;\n                    else if (ps.length \u003d\u003d 1 \u0026\u0026 ps[0] \u003d\u003d Throwable.class) {\n                        oneArgCtor \u003d c;\n                        break;\n                    }\n                }\n                if (oneArgCtor !\u003d null)\n                    ex \u003d (Throwable)oneArgCtor.newInstance(ex);\n                else if (noArgCtor !\u003d null) {\n                    Throwable rx \u003d (Throwable)noArgCtor.newInstance();\n                    rx.initCause(ex);\n                    ex \u003d rx;\n                }\n            } catch (Exception ignore) {\n            }\n        }\n        return ex;\n    }\n\n    /**\n     * Returns exception associated with the given status, or null if none.\n     */\n    private Throwable getException(int s) {\n        Throwable ex \u003d null;\n        if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026\n            ((s \u0026 THROWN) \u003d\u003d 0 || (ex \u003d getThrowableException()) \u003d\u003d null))\n            ex \u003d new CancellationException();\n        return ex;\n    }\n\n    /**\n     * Throws exception associated with the given status, or\n     * CancellationException if none recorded.\n     */\n    private void reportException(int s) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(\n            (s \u0026 THROWN) !\u003d 0 ? getThrowableException() : null);\n    }\n\n    /**\n     * Throws exception for (timed or untimed) get, wrapping if\n     * necessary in an ExecutionException.\n     */\n    private void reportExecutionException(int s) {\n        Throwable ex \u003d null;\n        if (s \u003d\u003d ABNORMAL)\n            ex \u003d new InterruptedException();\n        else if (s \u003e\u003d 0)\n            ex \u003d new TimeoutException();\n        else if ((s \u0026 THROWN) !\u003d 0 \u0026\u0026 (ex \u003d getThrowableException()) !\u003d null)\n            ex \u003d new ExecutionException(ex);\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * A version of \"sneaky throw\" to relay exceptions in other\n     * contexts.\n     */\n    static void rethrow(Throwable ex) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * The sneaky part of sneaky throw, relying on generics\n     * limitations to evade compiler complaints about rethrowing\n     * unchecked exceptions. If argument null, throws\n     * CancellationException.\n     */\n    @SuppressWarnings(\"unchecked\") static \u003cT extends Throwable\u003e\n    void uncheckedThrow(Throwable t) throws T {\n        if (t \u003d\u003d null)\n            t \u003d new CancellationException();\n        throw (T)t; // rely on vacuous cast\n    }\n\n    // public methods\n\n    /**\n     * Arranges to asynchronously execute this task in the pool the\n     * current task is running in, if applicable, or using the {@link\n     * ForkJoinPool#commonPool()} if not {@link #inForkJoinPool}.  While\n     * it is not necessarily enforced, it is a usage error to fork a\n     * task more than once unless it has completed and been\n     * reinitialized.  Subsequent modifications to the state of this\n     * task or any data it operates on are not necessarily\n     * consistently observable by any thread other than the one\n     * executing it unless preceded by a call to {@link #join} or\n     * related methods, or a call to {@link #isDone} returning {@code\n     * true}.\n     *\n     * @return {@code this}, to simplify usage\n     */\n    public final ForkJoinTask\u003cV\u003e fork() {\n        Thread t; ForkJoinWorkerThread w;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            (w \u003d (ForkJoinWorkerThread)t).workQueue.push(this, w.pool);\n        else\n            ForkJoinPool.common.externalPush(this);\n        return this;\n    }\n\n    /**\n     * Returns the result of the computation when it\n     * {@linkplain #isDone is done}.\n     * This method differs from {@link #get()} in that abnormal\n     * completion results in {@code RuntimeException} or {@code Error},\n     * not {@code ExecutionException}, and that interrupts of the\n     * calling thread do \u003cem\u003enot\u003c/em\u003e cause the method to abruptly\n     * return by throwing {@code InterruptedException}.\n     *\n     * @return the computed result\n     */\n    public final V join() {\n        int s;\n        if ((s \u003d status) \u003e\u003d 0)\n            s \u003d awaitDone(null, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Commences performing this task, awaits its completion if\n     * necessary, and returns its result, or throws an (unchecked)\n     * {@code RuntimeException} or {@code Error} if the underlying\n     * computation did so.\n     *\n     * @return the computed result\n     */\n    public final V invoke() {\n        int s;\n        if ((s \u003d doExec()) \u003e\u003d 0)\n            s \u003d awaitDone(null, true, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, the\n     * other may be cancelled. However, the execution status of\n     * individual tasks is not guaranteed upon exceptional return. The\n     * status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param t1 the first task\n     * @param t2 the second task\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e t1, ForkJoinTask\u003c?\u003e t2) {\n        int s1, s2;\n        if (t1 \u003d\u003d null || t2 \u003d\u003d null)\n            throw new NullPointerException();\n        t2.fork();\n        if ((s1 \u003d t1.doExec()) \u003e\u003d 0)\n            s1 \u003d t1.awaitDone(null, true, false, false, 0L);\n        if ((s1 \u0026 ABNORMAL) !\u003d 0) {\n            cancelIgnoringExceptions(t2);\n            t1.reportException(s1);\n        }\n        else if (((s2 \u003d t2.awaitDone(null, false, false, false, 0L)) \u0026 ABNORMAL) !\u003d 0)\n            t2.reportException(s2);\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, others\n     * may be cancelled. However, the execution status of individual\n     * tasks is not guaranteed upon exceptional return. The status of\n     * each task may be obtained using {@link #getException()} and\n     * related methods to check if they have been cancelled, completed\n     * normally or exceptionally, or left unprocessed.\n     *\n     * @param tasks the tasks\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e... tasks) {\n        Throwable ex \u003d null;\n        int last \u003d tasks.length - 1;\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d tasks[i]) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d tasks[i]) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(tasks[i]);\n            rethrow(ex);\n        }\n    }\n\n    /**\n     * Forks all tasks in the specified collection, returning when\n     * {@code isDone} holds for each task or an (unchecked) exception\n     * is encountered, in which case the exception is rethrown. If\n     * more than one task encounters an exception, then this method\n     * throws any one of these exceptions. If any task encounters an\n     * exception, others may be cancelled. However, the execution\n     * status of individual tasks is not guaranteed upon exceptional\n     * return. The status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param tasks the collection of tasks\n     * @param \u003cT\u003e the type of the values returned from the tasks\n     * @return the tasks argument, to simplify usage\n     * @throws NullPointerException if tasks or any element are null\n     */\n    public static \u003cT extends ForkJoinTask\u003c?\u003e\u003e Collection\u003cT\u003e invokeAll(Collection\u003cT\u003e tasks) {\n        if (!(tasks instanceof RandomAccess) || !(tasks instanceof List\u003c?\u003e)) {\n            invokeAll(tasks.toArray(new ForkJoinTask\u003c?\u003e[0]));\n            return tasks;\n        }\n        @SuppressWarnings(\"unchecked\")\n        List\u003c? extends ForkJoinTask\u003c?\u003e\u003e ts \u003d\n            (List\u003c? extends ForkJoinTask\u003c?\u003e\u003e) tasks;\n        Throwable ex \u003d null;\n        int last \u003d ts.size() - 1;  // nearly same as array version\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d ts.get(i)) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d ts.get(i)) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(ts.get(i));\n            rethrow(ex);\n        }\n        return tasks;\n    }\n\n    /**\n     * Attempts to cancel execution of this task. This attempt will\n     * fail if the task has already completed or could not be\n     * cancelled for some other reason. If successful, and this task\n     * has not started when {@code cancel} is called, execution of\n     * this task is suppressed. After this method returns\n     * successfully, unless there is an intervening call to {@link\n     * #reinitialize}, subsequent calls to {@link #isCancelled},\n     * {@link #isDone}, and {@code cancel} will return {@code true}\n     * and calls to {@link #join} and related methods will result in\n     * {@code CancellationException}.\n     *\n     * \u003cp\u003eThis method may be overridden in subclasses, but if so, must\n     * still ensure that these properties hold. In particular, the\n     * {@code cancel} method itself must not throw exceptions.\n     *\n     * \u003cp\u003eThis method is designed to be invoked by \u003cem\u003eother\u003c/em\u003e\n     * tasks. To terminate the current task, you can just return or\n     * throw an unchecked exception from its computation method, or\n     * invoke {@link #completeExceptionally(Throwable)}.\n     *\n     * @param mayInterruptIfRunning this value has no effect in the\n     * default implementation because interrupts are not used to\n     * control cancellation.\n     *\n     * @return {@code true} if this task is now cancelled\n     */\n    public boolean cancel(boolean mayInterruptIfRunning) {\n        return (trySetCancelled() \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    public final boolean isDone() {\n        return status \u003c 0;\n    }\n\n    public final boolean isCancelled() {\n        return (status \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    /**\n     * Returns {@code true} if this task threw an exception or was cancelled.\n     *\n     * @return {@code true} if this task threw an exception or was cancelled\n     */\n    public final boolean isCompletedAbnormally() {\n        return (status \u0026 ABNORMAL) !\u003d 0;\n    }\n\n    /**\n     * Returns {@code true} if this task completed without throwing an\n     * exception and was not cancelled.\n     *\n     * @return {@code true} if this task completed without throwing an\n     * exception and was not cancelled\n     */\n    public final boolean isCompletedNormally() {\n        return (status \u0026 (DONE | ABNORMAL)) \u003d\u003d DONE;\n    }\n\n    /**\n     * Returns the exception thrown by the base computation, or a\n     * {@code CancellationException} if cancelled, or {@code null} if\n     * none or if the method has not yet completed.\n     *\n     * @return the exception, or {@code null} if none\n     */\n    public final Throwable getException() {\n        return getException(status);\n    }\n\n    /**\n     * Completes this task abnormally, and if not already aborted or\n     * cancelled, causes it to throw the given exception upon\n     * {@code join} and related operations. This method may be used\n     * to induce exceptions in asynchronous tasks, or to force\n     * completion of tasks that would not otherwise complete.  Its use\n     * in other situations is discouraged.  This method is\n     * overridable, but overridden versions must invoke {@code super}\n     * implementation to maintain guarantees.\n     *\n     * @param ex the exception to throw. If this exception is not a\n     * {@code RuntimeException} or {@code Error}, the actual exception\n     * thrown will be a {@code RuntimeException} with cause {@code ex}.\n     */\n    public void completeExceptionally(Throwable ex) {\n        trySetException((ex instanceof RuntimeException) ||\n                        (ex instanceof Error) ? ex :\n                        new RuntimeException(ex));\n    }\n\n    /**\n     * Completes this task, and if not already aborted or cancelled,\n     * returning the given value as the result of subsequent\n     * invocations of {@code join} and related operations. This method\n     * may be used to provide results for asynchronous tasks, or to\n     * provide alternative handling for tasks that would not otherwise\n     * complete normally. Its use in other situations is\n     * discouraged. This method is overridable, but overridden\n     * versions must invoke {@code super} implementation to maintain\n     * guarantees.\n     *\n     * @param value the result value for this task\n     */\n    public void complete(V value) {\n        try {\n            setRawResult(value);\n        } catch (Throwable rex) {\n            trySetException(rex);\n            return;\n        }\n        setDone();\n    }\n\n    /**\n     * Completes this task normally without setting a value. The most\n     * recent value established by {@link #setRawResult} (or {@code\n     * null} by default) will be returned as the result of subsequent\n     * invocations of {@code join} and related operations.\n     *\n     * @since 1.8\n     */\n    public final void quietlyComplete() {\n        setDone();\n    }\n\n    /**\n     * Waits if necessary for the computation to complete, and then\n     * retrieves its result.\n     *\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     */\n    public final V get() throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(null, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Waits if necessary for at most the given time for the computation\n     * to complete, and then retrieves its result, if available.\n     *\n     * @param timeout the maximum time to wait\n     * @param unit the time unit of the timeout argument\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     * @throws TimeoutException if the wait timed out\n     */\n    public final V get(long timeout, TimeUnit unit)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        long nanos \u003d unit.toNanos(timeout);\n        int s \u003d awaitDone(null, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Joins this task, without returning its result or throwing its\n     * exception. This method may be useful when processing\n     * collections of tasks when some have been cancelled or otherwise\n     * known to have aborted.\n     */\n    public final void quietlyJoin() {\n        if (status \u003e\u003d 0)\n            awaitDone(null, false, false, false, 0L);\n    }\n\n\n    /**\n     * Commences performing this task and awaits its completion if\n     * necessary, without returning its result or throwing its\n     * exception.\n     */\n    public final void quietlyInvoke() {\n        if (doExec() \u003e\u003d 0)\n            awaitDone(null, true, false, false, 0L);\n    }\n\n    // Versions of join/get for pool.invoke* methods that use external,\n    // possibly-non-commonPool submits\n\n    final void awaitPoolInvoke(ForkJoinPool pool) {\n        awaitDone(pool, false, false, false, 0L);\n    }\n    final void awaitPoolInvoke(ForkJoinPool pool, long nanos) {\n        awaitDone(pool, false, true, true, nanos);\n    }\n    final V joinForPoolInvoke(ForkJoinPool pool) {\n        int s \u003d awaitDone(pool, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool)\n        throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(pool, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool, long nanos)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        int s \u003d awaitDone(pool, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Possibly executes tasks until the pool hosting the current task\n     * {@linkplain ForkJoinPool#isQuiescent is quiescent}.  This\n     * method may be of use in designs in which many tasks are forked,\n     * but none are explicitly joined, instead executing them until\n     * all are processed.\n     */\n    public static void helpQuiesce() {\n        Thread t; ForkJoinWorkerThread w; ForkJoinPool p;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread \u0026\u0026\n            (p \u003d (w \u003d (ForkJoinWorkerThread)t).pool) !\u003d null)\n            p.helpQuiescePool(w.workQueue, Long.MAX_VALUE, false);\n        else\n            ForkJoinPool.common.externalHelpQuiescePool(Long.MAX_VALUE, false);\n    }\n\n    /**\n     * Resets the internal bookkeeping state of this task, allowing a\n     * subsequent {@code fork}. This method allows repeated reuse of\n     * this task, but only if reuse occurs when this task has either\n     * never been forked, or has been forked, then completed and all\n     * outstanding joins of this task have also completed. Effects\n     * under any other usage conditions are not guaranteed.\n     * This method may be useful when executing\n     * pre-constructed trees of subtasks in loops.\n     *\n     * \u003cp\u003eUpon completion of this method, {@code isDone()} reports\n     * {@code false}, and {@code getException()} reports {@code\n     * null}. However, the value returned by {@code getRawResult} is\n     * unaffected. To clear this value, you can invoke {@code\n     * setRawResult(null)}.\n     */\n    public void reinitialize() {\n        aux \u003d null;\n        status \u003d 0;\n    }\n\n    /**\n     * Returns the pool hosting the current thread, or {@code null}\n     * if the current thread is executing outside of any ForkJoinPool.\n     *\n     * \u003cp\u003eThis method returns {@code null} if and only if {@link\n     * #inForkJoinPool} returns {@code false}.\n     *\n     * @return the pool, or {@code null} if none\n     */\n    public static ForkJoinPool getPool() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread) t).pool : null);\n    }\n\n    /**\n     * Returns {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation.\n     *\n     * @return {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation,\n     * or {@code false} otherwise\n     */\n    public static boolean inForkJoinPool() {\n        return Thread.currentThread() instanceof ForkJoinWorkerThread;\n    }\n\n    /**\n     * Tries to unschedule this task for execution. This method will\n     * typically (but is not guaranteed to) succeed if this task is\n     * the most recently forked task by the current thread, and has\n     * not commenced executing in another thread.  This method may be\n     * useful when arranging alternative local processing of tasks\n     * that could have been, but were not, stolen.\n     *\n     * @return {@code true} if unforked\n     */\n    public boolean tryUnfork() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        return ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            ? (q \u003d ((ForkJoinWorkerThread)t).workQueue) !\u003d null\n               \u0026\u0026 q.tryUnpush(this)\n            : (q \u003d ForkJoinPool.commonQueue()) !\u003d null\n               \u0026\u0026 q.externalTryUnpush(this);\n    }\n\n    /**\n     * Returns an estimate of the number of tasks that have been\n     * forked by the current worker thread but not yet executed. This\n     * value may be useful for heuristic decisions about whether to\n     * fork other tasks.\n     *\n     * @return the number of tasks\n     */\n    public static int getQueuedTaskCount() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? 0 : q.queueSize();\n    }\n\n    /**\n     * Returns an estimate of how many more locally queued tasks are\n     * held by the current worker thread than there are other worker\n     * threads that might steal them, or zero if this thread is not\n     * operating in a ForkJoinPool. This value may be useful for\n     * heuristic decisions about whether to fork other tasks. In many\n     * usages of ForkJoinTasks, at steady state, each worker should\n     * aim to maintain a small constant surplus (for example, 3) of\n     * tasks, and to process computations locally if this threshold is\n     * exceeded.\n     *\n     * @return the surplus number of tasks, which may be negative\n     */\n    public static int getSurplusQueuedTaskCount() {\n        return ForkJoinPool.getSurplusQueuedTaskCount();\n    }\n\n    // Extension methods\n\n    /**\n     * Returns the result that would be returned by {@link #join}, even\n     * if this task completed abnormally, or {@code null} if this task\n     * is not known to have been completed.  This method is designed\n     * to aid debugging, as well as to support extensions. Its use in\n     * any other context is discouraged.\n     *\n     * @return the result, or {@code null} if not completed\n     */\n    public abstract V getRawResult();\n\n    /**\n     * Forces the given value to be returned as a result.  This method\n     * is designed to support extensions, and should not in general be\n     * called otherwise.\n     *\n     * @param value the value\n     */\n    protected abstract void setRawResult(V value);\n\n    /**\n     * Immediately performs the base action of this task and returns\n     * true if, upon return from this method, this task is guaranteed\n     * to have completed. This method may return false otherwise, to\n     * indicate that this task is not necessarily complete (or is not\n     * known to be complete), for example in asynchronous actions that\n     * require explicit invocations of completion methods. This method\n     * may also throw an (unchecked) exception to indicate abnormal\n     * exit. This method is designed to support extensions, and should\n     * not in general be called otherwise.\n     *\n     * @return {@code true} if this task is known to have completed normally\n     */\n    protected abstract boolean exec();\n\n    /**\n     * Returns, but does not unschedule or execute, a task queued by\n     * the current thread but not yet executed, if one is immediately\n     * available. There is no guarantee that this task will actually\n     * be polled or executed next. Conversely, this method may return\n     * null even if a task exists but cannot be accessed without\n     * contention with other threads.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e peekNextLocalTask() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? null : q.peek();\n    }\n\n    /**\n     * Unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if the\n     * current thread is operating in a ForkJoinPool.  This method is\n     * designed primarily to support extensions, and is unlikely to be\n     * useful otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollNextLocalTask() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).workQueue.nextLocalTask() : null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if one is\n     * available, or if not available, a task that was forked by some\n     * other thread, if available. Availability may be transient, so a\n     * {@code null} result does not necessarily imply quiescence of\n     * the pool this task is operating in.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollTask() {\n        Thread t; ForkJoinWorkerThread w;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                (w \u003d (ForkJoinWorkerThread)t).pool.nextTaskFor(w.workQueue) :\n                null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, a task externally\n     * submitted to the pool, if one is available. Availability may be\n     * transient, so a {@code null} result does not necessarily imply\n     * quiescence of the pool.  This method is designed primarily to\n     * support extensions, and is unlikely to be useful otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     * @since 9\n     */\n    protected static ForkJoinTask\u003c?\u003e pollSubmission() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).pool.pollSubmission() : null);\n    }\n\n    // tag operations\n\n    /**\n     * Returns the tag for this task.\n     *\n     * @return the tag for this task\n     * @since 1.8\n     */\n    public final short getForkJoinTaskTag() {\n        return (short)status;\n    }\n\n    /**\n     * Atomically sets the tag value for this task and returns the old value.\n     *\n     * @param newValue the new tag value\n     * @return the previous value of the tag\n     * @since 1.8\n     */\n    public final short setForkJoinTaskTag(short newValue) {\n        for (int s;;) {\n            if (casStatus(s \u003d status, (s \u0026 ~SMASK) | (newValue \u0026 SMASK)))\n                return (short)s;\n        }\n    }\n\n    /**\n     * Atomically conditionally sets the tag value for this task.\n     * Among other applications, tags can be used as visit markers\n     * in tasks operating on graphs, as in methods that check: {@code\n     * if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))}\n     * before processing, otherwise exiting because the node has\n     * already been visited.\n     *\n     * @param expect the expected tag value\n     * @param update the new tag value\n     * @return {@code true} if successful; i.e., the current value was\n     * equal to {@code expect} and was changed to {@code update}.\n     * @since 1.8\n     */\n    public final boolean compareAndSetForkJoinTaskTag(short expect, short update) {\n        for (int s;;) {\n            if ((short)(s \u003d status) !\u003d expect)\n                return false;\n            if (casStatus(s, (s \u0026 ~SMASK) | (update \u0026 SMASK)))\n                return true;\n        }\n    }\n\n    /**\n     * Adapter for Runnables. This implements RunnableFuture\n     * to be compliant with AbstractExecutorService constraints\n     * when used in ForkJoinPool.\n     */\n    static final class AdaptedRunnable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedRunnable(Runnable runnable, T result) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n            this.result \u003d result; // OK to set this even before completion\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables without results.\n     */\n    static final class AdaptedRunnableAction extends ForkJoinTask\u003cVoid\u003e\n        implements RunnableFuture\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        AdaptedRunnableAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables in which failure forces worker exception.\n     */\n    static final class RunnableExecuteAction extends ForkJoinTask\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        RunnableExecuteAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        int trySetException(Throwable ex) { // if a handler, invoke it\n            int s; Thread t; java.lang.Thread.UncaughtExceptionHandler h;\n            if (isExceptionalStatus(s \u003d trySetThrown(ex)) \u0026\u0026\n                (h \u003d ((t \u003d Thread.currentThread()).\n                      getUncaughtExceptionHandler())) !\u003d null) {\n                try {\n                    h.uncaughtException(t, ex);\n                } catch (Throwable ignore) {\n                }\n            }\n            return s;\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Callables.\n     */\n    static final class AdaptedCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            try {\n                result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            }\n        }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    static final class AdaptedInterruptibleCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        transient volatile Thread runner;\n        T result;\n        AdaptedInterruptibleCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            Thread.interrupted();\n            runner \u003d Thread.currentThread();\n            try {\n                if (!isDone()) // recheck\n                    result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            } finally {\n                runner \u003d null;\n                Thread.interrupted();\n            }\n        }\n        public final void run() { invoke(); }\n        public final boolean cancel(boolean mayInterruptIfRunning) {\n            Thread t;\n            boolean stat \u003d super.cancel(false);\n            if (mayInterruptIfRunning \u0026\u0026 (t \u003d runner) !\u003d null) {\n                try {\n                    t.interrupt();\n                } catch (Throwable ignore) {\n                }\n            }\n            return stat;\n        }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * a null result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @return the task\n     */\n    public static ForkJoinTask\u003c?\u003e adapt(Runnable runnable) {\n        return new AdaptedRunnableAction(runnable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * the given result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @param result the result upon completion\n     * @param \u003cT\u003e the type of the result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Runnable runnable, T result) {\n        return new AdaptedRunnable\u003cT\u003e(runnable, result);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedCallable\u003cT\u003e(callable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.  Additionally,\n     * invocations of {@code cancel} with {@code mayInterruptIfRunning\n     * true} will attempt to interrupt the thread performing the task.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     *\n     * @since 17\n     */\n    // adaptInterruptible deferred to its own independent change\n    // https://bugs.openjdk.java.net/browse/JDK-8246587\n    /* TODO: public */ private static \u003cT\u003e ForkJoinTask\u003cT\u003e adaptInterruptible(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedInterruptibleCallable\u003cT\u003e(callable);\n    }\n\n    // Serialization support\n\n    private static final long serialVersionUID \u003d -7721805057305804111L;\n\n    /**\n     * Saves this task to a stream (that is, serializes it).\n     *\n     * @param s the stream\n     * @throws java.io.IOException if an I/O error occurs\n     * @serialData the current run status and the exception thrown\n     * during execution, or {@code null} if none\n     */\n    private void writeObject(java.io.ObjectOutputStream s)\n        throws java.io.IOException {\n        Aux a;\n        s.defaultWriteObject();\n        s.writeObject((a \u003d aux) \u003d\u003d null ? null : a.ex);\n    }\n\n    /**\n     * Reconstitutes this task from a stream (that is, deserializes it).\n     * @param s the stream\n     * @throws ClassNotFoundException if the class of a serialized object\n     *         could not be found\n     * @throws java.io.IOException if an I/O error occurs\n     */\n    private void readObject(java.io.ObjectInputStream s)\n        throws java.io.IOException, ClassNotFoundException {\n        s.defaultReadObject();\n        Object ex \u003d s.readObject();\n        if (ex !\u003d null)\n            trySetThrown((Throwable)ex);\n    }\n\n    static {\n        try {\n            MethodHandles.Lookup l \u003d MethodHandles.lookup();\n            STATUS \u003d l.findVarHandle(ForkJoinTask.class, \"status\", int.class);\n            AUX \u003d l.findVarHandle(ForkJoinTask.class, \"aux\", Aux.class);\n        } catch (ReflectiveOperationException e) {\n            throw new ExceptionInInitializerError(e);\n        }\n    }\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

dic. 03, 2023 6:16:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2023.12.03 18:16:02 INFO  time: compiled app in 1.97s
2023.12.03 18:21:02 INFO  compiling app (1 scala source)
2023.12.03 18:21:02 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:02 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:02 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:02 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:02 INFO  time: compiled app in 0.2s
2023.12.03 18:21:02 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:10 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:10 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmos.scala
2023.12.03 18:21:11 INFO  compiling app (1 scala source)
2023.12.03 18:21:13 INFO  time: compiled app in 1.62s
2023.12.03 18:21:41 INFO  compiling app (1 scala source)
2023.12.03 18:21:43 INFO  time: compiled app in 1.82s
2023.12.03 18:21:59 INFO  compiling app (1 scala source)
2023.12.03 18:22:00 INFO  time: compiled app in 1.08s
dic. 03, 2023 6:22:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1164
dic. 03, 2023 6:22:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1171
2023.12.03 18:22:19 INFO  compiling app (1 scala source)
2023.12.03 18:22:20 INFO  time: compiled app in 1.01s
2023.12.03 18:23:18 INFO  compiling app (1 scala source)
2023.12.03 18:23:18 INFO  time: compiled app in 0.17s
2023.12.03 18:23:27 INFO  compiling app (1 scala source)
2023.12.03 18:23:27 INFO  time: compiled app in 0.14s
2023.12.03 18:24:31 INFO  compiling app (1 scala source)
2023.12.03 18:24:32 INFO  time: compiled app in 1.05s
2023.12.03 18:24:47 INFO  compiling app (1 scala source)
2023.12.03 18:24:48 INFO  time: compiled app in 1.18s
dic. 03, 2023 6:24:49 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1395
2023.12.03 18:25:02 INFO  compiling app (1 scala source)
2023.12.03 18:25:03 INFO  time: compiled app in 1.05s
2023.12.03 18:25:34 INFO  compiling app (1 scala source)
dic. 03, 2023 6:25:34 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 6:25:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-12-03\r_compiler-error_(app)_18-25-34-516.md
2023.12.03 18:25:34 INFO  time: compiled app in 0.44s
2023.12.03 18:25:36 INFO  compiling app (1 scala source)
2023.12.03 18:25:36 INFO  time: compiled app in 0.33s
2023.12.03 18:25:45 INFO  compiling app (1 scala source)
2023.12.03 18:25:45 INFO  time: compiled app in 0.18s
dic. 03, 2023 6:25:45 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 6:25:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1460
2023.12.03 18:25:58 INFO  compiling app (1 scala source)
dic. 03, 2023 6:25:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1486
2023.12.03 18:26:00 INFO  time: compiled app in 1.53s
2023.12.03 18:26:02 INFO  compiling app (1 scala source)
2023.12.03 18:26:02 INFO  time: compiled app in 51ms
2023.12.03 18:26:30 INFO  compiling app (1 scala source)
2023.12.03 18:26:30 INFO  time: compiled app in 0.12s
2023.12.03 18:26:39 INFO  compiling app (1 scala source)
2023.12.03 18:26:39 INFO  time: compiled app in 0.17s
2023.12.03 18:27:12 INFO  compiling app (1 scala source)
2023.12.03 18:27:12 INFO  time: compiled app in 98ms
2023.12.03 18:27:34 INFO  compiling app (1 scala source)
2023.12.03 18:27:34 INFO  time: compiled app in 0.11s
2023.12.03 18:27:47 INFO  compiling app (1 scala source)
2023.12.03 18:27:47 INFO  time: compiled app in 0.11s
2023.12.03 18:27:53 INFO  compiling app (1 scala source)
2023.12.03 18:27:53 INFO  time: compiled app in 0.11s
2023.12.03 18:27:56 INFO  compiling app (1 scala source)
2023.12.03 18:27:56 INFO  time: compiled app in 0.11s
2023.12.03 18:27:59 INFO  compiling app (1 scala source)
2023.12.03 18:27:59 INFO  time: compiled app in 0.12s
2023.12.03 18:28:09 INFO  compiling app (1 scala source)
2023.12.03 18:28:09 INFO  time: compiled app in 0.12s
2023.12.03 18:28:13 INFO  compiling app (1 scala source)
2023.12.03 18:28:13 INFO  time: compiled app in 0.11s
2023.12.03 18:28:18 INFO  compiling app (1 scala source)
2023.12.03 18:28:18 INFO  time: compiled app in 0.1s
2023.12.03 18:28:24 INFO  compiling app (1 scala source)
2023.12.03 18:28:24 INFO  time: compiled app in 0.12s
2023.12.03 18:28:30 INFO  compiling app (1 scala source)
2023.12.03 18:28:30 INFO  time: compiled app in 0.11s
2023.12.03 18:28:41 INFO  compiling app (1 scala source)
2023.12.03 18:28:41 INFO  time: compiled app in 0.12s
2023.12.03 18:28:43 WARN  Using indexes to guess the definition of subMatriz
2023.12.03 18:28:43 WARN  Using indexes to guess the definition of subMatriz
Exception in thread "pool-5-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Exception in thread "pool-5-thread-6" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 18:28:48 INFO  compiling app (1 scala source)
2023.12.03 18:28:48 INFO  time: compiled app in 0.15s
dic. 03, 2023 6:28:48 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 18:28:51 INFO  compiling app (2 scala sources)
2023.12.03 18:28:51 INFO  time: compiled app in 0.18s
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:8:8: stale bloop error: object implAlgoritmos is not a member of package taller4
note: class implAlgoritmos exists, but it has no companion object.
import taller4.implAlgoritmos.scala
       ^^^^^^^^^^^^^^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:18:20: stale bloop error: not found: value sumMatriz
        val suma = sumMatriz(subMatriz(matriz,(posicion),0,matriz.length),acumuladorSuma.appended(Vector(0)))
                   ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:18:30: stale bloop error: not found: value subMatriz
        val suma = sumMatriz(subMatriz(matriz,(posicion),0,matriz.length),acumuladorSuma.appended(Vector(0)))
                             ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:56: stale bloop error: not found: value prodPunto
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                       ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:66: stale bloop error: not found: value subMatriz
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                 ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:111: stale bloop error: not found: value transpuesta
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                                                              ^^^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:123: stale bloop error: not found: value subMatriz
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                                                                          ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:8:8: stale bloop error: object implAlgoritmos is not a member of package taller4
note: class implAlgoritmos exists, but it has no companion object.
import taller4.implAlgoritmos.scala
       ^^^^^^^^^^^^^^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:18:20: stale bloop error: not found: value sumMatriz
        val suma = sumMatriz(subMatriz(matriz,(posicion),0,matriz.length),acumuladorSuma.appended(Vector(0)))
                   ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:18:30: stale bloop error: not found: value subMatriz
        val suma = sumMatriz(subMatriz(matriz,(posicion),0,matriz.length),acumuladorSuma.appended(Vector(0)))
                             ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:56: stale bloop error: not found: value prodPunto
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                       ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:66: stale bloop error: not found: value subMatriz
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                 ^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:111: stale bloop error: not found: value transpuesta
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                                                              ^^^^^^^^^^^
2023.12.03 18:28:53 INFO  file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala:34:123: stale bloop error: not found: value subMatriz
      val vectorSuma = Vector.tabulate(tamanio)((i) => prodPunto(subMatriz(m1,posicionQuieta,i,m1.length)(0), transpuesta(subMatriz(m2,i,posicionCambiante,m2.length))(0)))
                                                                                                                          ^^^^^^^^^
2023.12.03 18:28:54 INFO  compiling app (2 scala sources)
2023.12.03 18:28:55 INFO  time: compiled app in 1.59s
2023.12.03 18:28:58 ERROR text document: file:///c:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/implAlgoritmosParallel.scala
java.nio.file.NoSuchFileException: c:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.nio.file.Files.newByteChannel(Files.java:380)
	at java.nio.file.Files.newByteChannel(Files.java:432)
	at java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.Semanticdbs$.loadResolvedTextDocument(Semanticdbs.scala:70)
	at scala.meta.internal.mtags.Semanticdbs$.loadTextDocument(Semanticdbs.scala:51)
	at scala.meta.internal.metals.FileSystemSemanticdbs.textDocument(FileSystemSemanticdbs.scala:55)
	at scala.meta.internal.metals.AggregateSemanticdbs.loop$1(AggregateSemanticdbs.scala:30)
	at scala.meta.internal.metals.AggregateSemanticdbs.textDocument(AggregateSemanticdbs.scala:36)
	at scala.meta.internal.metals.CodeLensProvider.findLenses(CodeLensProvider.scala:22)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1625)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1623)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 03, 2023 6:30:38 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 18:30:44 INFO  compiling app (1 scala source)
2023.12.03 18:30:44 INFO  time: compiled app in 0.41s
2023.12.03 18:30:50 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:30:50 INFO  compiling app (1 scala source)
2023.12.03 18:30:50 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:30:50 WARN  Using indexes to guess the definition of implAlgoritmosParallel
2023.12.03 18:30:50 INFO  time: compiled app in 0.42s
2023.12.03 18:31:04 INFO  compiling app (1 scala source)
2023.12.03 18:31:04 INFO  time: compiled app in 0.15s
2023.12.03 18:31:12 INFO  compiling app (1 scala source)
2023.12.03 18:31:12 INFO  time: compiled app in 0.4s
2023.12.03 18:31:32 INFO  compiling app (1 scala source)
2023.12.03 18:31:33 INFO  time: compiled app in 1.02s
2023.12.03 18:31:36 INFO  compiling app (1 scala source)
2023.12.03 18:31:36 INFO  time: compiled app in 0.12s
2023.12.03 18:31:44 INFO  compiling app (1 scala source)
2023.12.03 18:31:44 INFO  time: compiled app in 0.1s
2023.12.03 18:31:50 INFO  compiling app (1 scala source)
2023.12.03 18:31:50 INFO  time: compiled app in 0.11s
2023.12.03 18:31:55 INFO  compiling app (1 scala source)
2023.12.03 18:31:55 INFO  time: compiled app in 0.11s
dic. 03, 2023 6:31:56 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2284
2023.12.03 18:31:58 INFO  compiling app (1 scala source)
2023.12.03 18:31:58 INFO  time: compiled app in 0.11s
2023.12.03 18:32:02 INFO  compiling app (1 scala source)
2023.12.03 18:32:02 INFO  time: compiled app in 0.12s
2023.12.03 18:32:05 INFO  compiling app (1 scala source)
2023.12.03 18:32:05 INFO  time: compiled app in 0.82s
2023.12.03 18:32:17 INFO  compiling app (1 scala source)
2023.12.03 18:32:17 INFO  time: compiled app in 0.96s
2023.12.03 18:32:17 INFO  compiling app (1 scala source)
2023.12.03 18:32:18 INFO  time: compiled app in 89ms
2023.12.03 18:32:20 INFO  compiling app (1 scala source)
2023.12.03 18:32:21 INFO  time: compiled app in 1s
2023.12.03 18:32:21 INFO  compiling app (1 scala source)
2023.12.03 18:32:21 INFO  time: compiled app in 0.12s
2023.12.03 18:32:27 INFO  compiling app (2 scala sources)
2023.12.03 18:32:27 INFO  time: compiled app in 0.32s
2023.12.03 18:32:28 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:30 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:30 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:31 INFO  compiling app (2 scala sources)
2023.12.03 18:32:31 INFO  time: compiled app in 0.31s
2023.12.03 18:32:32 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 6:32:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2454
2023.12.03 18:32:45 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 6:32:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2466
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Using indexes to guess the definition of strassenParallel
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 INFO  compiling app (2 scala sources)
2023.12.03 18:32:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:32:49 WARN  Using indexes to guess the definition of strassenParallel
2023.12.03 18:32:49 INFO  time: compiled app in 0.27s
2023.12.03 18:32:50 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 6:33:03 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2523
2023.12.03 18:33:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:15 INFO  compiling app (2 scala sources)
2023.12.03 18:33:15 INFO  time: compiled app in 0.29s
2023.12.03 18:33:16 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:19 INFO  compiling app (2 scala sources)
2023.12.03 18:33:19 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:19 INFO  time: compiled app in 0.23s
2023.12.03 18:33:19 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:38 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 INFO  compiling app (2 scala sources)
2023.12.03 18:33:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:41 INFO  time: compiled app in 0.16s
2023.12.03 18:33:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:33:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 6:33:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2653
2023.12.03 18:33:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:13 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:13 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:13 INFO  compiling app (2 scala sources)
2023.12.03 18:34:15 INFO  time: compiled app in 1.16s
2023.12.03 18:34:15 INFO  compiling app (1 scala source)
2023.12.03 18:34:15 INFO  time: compiled app in 0.11s
2023.12.03 18:34:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:20 INFO  compiling app (2 scala sources)
2023.12.03 18:34:22 INFO  time: compiled app in 1.88s
2023.12.03 18:34:22 INFO  compiling app (1 scala source)
2023.12.03 18:34:22 INFO  time: compiled app in 0.11s
2023.12.03 18:34:40 INFO  compiling app (2 scala sources)
2023.12.03 18:34:40 INFO  time: compiled app in 0.98s
2023.12.03 18:34:40 INFO  compiling app (1 scala source)
2023.12.03 18:34:41 INFO  time: compiled app in 0.14s
2023.12.03 18:34:44 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:52 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:54 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:34:56 INFO  compiling app (2 scala sources)
2023.12.03 18:34:56 INFO  time: compiled app in 0.19s
2023.12.03 18:34:57 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:16 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:16 INFO  compiling app (2 scala sources)
2023.12.03 18:35:16 INFO  time: compiled app in 0.17s
2023.12.03 18:35:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:21 INFO  compiling app (2 scala sources)
2023.12.03 18:35:21 INFO  time: compiled app in 0.12s
2023.12.03 18:35:22 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 6:35:23 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2875
2023.12.03 18:35:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:25 INFO  compiling app (2 scala sources)
2023.12.03 18:35:25 INFO  time: compiled app in 0.13s
2023.12.03 18:35:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:28 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:28 INFO  compiling app (2 scala sources)
2023.12.03 18:35:28 INFO  time: compiled app in 0.17s
2023.12.03 18:35:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:31 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:31 INFO  compiling app (2 scala sources)
2023.12.03 18:35:32 INFO  time: compiled app in 1.03s
2023.12.03 18:35:32 INFO  compiling app (1 scala source)
2023.12.03 18:35:32 INFO  time: compiled app in 0.13s
2023.12.03 18:35:32 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 18:35:38 INFO  compiling app (2 scala sources)
2023.12.03 18:35:38 INFO  time: compiled app in 0.23s
2023.12.03 18:35:46 INFO  compiling app (2 scala sources)
2023.12.03 18:35:46 INFO  time: compiled app in 77ms
2023.12.03 18:35:47 INFO  compiling app (2 scala sources)
2023.12.03 18:35:47 INFO  time: compiled app in 0.99s
2023.12.03 18:35:47 INFO  compiling app (1 scala source)
2023.12.03 18:35:48 INFO  time: compiled app in 0.22s
2023.12.03 18:35:50 INFO  compiling app (2 scala sources)
2023.12.03 18:35:51 INFO  time: compiled app in 1.4s
2023.12.03 18:35:51 INFO  compiling app (1 scala source)
dic. 03, 2023 6:35:51 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 18:35:51 INFO  time: compiled app in 0.18s
2023.12.03 18:35:51 INFO  compiling app (2 scala sources)
dic. 03, 2023 6:35:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3002
2023.12.03 18:35:51 INFO  time: compiled app in 0.59s
2023.12.03 18:35:51 INFO  compiling app (1 scala source)
2023.12.03 18:35:51 INFO  time: compiled app in 0.16s
2023.12.03 18:35:56 INFO  compiling app (4 scala sources)
2023.12.03 18:35:56 INFO  time: compiled app in 0.2s
2023.12.03 18:36:03 INFO  compiling app (4 scala sources)
2023.12.03 18:36:03 INFO  time: compiled app in 0.19s
2023.12.03 18:36:06 INFO  compiling app (4 scala sources)
2023.12.03 18:36:06 INFO  time: compiled app in 0.18s
2023.12.03 18:36:09 INFO  compiling app (4 scala sources)
2023.12.03 18:36:09 INFO  time: compiled app in 0.24s
2023.12.03 18:36:12 INFO  compiling app (4 scala sources)
2023.12.03 18:36:13 INFO  time: compiled app in 1.68s
2023.12.03 18:37:21 INFO  compiling app (1 scala source)
2023.12.03 18:37:21 INFO  time: compiled app in 0.74s
2023.12.03 18:37:41 INFO  compiling app (1 scala source)
2023.12.03 18:37:41 INFO  time: compiled app in 0.98s
dic. 03, 2023 6:37:42 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
dic. 03, 2023 6:38:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3204
2023.12.03 19:21:02 INFO  compiling app (1 scala source)
2023.12.03 19:21:02 INFO  time: compiled app in 95ms
2023.12.03 19:21:10 INFO  compiling app (1 scala source)
2023.12.03 19:21:10 INFO  time: compiled app in 76ms
2023.12.03 19:21:40 INFO  compiling app (1 scala source)
2023.12.03 19:21:40 INFO  time: compiled app in 75ms
2023.12.03 19:21:50 INFO  compiling app (1 scala source)
2023.12.03 19:21:50 INFO  time: compiled app in 70ms
2023.12.03 19:21:56 INFO  compiling app (1 scala source)
2023.12.03 19:21:58 INFO  time: compiled app in 2.06s
dic. 03, 2023 7:21:58 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 19:23:55 INFO  compiling app (1 scala source)
2023.12.03 19:23:55 INFO  time: compiled app in 0.33s
2023.12.03 19:23:55 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:14 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:16 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:16 INFO  compiling app (1 scala source)
2023.12.03 19:24:16 INFO  time: compiled app in 81ms
2023.12.03 19:24:16 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:27 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:27 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
dic. 03, 2023 7:24:28 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3692
2023.12.03 19:24:30 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
Exception in thread "pool-5-thread-7" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:33 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:36 INFO  compiling app (1 scala source)
2023.12.03 19:24:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 19:24:38 INFO  time: compiled app in 2.08s
2023.12.03 19:29:27 INFO  compiling app (1 scala source)
2023.12.03 19:29:27 INFO  time: compiled app in 0.21s
2023.12.03 19:29:32 INFO  compiling app (1 scala source)
2023.12.03 19:29:32 INFO  time: compiled app in 0.22s
2023.12.03 19:29:39 INFO  compiling app (1 scala source)
2023.12.03 19:29:40 INFO  time: compiled app in 1.31s
2023.12.03 19:29:56 INFO  compiling app (1 scala source)
2023.12.03 19:29:58 INFO  time: compiled app in 1.72s
dic. 03, 2023 7:30:06 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3935
2023.12.03 19:30:28 INFO  compiling app (1 scala source)
2023.12.03 19:30:30 INFO  time: compiled app in 1.5s
2023.12.03 19:30:44 INFO  compiling app (1 scala source)
2023.12.03 19:30:45 INFO  time: compiled app in 1.45s
2023.12.03 19:31:00 INFO  compiling app (1 scala source)
2023.12.03 19:31:00 INFO  time: compiled app in 0.15s
dic. 03, 2023 7:31:02 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4113
2023.12.03 19:31:06 INFO  compiling app (1 scala source)
2023.12.03 19:31:06 INFO  time: compiled app in 0.98s
dic. 03, 2023 7:33:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4160
dic. 03, 2023 7:33:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4190
2023.12.03 19:34:41 INFO  compiling app (1 scala source)
2023.12.03 19:34:49 INFO  time: compiled app in 7.91s
dic. 03, 2023 7:37:29 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 7:41:44 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4283
dic. 03, 2023 7:41:46 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4286
2023.12.03 19:42:10 INFO  compiling app (1 scala source)
2023.12.03 19:42:10 INFO  time: compiled app in 0.29s
2023.12.03 19:42:33 INFO  compiling app (1 scala source)
2023.12.03 19:42:33 INFO  time: compiled app in 0.23s
dic. 03, 2023 7:45:33 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4624
dic. 03, 2023 7:45:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4655
dic. 03, 2023 7:45:54 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4746
2023.12.03 19:46:40 INFO  compiling app (1 scala source)
2023.12.03 19:46:42 INFO  time: compiled app in 1.47s
dic. 03, 2023 7:46:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5046
2023.12.03 19:47:20 INFO  compiling app (1 scala source)
2023.12.03 19:47:20 INFO  time: compiled app in 0.23s
2023.12.03 19:47:26 INFO  compiling app (1 scala source)
2023.12.03 19:47:29 INFO  time: compiled app in 2.37s
2023.12.03 19:47:41 INFO  compiling app (1 scala source)
2023.12.03 19:47:41 INFO  time: compiled app in 0.95s
2023.12.03 19:49:13 INFO  compiling app (1 scala source)
2023.12.03 19:49:13 INFO  time: compiled app in 0.86s
2023.12.03 19:50:02 INFO  compiling app (1 scala source)
2023.12.03 19:50:02 INFO  time: compiled app in 0.26s
2023.12.03 19:50:54 INFO  compiling app (1 scala source)
2023.12.03 19:50:54 INFO  time: compiled app in 0.97s
2023.12.03 19:52:07 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java

Uri: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:628)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:248)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:674)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

dic. 03, 2023 7:52:07 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\n/*\n *\n *\n *\n *\n *\n * Written by Doug Lea with assistance from members of JCP JSR-166\n * Expert Group and released to the public domain, as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\n\npackage java.util.concurrent;\n\nimport java.io.Serializable;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.VarHandle;\nimport java.lang.reflect.Constructor;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.RandomAccess;\nimport java.util.concurrent.locks.LockSupport;\n\n/**\n * Abstract base class for tasks that run within a {@link ForkJoinPool}.\n * A {@code ForkJoinTask} is a thread-like entity that is much\n * lighter weight than a normal thread.  Huge numbers of tasks and\n * subtasks may be hosted by a small number of actual threads in a\n * ForkJoinPool, at the price of some usage limitations.\n *\n * \u003cp\u003eA \"main\" {@code ForkJoinTask} begins execution when it is\n * explicitly submitted to a {@link ForkJoinPool}, or, if not already\n * engaged in a ForkJoin computation, commenced in the {@link\n * ForkJoinPool#commonPool()} via {@link #fork}, {@link #invoke}, or\n * related methods.  Once started, it will usually in turn start other\n * subtasks.  As indicated by the name of this class, many programs\n * using {@code ForkJoinTask} employ only methods {@link #fork} and\n * {@link #join}, or derivatives such as {@link\n * #invokeAll(ForkJoinTask...) invokeAll}.  However, this class also\n * provides a number of other methods that can come into play in\n * advanced usages, as well as extension mechanics that allow support\n * of new forms of fork/join processing.\n *\n * \u003cp\u003eA {@code ForkJoinTask} is a lightweight form of {@link Future}.\n * The efficiency of {@code ForkJoinTask}s stems from a set of\n * restrictions (that are only partially statically enforceable)\n * reflecting their main use as computational tasks calculating pure\n * functions or operating on purely isolated objects.  The primary\n * coordination mechanisms are {@link #fork}, that arranges\n * asynchronous execution, and {@link #join}, that doesn\u0027t proceed\n * until the task\u0027s result has been computed.  Computations should\n * ideally avoid {@code synchronized} methods or blocks, and should\n * minimize other blocking synchronization apart from joining other\n * tasks or using synchronizers such as Phasers that are advertised to\n * cooperate with fork/join scheduling. Subdividable tasks should also\n * not perform blocking I/O, and should ideally access variables that\n * are completely independent of those accessed by other running\n * tasks. These guidelines are loosely enforced by not permitting\n * checked exceptions such as {@code IOExceptions} to be\n * thrown. However, computations may still encounter unchecked\n * exceptions, that are rethrown to callers attempting to join\n * them. These exceptions may additionally include {@link\n * RejectedExecutionException} stemming from internal resource\n * exhaustion, such as failure to allocate internal task\n * queues. Rethrown exceptions behave in the same way as regular\n * exceptions, but, when possible, contain stack traces (as displayed\n * for example using {@code ex.printStackTrace()}) of both the thread\n * that initiated the computation as well as the thread actually\n * encountering the exception; minimally only the latter.\n *\n * \u003cp\u003eIt is possible to define and use ForkJoinTasks that may block,\n * but doing so requires three further considerations: (1) Completion\n * of few if any \u003cem\u003eother\u003c/em\u003e tasks should be dependent on a task\n * that blocks on external synchronization or I/O. Event-style async\n * tasks that are never joined (for example, those subclassing {@link\n * CountedCompleter}) often fall into this category.  (2) To minimize\n * resource impact, tasks should be small; ideally performing only the\n * (possibly) blocking action. (3) Unless the {@link\n * ForkJoinPool.ManagedBlocker} API is used, or the number of possibly\n * blocked tasks is known to be less than the pool\u0027s {@link\n * ForkJoinPool#getParallelism} level, the pool cannot guarantee that\n * enough threads will be available to ensure progress or good\n * performance.\n *\n * \u003cp\u003eThe primary method for awaiting completion and extracting\n * results of a task is {@link #join}, but there are several variants:\n * The {@link Future#get} methods support interruptible and/or timed\n * waits for completion and report results using {@code Future}\n * conventions. Method {@link #invoke} is semantically\n * equivalent to {@code fork(); join()} but always attempts to begin\n * execution in the current thread. The \"\u003cem\u003equiet\u003c/em\u003e\" forms of\n * these methods do not extract results or report exceptions. These\n * may be useful when a set of tasks are being executed, and you need\n * to delay processing of results or exceptions until all complete.\n * Method {@code invokeAll} (available in multiple versions)\n * performs the most common form of parallel invocation: forking a set\n * of tasks and joining them all.\n *\n * \u003cp\u003eIn the most typical usages, a fork-join pair act like a call\n * (fork) and return (join) from a parallel recursive function. As is\n * the case with other forms of recursive calls, returns (joins)\n * should be performed innermost-first. For example, {@code a.fork();\n * b.fork(); b.join(); a.join();} is likely to be substantially more\n * efficient than joining {@code a} before {@code b}.\n *\n * \u003cp\u003eThe execution status of tasks may be queried at several levels\n * of detail: {@link #isDone} is true if a task completed in any way\n * (including the case where a task was cancelled without executing);\n * {@link #isCompletedNormally} is true if a task completed without\n * cancellation or encountering an exception; {@link #isCancelled} is\n * true if the task was cancelled (in which case {@link #getException}\n * returns a {@link CancellationException}); and\n * {@link #isCompletedAbnormally} is true if a task was either\n * cancelled or encountered an exception, in which case {@link\n * #getException} will return either the encountered exception or\n * {@link CancellationException}.\n *\n * \u003cp\u003eThe ForkJoinTask class is not usually directly subclassed.\n * Instead, you subclass one of the abstract classes that support a\n * particular style of fork/join processing, typically {@link\n * RecursiveAction} for most computations that do not return results,\n * {@link RecursiveTask} for those that do, and {@link\n * CountedCompleter} for those in which completed actions trigger\n * other actions.  Normally, a concrete ForkJoinTask subclass declares\n * fields comprising its parameters, established in a constructor, and\n * then defines a {@code compute} method that somehow uses the control\n * methods supplied by this base class.\n *\n * \u003cp\u003eMethod {@link #join} and its variants are appropriate for use\n * only when completion dependencies are acyclic; that is, the\n * parallel computation can be described as a directed acyclic graph\n * (DAG). Otherwise, executions may encounter a form of deadlock as\n * tasks cyclically wait for each other.  However, this framework\n * supports other methods and techniques (for example the use of\n * {@link Phaser}, {@link #helpQuiesce}, and {@link #complete}) that\n * may be of use in constructing custom subclasses for problems that\n * are not statically structured as DAGs. To support such usages, a\n * ForkJoinTask may be atomically \u003cem\u003etagged\u003c/em\u003e with a {@code short}\n * value using {@link #setForkJoinTaskTag} or {@link\n * #compareAndSetForkJoinTaskTag} and checked using {@link\n * #getForkJoinTaskTag}. The ForkJoinTask implementation does not use\n * these {@code protected} methods or tags for any purpose, but they\n * may be of use in the construction of specialized subclasses.  For\n * example, parallel graph traversals can use the supplied methods to\n * avoid revisiting nodes/tasks that have already been processed.\n * (Method names for tagging are bulky in part to encourage definition\n * of methods that reflect their usage patterns.)\n *\n * \u003cp\u003eMost base support methods are {@code final}, to prevent\n * overriding of implementations that are intrinsically tied to the\n * underlying lightweight task scheduling framework.  Developers\n * creating new basic styles of fork/join processing should minimally\n * implement {@code protected} methods {@link #exec}, {@link\n * #setRawResult}, and {@link #getRawResult}, while also introducing\n * an abstract computational method that can be implemented in its\n * subclasses, possibly relying on other {@code protected} methods\n * provided by this class.\n *\n * \u003cp\u003eForkJoinTasks should perform relatively small amounts of\n * computation. Large tasks should be split into smaller subtasks,\n * usually via recursive decomposition. As a very rough rule of thumb,\n * a task should perform more than 100 and less than 10000 basic\n * computational steps, and should avoid indefinite looping. If tasks\n * are too big, then parallelism cannot improve throughput. If too\n * small, then memory and internal task maintenance overhead may\n * overwhelm processing.\n *\n * \u003cp\u003eThis class provides {@code adapt} methods for {@link Runnable}\n * and {@link Callable}, that may be of use when mixing execution of\n * {@code ForkJoinTasks} with other kinds of tasks. When all tasks are\n * of this form, consider using a pool constructed in \u003cem\u003easyncMode\u003c/em\u003e.\n *\n * \u003cp\u003eForkJoinTasks are {@code Serializable}, which enables them to be\n * used in extensions such as remote execution frameworks. It is\n * sensible to serialize tasks only before or after, but not during,\n * execution. Serialization is not relied on during execution itself.\n *\n * @since 1.7\n * @author Doug Lea\n */\npublic abstract class ForkJoinTask\u003cV\u003e implements Future\u003cV\u003e, Serializable {\n\n    /*\n     * See the internal documentation of class ForkJoinPool for a\n     * general implementation overview.  ForkJoinTasks are mainly\n     * responsible for maintaining their \"status\" field amidst relays\n     * to methods in ForkJoinWorkerThread and ForkJoinPool.\n     *\n     * The methods of this class are more-or-less layered into\n     * (1) basic status maintenance\n     * (2) execution and awaiting completion\n     * (3) user-level methods that additionally report results.\n     * This is sometimes hard to see because this file orders exported\n     * methods in a way that flows well in javadocs.\n     *\n     * Revision notes: The use of \"Aux\" field replaces previous\n     * reliance on a table to hold exceptions and synchronized blocks\n     * and monitors to wait for completion.\n     */\n\n    /**\n     * Nodes for threads waiting for completion, or holding a thrown\n     * exception (never both). Waiting threads prepend nodes\n     * Treiber-stack-style.  Signallers detach and unpark\n     * waiters. Cancelled waiters try to unsplice.\n     */\n    static final class Aux {\n        final Thread thread;\n        final Throwable ex;  // null if a waiter\n        Aux next;            // accessed only via memory-acquire chains\n        Aux(Thread thread, Throwable ex) {\n            this.thread \u003d thread;\n            this.ex \u003d ex;\n        }\n        final boolean casNext(Aux c, Aux v) { // used only in cancellation\n            return NEXT.compareAndSet(this, c, v);\n        }\n        private static final VarHandle NEXT;\n        static {\n            try {\n                NEXT \u003d MethodHandles.lookup()\n                    .findVarHandle(Aux.class, \"next\", Aux.class);\n            } catch (ReflectiveOperationException e) {\n                throw new ExceptionInInitializerError(e);\n            }\n        }\n    }\n\n    /*\n     * The status field holds bits packed into a single int to ensure\n     * atomicity.  Status is initially zero, and takes on nonnegative\n     * values until completed, upon which it holds (sign bit) DONE,\n     * possibly with ABNORMAL (cancelled or exceptional) and THROWN\n     * (in which case an exception has been stored). A value of\n     * ABNORMAL without DONE signifies an interrupted wait.  These\n     * control bits occupy only (some of) the upper half (16 bits) of\n     * status field. The lower bits are used for user-defined tags.\n     */\n    private static final int DONE         \u003d 1 \u003c\u003c 31; // must be negative\n    private static final int ABNORMAL     \u003d 1 \u003c\u003c 16;\n    private static final int THROWN       \u003d 1 \u003c\u003c 17;\n    private static final int SMASK        \u003d 0xffff;  // short bits for tags\n    private static final int UNCOMPENSATE \u003d 1 \u003c\u003c 16; // helpJoin return sentinel\n\n    // Fields\n    volatile int status;                // accessed directly by pool and workers\n    private transient volatile Aux aux; // either waiters or thrown Exception\n\n    // Support for atomic operations\n    private static final VarHandle STATUS;\n    private static final VarHandle AUX;\n    private int getAndBitwiseOrStatus(int v) {\n        return (int)STATUS.getAndBitwiseOr(this, v);\n    }\n    private boolean casStatus(int c, int v) {\n        return STATUS.compareAndSet(this, c, v);\n    }\n    private boolean casAux(Aux c, Aux v) {\n        return AUX.compareAndSet(this, c, v);\n    }\n\n    /** Removes and unparks waiters */\n    private void signalWaiters() {\n        for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n            if (casAux(a, null)) {             // detach entire list\n                for (Thread t; a !\u003d null; a \u003d a.next) {\n                    if ((t \u003d a.thread) !\u003d Thread.currentThread() \u0026\u0026 t !\u003d null)\n                        LockSupport.unpark(t); // don\u0027t self-signal\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * Sets DONE status and wakes up threads waiting to join this task.\n     * @return status on exit\n     */\n    private int setDone() {\n        int s \u003d getAndBitwiseOrStatus(DONE) | DONE;\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Sets ABNORMAL DONE status unless already done, and wakes up threads\n     * waiting to join this task.\n     * @return status on exit\n     */\n    private int trySetCancelled() {\n        int s;\n        do {} while ((s \u003d status) \u003e\u003d 0 \u0026\u0026 !casStatus(s, s |\u003d (DONE | ABNORMAL)));\n        signalWaiters();\n        return s;\n    }\n\n    /**\n     * Records exception and sets ABNORMAL THROWN DONE status unless\n     * already done, and wakes up threads waiting to join this task.\n     * If losing a race with setDone or trySetCancelled, the exception\n     * may be recorded but not reported.\n     *\n     * @return status on exit\n     */\n    final int trySetThrown(Throwable ex) {\n        Aux h \u003d new Aux(Thread.currentThread(), ex), p \u003d null;\n        boolean installed \u003d false;\n        int s;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a;\n            if (!installed \u0026\u0026 ((a \u003d aux) \u003d\u003d null || a.ex \u003d\u003d null) \u0026\u0026\n                (installed \u003d casAux(a, h)))\n                p \u003d a; // list of waiters replaced by h\n            if (installed \u0026\u0026 casStatus(s, s |\u003d (DONE | ABNORMAL | THROWN)))\n                break;\n        }\n        for (; p !\u003d null; p \u003d p.next)\n            LockSupport.unpark(p.thread);\n        return s;\n    }\n\n    /**\n     * Records exception unless already done. Overridable in subclasses.\n     *\n     * @return status on exit\n     */\n    int trySetException(Throwable ex) {\n        return trySetThrown(ex);\n    }\n\n    /**\n     * Constructor for subclasses to call.\n     */\n    public ForkJoinTask() {}\n\n    static boolean isExceptionalStatus(int s) {  // needed by subclasses\n        return (s \u0026 THROWN) !\u003d 0;\n    }\n\n    /**\n     * Unless done, calls exec and records status if completed, but\n     * doesn\u0027t wait for completion otherwise.\n     *\n     * @return status on exit from this method\n     */\n    final int doExec() {\n        int s; boolean completed;\n        if ((s \u003d status) \u003e\u003d 0) {\n            try {\n                completed \u003d exec();\n            } catch (Throwable rex) {\n                s \u003d trySetException(rex);\n                completed \u003d false;\n            }\n            if (completed)\n                s \u003d setDone();\n        }\n        return s;\n    }\n\n    /**\n     * Helps and/or waits for completion from join, get, or invoke;\n     * called from either internal or external threads.\n     *\n     * @param pool if nonnull, known submitted pool, else assumes current pool\n     * @param ran true if task known to have been exec\u0027d\n     * @param interruptible true if park interruptibly when external\n     * @param timed true if use timed wait\n     * @param nanos if timed, timeout value\n     * @return ABNORMAL if interrupted, else status on exit\n     */\n    private int awaitDone(ForkJoinPool pool, boolean ran,\n                          boolean interruptible, boolean timed,\n                          long nanos) {\n        ForkJoinPool p; boolean internal; int s; Thread t;\n        ForkJoinPool.WorkQueue q \u003d null;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) {\n            ForkJoinWorkerThread wt \u003d (ForkJoinWorkerThread)t;\n            p \u003d wt.pool;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (internal \u003d (pool \u003d\u003d p))\n                q \u003d wt.workQueue;\n        }\n        else {\n            internal \u003d false;\n            p \u003d ForkJoinPool.common;\n            if (pool \u003d\u003d null)\n                pool \u003d p;\n            if (pool \u003d\u003d p \u0026\u0026 p !\u003d null)\n                q \u003d p.externalQueue();\n        }\n        if (interruptible \u0026\u0026 Thread.interrupted())\n            return ABNORMAL;\n        if ((s \u003d status) \u003c 0)\n            return s;\n        long deadline \u003d 0L;\n        if (timed) {\n            if (nanos \u003c\u003d 0L)\n                return 0;\n            else if ((deadline \u003d nanos + System.nanoTime()) \u003d\u003d 0L)\n                deadline \u003d 1L;\n        }\n        boolean uncompensate \u003d false;\n        if (q !\u003d null \u0026\u0026 p !\u003d null) {  // try helping\n            // help even in timed mode if pool has no parallelism\n            boolean canHelp \u003d !timed || (p.mode \u0026 SMASK) \u003d\u003d 0;\n            if (canHelp) {\n                if ((this instanceof CountedCompleter) \u0026\u0026\n                    (s \u003d p.helpComplete(this, q, internal)) \u003c 0)\n                    return s;\n                if (!ran \u0026\u0026 ((!internal \u0026\u0026 q.externalTryUnpush(this)) ||\n                             q.tryRemove(this, internal)) \u0026\u0026 (s \u003d doExec()) \u003c 0)\n                    return s;\n            }\n            if (internal) {\n                if ((s \u003d p.helpJoin(this, q, canHelp)) \u003c 0)\n                    return s;\n                if (s \u003d\u003d UNCOMPENSATE)\n                    uncompensate \u003d true;\n            }\n        }\n        // block until done or cancelled wait\n        boolean interrupted \u003d false, queued \u003d false;\n        boolean parked \u003d false, fail \u003d false;\n        Aux node \u003d null;\n        while ((s \u003d status) \u003e\u003d 0) {\n            Aux a; long ns;\n            if (fail || (fail \u003d (pool !\u003d null \u0026\u0026 pool.mode \u003c 0)))\n                casStatus(s, s | (DONE | ABNORMAL)); // try to cancel\n            else if (parked \u0026\u0026 Thread.interrupted()) {\n                if (interruptible) {\n                    s \u003d ABNORMAL;\n                    break;\n                }\n                interrupted \u003d true;\n            }\n            else if (queued) {\n                if (deadline !\u003d 0L) {\n                    if ((ns \u003d deadline - System.nanoTime()) \u003c\u003d 0L)\n                        break;\n                    LockSupport.parkNanos(ns);\n                }\n                else\n                    LockSupport.park();\n                parked \u003d true;\n            }\n            else if (node !\u003d null) {\n                if ((a \u003d aux) !\u003d null \u0026\u0026 a.ex !\u003d null)\n                    Thread.onSpinWait();     // exception in progress\n                else if (queued \u003d casAux(node.next \u003d a, node))\n                    LockSupport.setCurrentBlocker(this);\n            }\n            else {\n                try {\n                    node \u003d new Aux(Thread.currentThread(), null);\n                } catch (Throwable ex) {     // cannot create\n                    fail \u003d true;\n                }\n            }\n        }\n        if (pool !\u003d null \u0026\u0026 uncompensate)\n            pool.uncompensate();\n\n        if (queued) {\n            LockSupport.setCurrentBlocker(null);\n            if (s \u003e\u003d 0) { // cancellation similar to AbstractQueuedSynchronizer\n                outer: for (Aux a; (a \u003d aux) !\u003d null \u0026\u0026 a.ex \u003d\u003d null; ) {\n                    for (Aux trail \u003d null;;) {\n                        Aux next \u003d a.next;\n                        if (a \u003d\u003d node) {\n                            if (trail !\u003d null)\n                                trail.casNext(trail, next);\n                            else if (casAux(a, next))\n                                break outer; // cannot be re-encountered\n                            break;           // restart\n                        } else {\n                            trail \u003d a;\n                            if ((a \u003d next) \u003d\u003d null)\n                                break outer;\n                        }\n                    }\n                }\n            }\n            else {\n                signalWaiters();             // help clean or signal\n                if (interrupted)\n                    Thread.currentThread().interrupt();\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Cancels, ignoring any exceptions thrown by cancel.  Cancel is\n     * spec\u0027ed not to throw any exceptions, but if it does anyway, we\n     * have no recourse, so guard against this case.\n     */\n    static final void cancelIgnoringExceptions(Future\u003c?\u003e t) {\n        if (t !\u003d null) {\n            try {\n                t.cancel(true);\n            } catch (Throwable ignore) {\n            }\n        }\n    }\n\n    /**\n     * Returns a rethrowable exception for this task, if available.\n     * To provide accurate stack traces, if the exception was not\n     * thrown by the current thread, we try to create a new exception\n     * of the same type as the one thrown, but with the recorded\n     * exception as its cause. If there is no such constructor, we\n     * instead try to use a no-arg constructor, followed by initCause,\n     * to the same effect. If none of these apply, or any fail due to\n     * other exceptions, we return the recorded exception, which is\n     * still correct, although it may contain a misleading stack\n     * trace.\n     *\n     * @return the exception, or null if none\n     */\n    private Throwable getThrowableException() {\n        Throwable ex; Aux a;\n        if ((a \u003d aux) \u003d\u003d null)\n            ex \u003d null;\n        else if ((ex \u003d a.ex) !\u003d null \u0026\u0026 a.thread !\u003d Thread.currentThread()) {\n            try {\n                Constructor\u003c?\u003e noArgCtor \u003d null, oneArgCtor \u003d null;\n                for (Constructor\u003c?\u003e c : ex.getClass().getConstructors()) {\n                    Class\u003c?\u003e[] ps \u003d c.getParameterTypes();\n                    if (ps.length \u003d\u003d 0)\n                        noArgCtor \u003d c;\n                    else if (ps.length \u003d\u003d 1 \u0026\u0026 ps[0] \u003d\u003d Throwable.class) {\n                        oneArgCtor \u003d c;\n                        break;\n                    }\n                }\n                if (oneArgCtor !\u003d null)\n                    ex \u003d (Throwable)oneArgCtor.newInstance(ex);\n                else if (noArgCtor !\u003d null) {\n                    Throwable rx \u003d (Throwable)noArgCtor.newInstance();\n                    rx.initCause(ex);\n                    ex \u003d rx;\n                }\n            } catch (Exception ignore) {\n            }\n        }\n        return ex;\n    }\n\n    /**\n     * Returns exception associated with the given status, or null if none.\n     */\n    private Throwable getException(int s) {\n        Throwable ex \u003d null;\n        if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026\n            ((s \u0026 THROWN) \u003d\u003d 0 || (ex \u003d getThrowableException()) \u003d\u003d null))\n            ex \u003d new CancellationException();\n        return ex;\n    }\n\n    /**\n     * Throws exception associated with the given status, or\n     * CancellationException if none recorded.\n     */\n    private void reportException(int s) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(\n            (s \u0026 THROWN) !\u003d 0 ? getThrowableException() : null);\n    }\n\n    /**\n     * Throws exception for (timed or untimed) get, wrapping if\n     * necessary in an ExecutionException.\n     */\n    private void reportExecutionException(int s) {\n        Throwable ex \u003d null;\n        if (s \u003d\u003d ABNORMAL)\n            ex \u003d new InterruptedException();\n        else if (s \u003e\u003d 0)\n            ex \u003d new TimeoutException();\n        else if ((s \u0026 THROWN) !\u003d 0 \u0026\u0026 (ex \u003d getThrowableException()) !\u003d null)\n            ex \u003d new ExecutionException(ex);\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * A version of \"sneaky throw\" to relay exceptions in other\n     * contexts.\n     */\n    static void rethrow(Throwable ex) {\n        ForkJoinTask.\u003cRuntimeException\u003euncheckedThrow(ex);\n    }\n\n    /**\n     * The sneaky part of sneaky throw, relying on generics\n     * limitations to evade compiler complaints about rethrowing\n     * unchecked exceptions. If argument null, throws\n     * CancellationException.\n     */\n    @SuppressWarnings(\"unchecked\") static \u003cT extends Throwable\u003e\n    void uncheckedThrow(Throwable t) throws T {\n        if (t \u003d\u003d null)\n            t \u003d new CancellationException();\n        throw (T)t; // rely on vacuous cast\n    }\n\n    // public methods\n\n    /**\n     * Arranges to asynchronously execute this task in the pool the\n     * current task is running in, if applicable, or using the {@link\n     * ForkJoinPool#commonPool()} if not {@link #inForkJoinPool}.  While\n     * it is not necessarily enforced, it is a usage error to fork a\n     * task more than once unless it has completed and been\n     * reinitialized.  Subsequent modifications to the state of this\n     * task or any data it operates on are not necessarily\n     * consistently observable by any thread other than the one\n     * executing it unless preceded by a call to {@link #join} or\n     * related methods, or a call to {@link #isDone} returning {@code\n     * true}.\n     *\n     * @return {@code this}, to simplify usage\n     */\n    public final ForkJoinTask\u003cV\u003e fork() {\n        Thread t; ForkJoinWorkerThread w;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            (w \u003d (ForkJoinWorkerThread)t).workQueue.push(this, w.pool);\n        else\n            ForkJoinPool.common.externalPush(this);\n        return this;\n    }\n\n    /**\n     * Returns the result of the computation when it\n     * {@linkplain #isDone is done}.\n     * This method differs from {@link #get()} in that abnormal\n     * completion results in {@code RuntimeException} or {@code Error},\n     * not {@code ExecutionException}, and that interrupts of the\n     * calling thread do \u003cem\u003enot\u003c/em\u003e cause the method to abruptly\n     * return by throwing {@code InterruptedException}.\n     *\n     * @return the computed result\n     */\n    public final V join() {\n        int s;\n        if ((s \u003d status) \u003e\u003d 0)\n            s \u003d awaitDone(null, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Commences performing this task, awaits its completion if\n     * necessary, and returns its result, or throws an (unchecked)\n     * {@code RuntimeException} or {@code Error} if the underlying\n     * computation did so.\n     *\n     * @return the computed result\n     */\n    public final V invoke() {\n        int s;\n        if ((s \u003d doExec()) \u003e\u003d 0)\n            s \u003d awaitDone(null, true, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, the\n     * other may be cancelled. However, the execution status of\n     * individual tasks is not guaranteed upon exceptional return. The\n     * status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param t1 the first task\n     * @param t2 the second task\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e t1, ForkJoinTask\u003c?\u003e t2) {\n        int s1, s2;\n        if (t1 \u003d\u003d null || t2 \u003d\u003d null)\n            throw new NullPointerException();\n        t2.fork();\n        if ((s1 \u003d t1.doExec()) \u003e\u003d 0)\n            s1 \u003d t1.awaitDone(null, true, false, false, 0L);\n        if ((s1 \u0026 ABNORMAL) !\u003d 0) {\n            cancelIgnoringExceptions(t2);\n            t1.reportException(s1);\n        }\n        else if (((s2 \u003d t2.awaitDone(null, false, false, false, 0L)) \u0026 ABNORMAL) !\u003d 0)\n            t2.reportException(s2);\n    }\n\n    /**\n     * Forks the given tasks, returning when {@code isDone} holds for\n     * each task or an (unchecked) exception is encountered, in which\n     * case the exception is rethrown. If more than one task\n     * encounters an exception, then this method throws any one of\n     * these exceptions. If any task encounters an exception, others\n     * may be cancelled. However, the execution status of individual\n     * tasks is not guaranteed upon exceptional return. The status of\n     * each task may be obtained using {@link #getException()} and\n     * related methods to check if they have been cancelled, completed\n     * normally or exceptionally, or left unprocessed.\n     *\n     * @param tasks the tasks\n     * @throws NullPointerException if any task is null\n     */\n    public static void invokeAll(ForkJoinTask\u003c?\u003e... tasks) {\n        Throwable ex \u003d null;\n        int last \u003d tasks.length - 1;\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d tasks[i]) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d tasks[i]) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(tasks[i]);\n            rethrow(ex);\n        }\n    }\n\n    /**\n     * Forks all tasks in the specified collection, returning when\n     * {@code isDone} holds for each task or an (unchecked) exception\n     * is encountered, in which case the exception is rethrown. If\n     * more than one task encounters an exception, then this method\n     * throws any one of these exceptions. If any task encounters an\n     * exception, others may be cancelled. However, the execution\n     * status of individual tasks is not guaranteed upon exceptional\n     * return. The status of each task may be obtained using {@link\n     * #getException()} and related methods to check if they have been\n     * cancelled, completed normally or exceptionally, or left\n     * unprocessed.\n     *\n     * @param tasks the collection of tasks\n     * @param \u003cT\u003e the type of the values returned from the tasks\n     * @return the tasks argument, to simplify usage\n     * @throws NullPointerException if tasks or any element are null\n     */\n    public static \u003cT extends ForkJoinTask\u003c?\u003e\u003e Collection\u003cT\u003e invokeAll(Collection\u003cT\u003e tasks) {\n        if (!(tasks instanceof RandomAccess) || !(tasks instanceof List\u003c?\u003e)) {\n            invokeAll(tasks.toArray(new ForkJoinTask\u003c?\u003e[0]));\n            return tasks;\n        }\n        @SuppressWarnings(\"unchecked\")\n        List\u003c? extends ForkJoinTask\u003c?\u003e\u003e ts \u003d\n            (List\u003c? extends ForkJoinTask\u003c?\u003e\u003e) tasks;\n        Throwable ex \u003d null;\n        int last \u003d ts.size() - 1;  // nearly same as array version\n        for (int i \u003d last; i \u003e\u003d 0; --i) {\n            ForkJoinTask\u003c?\u003e t;\n            if ((t \u003d ts.get(i)) \u003d\u003d null) {\n                ex \u003d new NullPointerException();\n                break;\n            }\n            if (i \u003d\u003d 0) {\n                int s;\n                if ((s \u003d t.doExec()) \u003e\u003d 0)\n                    s \u003d t.awaitDone(null, true, false, false, 0L);\n                if ((s \u0026 ABNORMAL) !\u003d 0)\n                    ex \u003d t.getException(s);\n                break;\n            }\n            t.fork();\n        }\n        if (ex \u003d\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i) {\n                ForkJoinTask\u003c?\u003e t;\n                if ((t \u003d ts.get(i)) !\u003d null) {\n                    int s;\n                    if ((s \u003d t.status) \u003e\u003d 0)\n                        s \u003d t.awaitDone(null, false, false, false, 0L);\n                    if ((s \u0026 ABNORMAL) !\u003d 0 \u0026\u0026 (ex \u003d t.getException(s)) !\u003d null)\n                        break;\n                }\n            }\n        }\n        if (ex !\u003d null) {\n            for (int i \u003d 1; i \u003c\u003d last; ++i)\n                cancelIgnoringExceptions(ts.get(i));\n            rethrow(ex);\n        }\n        return tasks;\n    }\n\n    /**\n     * Attempts to cancel execution of this task. This attempt will\n     * fail if the task has already completed or could not be\n     * cancelled for some other reason. If successful, and this task\n     * has not started when {@code cancel} is called, execution of\n     * this task is suppressed. After this method returns\n     * successfully, unless there is an intervening call to {@link\n     * #reinitialize}, subsequent calls to {@link #isCancelled},\n     * {@link #isDone}, and {@code cancel} will return {@code true}\n     * and calls to {@link #join} and related methods will result in\n     * {@code CancellationException}.\n     *\n     * \u003cp\u003eThis method may be overridden in subclasses, but if so, must\n     * still ensure that these properties hold. In particular, the\n     * {@code cancel} method itself must not throw exceptions.\n     *\n     * \u003cp\u003eThis method is designed to be invoked by \u003cem\u003eother\u003c/em\u003e\n     * tasks. To terminate the current task, you can just return or\n     * throw an unchecked exception from its computation method, or\n     * invoke {@link #completeExceptionally(Throwable)}.\n     *\n     * @param mayInterruptIfRunning this value has no effect in the\n     * default implementation because interrupts are not used to\n     * control cancellation.\n     *\n     * @return {@code true} if this task is now cancelled\n     */\n    public boolean cancel(boolean mayInterruptIfRunning) {\n        return (trySetCancelled() \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    public final boolean isDone() {\n        return status \u003c 0;\n    }\n\n    public final boolean isCancelled() {\n        return (status \u0026 (ABNORMAL | THROWN)) \u003d\u003d ABNORMAL;\n    }\n\n    /**\n     * Returns {@code true} if this task threw an exception or was cancelled.\n     *\n     * @return {@code true} if this task threw an exception or was cancelled\n     */\n    public final boolean isCompletedAbnormally() {\n        return (status \u0026 ABNORMAL) !\u003d 0;\n    }\n\n    /**\n     * Returns {@code true} if this task completed without throwing an\n     * exception and was not cancelled.\n     *\n     * @return {@code true} if this task completed without throwing an\n     * exception and was not cancelled\n     */\n    public final boolean isCompletedNormally() {\n        return (status \u0026 (DONE | ABNORMAL)) \u003d\u003d DONE;\n    }\n\n    /**\n     * Returns the exception thrown by the base computation, or a\n     * {@code CancellationException} if cancelled, or {@code null} if\n     * none or if the method has not yet completed.\n     *\n     * @return the exception, or {@code null} if none\n     */\n    public final Throwable getException() {\n        return getException(status);\n    }\n\n    /**\n     * Completes this task abnormally, and if not already aborted or\n     * cancelled, causes it to throw the given exception upon\n     * {@code join} and related operations. This method may be used\n     * to induce exceptions in asynchronous tasks, or to force\n     * completion of tasks that would not otherwise complete.  Its use\n     * in other situations is discouraged.  This method is\n     * overridable, but overridden versions must invoke {@code super}\n     * implementation to maintain guarantees.\n     *\n     * @param ex the exception to throw. If this exception is not a\n     * {@code RuntimeException} or {@code Error}, the actual exception\n     * thrown will be a {@code RuntimeException} with cause {@code ex}.\n     */\n    public void completeExceptionally(Throwable ex) {\n        trySetException((ex instanceof RuntimeException) ||\n                        (ex instanceof Error) ? ex :\n                        new RuntimeException(ex));\n    }\n\n    /**\n     * Completes this task, and if not already aborted or cancelled,\n     * returning the given value as the result of subsequent\n     * invocations of {@code join} and related operations. This method\n     * may be used to provide results for asynchronous tasks, or to\n     * provide alternative handling for tasks that would not otherwise\n     * complete normally. Its use in other situations is\n     * discouraged. This method is overridable, but overridden\n     * versions must invoke {@code super} implementation to maintain\n     * guarantees.\n     *\n     * @param value the result value for this task\n     */\n    public void complete(V value) {\n        try {\n            setRawResult(value);\n        } catch (Throwable rex) {\n            trySetException(rex);\n            return;\n        }\n        setDone();\n    }\n\n    /**\n     * Completes this task normally without setting a value. The most\n     * recent value established by {@link #setRawResult} (or {@code\n     * null} by default) will be returned as the result of subsequent\n     * invocations of {@code join} and related operations.\n     *\n     * @since 1.8\n     */\n    public final void quietlyComplete() {\n        setDone();\n    }\n\n    /**\n     * Waits if necessary for the computation to complete, and then\n     * retrieves its result.\n     *\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     */\n    public final V get() throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(null, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Waits if necessary for at most the given time for the computation\n     * to complete, and then retrieves its result, if available.\n     *\n     * @param timeout the maximum time to wait\n     * @param unit the time unit of the timeout argument\n     * @return the computed result\n     * @throws CancellationException if the computation was cancelled\n     * @throws ExecutionException if the computation threw an\n     * exception\n     * @throws InterruptedException if the current thread is not a\n     * member of a ForkJoinPool and was interrupted while waiting\n     * @throws TimeoutException if the wait timed out\n     */\n    public final V get(long timeout, TimeUnit unit)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        long nanos \u003d unit.toNanos(timeout);\n        int s \u003d awaitDone(null, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Joins this task, without returning its result or throwing its\n     * exception. This method may be useful when processing\n     * collections of tasks when some have been cancelled or otherwise\n     * known to have aborted.\n     */\n    public final void quietlyJoin() {\n        if (status \u003e\u003d 0)\n            awaitDone(null, false, false, false, 0L);\n    }\n\n\n    /**\n     * Commences performing this task and awaits its completion if\n     * necessary, without returning its result or throwing its\n     * exception.\n     */\n    public final void quietlyInvoke() {\n        if (doExec() \u003e\u003d 0)\n            awaitDone(null, true, false, false, 0L);\n    }\n\n    // Versions of join/get for pool.invoke* methods that use external,\n    // possibly-non-commonPool submits\n\n    final void awaitPoolInvoke(ForkJoinPool pool) {\n        awaitDone(pool, false, false, false, 0L);\n    }\n    final void awaitPoolInvoke(ForkJoinPool pool, long nanos) {\n        awaitDone(pool, false, true, true, nanos);\n    }\n    final V joinForPoolInvoke(ForkJoinPool pool) {\n        int s \u003d awaitDone(pool, false, false, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool)\n        throws InterruptedException, ExecutionException {\n        int s \u003d awaitDone(pool, false, true, false, 0L);\n        if ((s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n    final V getForPoolInvoke(ForkJoinPool pool, long nanos)\n        throws InterruptedException, ExecutionException, TimeoutException {\n        int s \u003d awaitDone(pool, false, true, true, nanos);\n        if (s \u003e\u003d 0 || (s \u0026 ABNORMAL) !\u003d 0)\n            reportExecutionException(s);\n        return getRawResult();\n    }\n\n    /**\n     * Possibly executes tasks until the pool hosting the current task\n     * {@linkplain ForkJoinPool#isQuiescent is quiescent}.  This\n     * method may be of use in designs in which many tasks are forked,\n     * but none are explicitly joined, instead executing them until\n     * all are processed.\n     */\n    public static void helpQuiesce() {\n        Thread t; ForkJoinWorkerThread w; ForkJoinPool p;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread \u0026\u0026\n            (p \u003d (w \u003d (ForkJoinWorkerThread)t).pool) !\u003d null)\n            p.helpQuiescePool(w.workQueue, Long.MAX_VALUE, false);\n        else\n            ForkJoinPool.common.externalHelpQuiescePool(Long.MAX_VALUE, false);\n    }\n\n    /**\n     * Resets the internal bookkeeping state of this task, allowing a\n     * subsequent {@code fork}. This method allows repeated reuse of\n     * this task, but only if reuse occurs when this task has either\n     * never been forked, or has been forked, then completed and all\n     * outstanding joins of this task have also completed. Effects\n     * under any other usage conditions are not guaranteed.\n     * This method may be useful when executing\n     * pre-constructed trees of subtasks in loops.\n     *\n     * \u003cp\u003eUpon completion of this method, {@code isDone()} reports\n     * {@code false}, and {@code getException()} reports {@code\n     * null}. However, the value returned by {@code getRawResult} is\n     * unaffected. To clear this value, you can invoke {@code\n     * setRawResult(null)}.\n     */\n    public void reinitialize() {\n        aux \u003d null;\n        status \u003d 0;\n    }\n\n    /**\n     * Returns the pool hosting the current thread, or {@code null}\n     * if the current thread is executing outside of any ForkJoinPool.\n     *\n     * \u003cp\u003eThis method returns {@code null} if and only if {@link\n     * #inForkJoinPool} returns {@code false}.\n     *\n     * @return the pool, or {@code null} if none\n     */\n    public static ForkJoinPool getPool() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread) t).pool : null);\n    }\n\n    /**\n     * Returns {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation.\n     *\n     * @return {@code true} if the current thread is a {@link\n     * ForkJoinWorkerThread} executing as a ForkJoinPool computation,\n     * or {@code false} otherwise\n     */\n    public static boolean inForkJoinPool() {\n        return Thread.currentThread() instanceof ForkJoinWorkerThread;\n    }\n\n    /**\n     * Tries to unschedule this task for execution. This method will\n     * typically (but is not guaranteed to) succeed if this task is\n     * the most recently forked task by the current thread, and has\n     * not commenced executing in another thread.  This method may be\n     * useful when arranging alternative local processing of tasks\n     * that could have been, but were not, stolen.\n     *\n     * @return {@code true} if unforked\n     */\n    public boolean tryUnfork() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        return ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            ? (q \u003d ((ForkJoinWorkerThread)t).workQueue) !\u003d null\n               \u0026\u0026 q.tryUnpush(this)\n            : (q \u003d ForkJoinPool.commonQueue()) !\u003d null\n               \u0026\u0026 q.externalTryUnpush(this);\n    }\n\n    /**\n     * Returns an estimate of the number of tasks that have been\n     * forked by the current worker thread but not yet executed. This\n     * value may be useful for heuristic decisions about whether to\n     * fork other tasks.\n     *\n     * @return the number of tasks\n     */\n    public static int getQueuedTaskCount() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? 0 : q.queueSize();\n    }\n\n    /**\n     * Returns an estimate of how many more locally queued tasks are\n     * held by the current worker thread than there are other worker\n     * threads that might steal them, or zero if this thread is not\n     * operating in a ForkJoinPool. This value may be useful for\n     * heuristic decisions about whether to fork other tasks. In many\n     * usages of ForkJoinTasks, at steady state, each worker should\n     * aim to maintain a small constant surplus (for example, 3) of\n     * tasks, and to process computations locally if this threshold is\n     * exceeded.\n     *\n     * @return the surplus number of tasks, which may be negative\n     */\n    public static int getSurplusQueuedTaskCount() {\n        return ForkJoinPool.getSurplusQueuedTaskCount();\n    }\n\n    // Extension methods\n\n    /**\n     * Returns the result that would be returned by {@link #join}, even\n     * if this task completed abnormally, or {@code null} if this task\n     * is not known to have been completed.  This method is designed\n     * to aid debugging, as well as to support extensions. Its use in\n     * any other context is discouraged.\n     *\n     * @return the result, or {@code null} if not completed\n     */\n    public abstract V getRawResult();\n\n    /**\n     * Forces the given value to be returned as a result.  This method\n     * is designed to support extensions, and should not in general be\n     * called otherwise.\n     *\n     * @param value the value\n     */\n    protected abstract void setRawResult(V value);\n\n    /**\n     * Immediately performs the base action of this task and returns\n     * true if, upon return from this method, this task is guaranteed\n     * to have completed. This method may return false otherwise, to\n     * indicate that this task is not necessarily complete (or is not\n     * known to be complete), for example in asynchronous actions that\n     * require explicit invocations of completion methods. This method\n     * may also throw an (unchecked) exception to indicate abnormal\n     * exit. This method is designed to support extensions, and should\n     * not in general be called otherwise.\n     *\n     * @return {@code true} if this task is known to have completed normally\n     */\n    protected abstract boolean exec();\n\n    /**\n     * Returns, but does not unschedule or execute, a task queued by\n     * the current thread but not yet executed, if one is immediately\n     * available. There is no guarantee that this task will actually\n     * be polled or executed next. Conversely, this method may return\n     * null even if a task exists but cannot be accessed without\n     * contention with other threads.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e peekNextLocalTask() {\n        Thread t; ForkJoinPool.WorkQueue q;\n        if ((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread)\n            q \u003d ((ForkJoinWorkerThread)t).workQueue;\n        else\n            q \u003d ForkJoinPool.commonQueue();\n        return (q \u003d\u003d null) ? null : q.peek();\n    }\n\n    /**\n     * Unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if the\n     * current thread is operating in a ForkJoinPool.  This method is\n     * designed primarily to support extensions, and is unlikely to be\n     * useful otherwise.\n     *\n     * @return the next task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollNextLocalTask() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).workQueue.nextLocalTask() : null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, the next task\n     * queued by the current thread but not yet executed, if one is\n     * available, or if not available, a task that was forked by some\n     * other thread, if available. Availability may be transient, so a\n     * {@code null} result does not necessarily imply quiescence of\n     * the pool this task is operating in.  This method is designed\n     * primarily to support extensions, and is unlikely to be useful\n     * otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     */\n    protected static ForkJoinTask\u003c?\u003e pollTask() {\n        Thread t; ForkJoinWorkerThread w;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                (w \u003d (ForkJoinWorkerThread)t).pool.nextTaskFor(w.workQueue) :\n                null);\n    }\n\n    /**\n     * If the current thread is operating in a ForkJoinPool,\n     * unschedules and returns, without executing, a task externally\n     * submitted to the pool, if one is available. Availability may be\n     * transient, so a {@code null} result does not necessarily imply\n     * quiescence of the pool.  This method is designed primarily to\n     * support extensions, and is unlikely to be useful otherwise.\n     *\n     * @return a task, or {@code null} if none are available\n     * @since 9\n     */\n    protected static ForkJoinTask\u003c?\u003e pollSubmission() {\n        Thread t;\n        return (((t \u003d Thread.currentThread()) instanceof ForkJoinWorkerThread) ?\n                ((ForkJoinWorkerThread)t).pool.pollSubmission() : null);\n    }\n\n    // tag operations\n\n    /**\n     * Returns the tag for this task.\n     *\n     * @return the tag for this task\n     * @since 1.8\n     */\n    public final short getForkJoinTaskTag() {\n        return (short)status;\n    }\n\n    /**\n     * Atomically sets the tag value for this task and returns the old value.\n     *\n     * @param newValue the new tag value\n     * @return the previous value of the tag\n     * @since 1.8\n     */\n    public final short setForkJoinTaskTag(short newValue) {\n        for (int s;;) {\n            if (casStatus(s \u003d status, (s \u0026 ~SMASK) | (newValue \u0026 SMASK)))\n                return (short)s;\n        }\n    }\n\n    /**\n     * Atomically conditionally sets the tag value for this task.\n     * Among other applications, tags can be used as visit markers\n     * in tasks operating on graphs, as in methods that check: {@code\n     * if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))}\n     * before processing, otherwise exiting because the node has\n     * already been visited.\n     *\n     * @param expect the expected tag value\n     * @param update the new tag value\n     * @return {@code true} if successful; i.e., the current value was\n     * equal to {@code expect} and was changed to {@code update}.\n     * @since 1.8\n     */\n    public final boolean compareAndSetForkJoinTaskTag(short expect, short update) {\n        for (int s;;) {\n            if ((short)(s \u003d status) !\u003d expect)\n                return false;\n            if (casStatus(s, (s \u0026 ~SMASK) | (update \u0026 SMASK)))\n                return true;\n        }\n    }\n\n    /**\n     * Adapter for Runnables. This implements RunnableFuture\n     * to be compliant with AbstractExecutorService constraints\n     * when used in ForkJoinPool.\n     */\n    static final class AdaptedRunnable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedRunnable(Runnable runnable, T result) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n            this.result \u003d result; // OK to set this even before completion\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables without results.\n     */\n    static final class AdaptedRunnableAction extends ForkJoinTask\u003cVoid\u003e\n        implements RunnableFuture\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        AdaptedRunnableAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + runnable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Runnables in which failure forces worker exception.\n     */\n    static final class RunnableExecuteAction extends ForkJoinTask\u003cVoid\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Runnable runnable;\n        RunnableExecuteAction(Runnable runnable) {\n            if (runnable \u003d\u003d null) throw new NullPointerException();\n            this.runnable \u003d runnable;\n        }\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) { }\n        public final boolean exec() { runnable.run(); return true; }\n        int trySetException(Throwable ex) { // if a handler, invoke it\n            int s; Thread t; java.lang.Thread.UncaughtExceptionHandler h;\n            if (isExceptionalStatus(s \u003d trySetThrown(ex)) \u0026\u0026\n                (h \u003d ((t \u003d Thread.currentThread()).\n                      getUncaughtExceptionHandler())) !\u003d null) {\n                try {\n                    h.uncaughtException(t, ex);\n                } catch (Throwable ignore) {\n                }\n            }\n            return s;\n        }\n        private static final long serialVersionUID \u003d 5232453952276885070L;\n    }\n\n    /**\n     * Adapter for Callables.\n     */\n    static final class AdaptedCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        T result;\n        AdaptedCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            try {\n                result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            }\n        }\n        public final void run() { invoke(); }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    static final class AdaptedInterruptibleCallable\u003cT\u003e extends ForkJoinTask\u003cT\u003e\n        implements RunnableFuture\u003cT\u003e {\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        final Callable\u003c? extends T\u003e callable;\n        @SuppressWarnings(\"serial\") // Conditionally serializable\n        transient volatile Thread runner;\n        T result;\n        AdaptedInterruptibleCallable(Callable\u003c? extends T\u003e callable) {\n            if (callable \u003d\u003d null) throw new NullPointerException();\n            this.callable \u003d callable;\n        }\n        public final T getRawResult() { return result; }\n        public final void setRawResult(T v) { result \u003d v; }\n        public final boolean exec() {\n            Thread.interrupted();\n            runner \u003d Thread.currentThread();\n            try {\n                if (!isDone()) // recheck\n                    result \u003d callable.call();\n                return true;\n            } catch (RuntimeException rex) {\n                throw rex;\n            } catch (Exception ex) {\n                throw new RuntimeException(ex);\n            } finally {\n                runner \u003d null;\n                Thread.interrupted();\n            }\n        }\n        public final void run() { invoke(); }\n        public final boolean cancel(boolean mayInterruptIfRunning) {\n            Thread t;\n            boolean stat \u003d super.cancel(false);\n            if (mayInterruptIfRunning \u0026\u0026 (t \u003d runner) !\u003d null) {\n                try {\n                    t.interrupt();\n                } catch (Throwable ignore) {\n                }\n            }\n            return stat;\n        }\n        public String toString() {\n            return super.toString() + \"[Wrapped task \u003d \" + callable + \"]\";\n        }\n        private static final long serialVersionUID \u003d 2838392045355241008L;\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * a null result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @return the task\n     */\n    public static ForkJoinTask\u003c?\u003e adapt(Runnable runnable) {\n        return new AdaptedRunnableAction(runnable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code run}\n     * method of the given {@code Runnable} as its action, and returns\n     * the given result upon {@link #join}.\n     *\n     * @param runnable the runnable action\n     * @param result the result upon completion\n     * @param \u003cT\u003e the type of the result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Runnable runnable, T result) {\n        return new AdaptedRunnable\u003cT\u003e(runnable, result);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     */\n    public static \u003cT\u003e ForkJoinTask\u003cT\u003e adapt(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedCallable\u003cT\u003e(callable);\n    }\n\n    /**\n     * Returns a new {@code ForkJoinTask} that performs the {@code call}\n     * method of the given {@code Callable} as its action, and returns\n     * its result upon {@link #join}, translating any checked exceptions\n     * encountered into {@code RuntimeException}.  Additionally,\n     * invocations of {@code cancel} with {@code mayInterruptIfRunning\n     * true} will attempt to interrupt the thread performing the task.\n     *\n     * @param callable the callable action\n     * @param \u003cT\u003e the type of the callable\u0027s result\n     * @return the task\n     *\n     * @since 17\n     */\n    // adaptInterruptible deferred to its own independent change\n    // https://bugs.openjdk.java.net/browse/JDK-8246587\n    /* TODO: public */ private static \u003cT\u003e ForkJoinTask\u003cT\u003e adaptInterruptible(Callable\u003c? extends T\u003e callable) {\n        return new AdaptedInterruptibleCallable\u003cT\u003e(callable);\n    }\n\n    // Serialization support\n\n    private static final long serialVersionUID \u003d -7721805057305804111L;\n\n    /**\n     * Saves this task to a stream (that is, serializes it).\n     *\n     * @param s the stream\n     * @throws java.io.IOException if an I/O error occurs\n     * @serialData the current run status and the exception thrown\n     * during execution, or {@code null} if none\n     */\n    private void writeObject(java.io.ObjectOutputStream s)\n        throws java.io.IOException {\n        Aux a;\n        s.defaultWriteObject();\n        s.writeObject((a \u003d aux) \u003d\u003d null ? null : a.ex);\n    }\n\n    /**\n     * Reconstitutes this task from a stream (that is, deserializes it).\n     * @param s the stream\n     * @throws ClassNotFoundException if the class of a serialized object\n     *         could not be found\n     * @throws java.io.IOException if an I/O error occurs\n     */\n    private void readObject(java.io.ObjectInputStream s)\n        throws java.io.IOException, ClassNotFoundException {\n        s.defaultReadObject();\n        Object ex \u003d s.readObject();\n        if (ex !\u003d null)\n            trySetThrown((Throwable)ex);\n    }\n\n    static {\n        try {\n            MethodHandles.Lookup l \u003d MethodHandles.lookup();\n            STATUS \u003d l.findVarHandle(ForkJoinTask.class, \"status\", int.class);\n            AUX \u003d l.findVarHandle(ForkJoinTask.class, \"aux\", Aux.class);\n        } catch (ReflectiveOperationException e) {\n            throw new ExceptionInInitializerError(e);\n        }\n    }\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:320)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

dic. 03, 2023 7:52:07 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Java/jdk-17/lib/src.zip%21/java.base/java/util/concurrent/ForkJoinTask.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:645)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:642)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Java/jdk-17/lib/src.zip!/java.base/java/util/concurrent/ForkJoinTask.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

dic. 03, 2023 7:52:09 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5717
dic. 03, 2023 7:52:09 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5716
dic. 03, 2023 7:52:12 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5722
2023.12.03 19:52:15 INFO  compiling app (1 scala source)
2023.12.03 19:52:18 INFO  time: compiled app in 2.35s
dic. 03, 2023 7:52:27 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5754
2023.12.03 19:53:05 INFO  compiling app (1 scala source)
2023.12.03 19:53:05 INFO  time: compiled app in 0.16s
2023.12.03 19:53:14 INFO  compiling app (1 scala source)
2023.12.03 19:53:14 INFO  time: compiled app in 0.17s
2023.12.03 19:53:28 INFO  compiling app (1 scala source)
2023.12.03 19:53:28 INFO  time: compiled app in 0.14s
2023.12.03 19:53:32 INFO  compiling app (1 scala source)
2023.12.03 19:53:33 INFO  time: compiled app in 1.26s
2023.12.03 19:53:57 INFO  compiling app (1 scala source)
2023.12.03 19:53:57 INFO  time: compiled app in 0.46s
2023.12.03 19:55:25 INFO  compiling app (1 scala source)
2023.12.03 19:55:26 INFO  time: compiled app in 1.03s
dic. 03, 2023 7:56:58 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-12-03\r_compiler-error_(app)_19-56-58-116.md
2023.12.03 19:57:01 INFO  compiling app (1 scala source)
2023.12.03 19:57:01 INFO  time: compiled app in 0.18s
dic. 03, 2023 7:57:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6491
2023.12.03 19:57:13 INFO  compiling app (1 scala source)
2023.12.03 19:57:13 INFO  time: compiled app in 0.16s
dic. 03, 2023 7:57:21 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6558
2023.12.03 19:57:28 INFO  compiling app (1 scala source)
2023.12.03 19:57:28 INFO  time: compiled app in 0.94s
dic. 03, 2023 7:58:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6693
2023.12.03 19:59:05 INFO  compiling app (1 scala source)
2023.12.03 19:59:05 INFO  time: compiled app in 0.23s
2023.12.03 19:59:09 INFO  compiling app (1 scala source)
2023.12.03 19:59:10 INFO  time: compiled app in 1.1s
dic. 03, 2023 7:59:41 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6862
2023.12.03 20:00:58 INFO  compiling app (1 scala source)
2023.12.03 20:01:00 INFO  time: compiled app in 1.65s
dic. 03, 2023 8:09:29 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7326
dic. 03, 2023 8:09:49 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7423
2023.12.03 20:09:54 INFO  compiling app (1 scala source)
2023.12.03 20:09:54 INFO  time: compiled app in 0.19s
2023.12.03 20:10:42 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
scala.meta.tokenizers.TokenizeException: <input>:145: error: illegal character '\u00b4'
      val C21 = obj.sumMatriz(´3, p4)
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 03, 2023 8:10:42 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7696
2023.12.03 20:10:44 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
scala.meta.tokenizers.TokenizeException: <input>:145: error: illegal character '\u00b4'
      val C21 = obj.sumMatriz(´p3, p4)
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 20:10:53 INFO  compiling app (1 scala source)
2023.12.03 20:10:53 INFO  time: compiled app in 0.16s
2023.12.03 20:11:03 INFO  compiling app (1 scala source)
2023.12.03 20:11:04 INFO  time: compiled app in 1.08s
2023.12.03 20:12:56 INFO  compiling app (1 scala source)
2023.12.03 20:12:56 INFO  time: compiled app in 0.15s
2023.12.03 20:13:32 INFO  compiling app (2 scala sources)
2023.12.03 20:13:32 INFO  time: compiled app in 0.21s
2023.12.03 20:13:41 INFO  compiling app (2 scala sources)
2023.12.03 20:13:42 INFO  time: compiled app in 1.38s
dic. 03, 2023 8:14:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8066
dic. 03, 2023 8:14:59 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8069
2023.12.03 20:15:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
scala.meta.tokenizers.TokenizeException: <input>:145: error: illegal character '\u00b4'
      val C21 = obj.sumMatriz(´p3, p4)
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 20:15:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
scala.meta.tokenizers.TokenizeException: <input>:145: error: illegal character '\u00b4'
      val C21 = obj.sumMatriz(´p3, p4)
                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 03, 2023 8:15:10 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8119
2023.12.03 20:15:23 INFO  compiling app (1 scala source)
2023.12.03 20:15:23 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 20:15:23 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\implAlgoritmosParallel.scala
2023.12.03 20:15:24 INFO  time: compiled app in 1.62s
dic. 03, 2023 8:15:24 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
Exception in thread "pool-5-thread-8" scala.tools.nsc.interactive.ShutdownReq$
2023.12.03 20:15:27 INFO  compiling app (1 scala source)
2023.12.03 20:15:27 INFO  time: compiled app in 0.71s
2023.12.03 20:15:27 INFO  compiling app (1 scala source)
2023.12.03 20:15:29 INFO  time: compiled app in 0.53s
dic. 03, 2023 8:22:38 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8301
dic. 03, 2023 8:24:43 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8387
2023.12.03 20:25:05 INFO  compiling app (1 scala source)
2023.12.03 20:25:05 INFO  time: compiled app in 0.54s
2023.12.03 20:25:32 INFO  compiling app (1 scala source)
2023.12.03 20:25:34 INFO  time: compiled app in 1.52s
2023.12.03 20:26:03 INFO  compiling app (1 scala source)
2023.12.03 20:26:03 INFO  time: compiled app in 0.16s
2023.12.03 20:26:21 INFO  compiling app (1 scala source)
2023.12.03 20:26:22 INFO  time: compiled app in 1.04s
2023.12.03 20:28:22 INFO  compiling app (1 scala source)
2023.12.03 20:28:22 INFO  time: compiled app in 0.98s
2023.12.03 20:28:43 INFO  compiling app (1 scala source)
2023.12.03 20:28:45 INFO  time: compiled app in 1.77s
2023.12.03 20:32:03 INFO  compiling app (1 scala source)
2023.12.03 20:32:04 INFO  time: compiled app in 1.03s
2023.12.03 20:32:59 INFO  compiling app (1 scala source)
2023.12.03 20:32:59 INFO  time: compiled app in 0.22s
2023.12.03 20:33:11 INFO  compiling app (1 scala source)
2023.12.03 20:33:11 INFO  time: compiled app in 0.2s
2023.12.03 20:33:24 INFO  compiling app (1 scala source)
2023.12.03 20:33:24 INFO  time: compiled app in 0.2s
2023.12.03 20:33:33 INFO  compiling app (1 scala source)
2023.12.03 20:33:33 INFO  time: compiled app in 0.19s
2023.12.03 20:33:35 INFO  compiling app (1 scala source)
2023.12.03 20:33:35 INFO  time: compiled app in 0.26s
dic. 03, 2023 8:33:37 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9007
2023.12.03 20:33:38 INFO  compiling app (1 scala source)
2023.12.03 20:33:38 INFO  time: compiled app in 0.29s
2023.12.03 20:33:56 INFO  compiling app (1 scala source)
2023.12.03 20:33:56 INFO  time: compiled app in 0.97s
2023.12.03 20:51:56 INFO  compiling app (1 scala source)
2023.12.03 20:51:57 INFO  time: compiled app in 1.7s
2023.12.03 21:19:49 INFO  Shutting down server
2023.12.03 21:19:49 INFO  shutting down Metals
2023.12.03 21:19:49 INFO  Shut down connection with build server.
2023.12.03 21:19:51 INFO  Exiting server
2023.12.03 21:30:38 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 21:30:38 INFO  time: initialize in 0.35s
2023.12.03 21:30:44 INFO  Attempting to connect to the build server...
2023.12.03 21:30:44 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 21:30:45 INFO  skipping build import with status 'Installed'
2023.12.03 21:30:46 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 21:30:46 INFO  time: Connected to build server in 2.4s
2023.12.03 21:30:46 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 21:30:46 INFO  time: Imported build in 0.4s
dic. 03, 2023 9:31:04 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2023.12.03 21:31:06 INFO  compiling app (1 scala source)
dic. 03, 2023 9:31:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\.reports\metals-full\2023-12-03\r_compiler-error_(app)_21-31-06-581.md
2023.12.03 21:31:09 INFO  time: compiled app in 2.92s
2023.12.03 21:31:13 INFO  time: indexed workspace in 26s
2023.12.03 21:31:28 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:23: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:23: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:38 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:22: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:41 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:21: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:46 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:20: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:46 INFO  compiling app (1 scala source)
2023.12.03 21:31:46 INFO  time: compiled app in 0.55s
2023.12.03 21:31:47 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:20: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:48 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:20: error: illegal character '\u00a0'
 }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:31:49 INFO  compiling app (1 scala source)
2023.12.03 21:31:49 INFO  time: compiled app in 0.91s
dic. 03, 2023 9:31:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 84
dic. 03, 2023 9:31:52 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 86
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 21:31:53 INFO  compiling app (1 scala source)
dic. 03, 2023 9:31:53 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 89
2023.12.03 21:31:53 INFO  time: compiled app in 0.72s
dic. 03, 2023 9:32:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 124
dic. 03, 2023 9:32:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 125
dic. 03, 2023 9:32:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 126
dic. 03, 2023 9:32:04 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 127
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 129
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 130
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 128
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 132
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 133
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 134
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 136
dic. 03, 2023 9:32:05 P. M. scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
dic. 03, 2023 9:32:05 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 141
2023.12.03 21:32:08 INFO  compiling app (1 scala source)
2023.12.03 21:32:10 INFO  time: compiled app in 1.91s
2023.12.03 21:32:54 INFO  compiling app (1 scala source)
2023.12.03 21:32:54 INFO  time: compiled app in 0.24s
2023.12.03 21:33:01 INFO  compiling app (1 scala source)
2023.12.03 21:33:01 INFO  time: compiled app in 0.13s
2023.12.03 21:33:12 INFO  compiling app (1 scala source)
2023.12.03 21:33:12 INFO  time: compiled app in 0.18s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala in Vector[<error>]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala, 151, 151, 167)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala, 158, 158, 169)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala in Vector[Int]RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala, 158, 158, 169)
2023.12.03 21:33:17 INFO  compiling app (1 scala source)
2023.12.03 21:33:17 INFO  time: compiled app in 0.11s
2023.12.03 21:33:18 INFO  compiling app (1 scala source)
2023.12.03 21:33:18 INFO  time: compiled app in 0.38s
2023.12.03 21:35:43 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\benchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:10: error: Invalid literal number
    def CompararAlgoritmos(Funcion1:8Matriz,Matriz) => Matriz, Funcion2:Matriz => Matriz)(m1: Matriz, m2: Matriz): (Double, Double, Double) = {
                                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.checkNoLetter(LegacyScanner.scala:820)
	at scala.meta.internal.tokenizers.LegacyScanner.restOfUncertainToken$1(LegacyScanner.scala:864)
	at scala.meta.internal.tokenizers.LegacyScanner.getNumber(LegacyScanner.scala:872)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:335)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 21:35:45 INFO  compiling app (1 scala source)
2023.12.03 21:35:45 INFO  time: compiled app in 0.21s
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala in Benchmark.this.Matriz => Benchmark.this.MatrizRangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala, 249, 256, 265)
something's wrong: no file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala in (Benchmark.this.Matriz, => Benchmark.this.Matriz)RangePosition(file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/main/scala/taller4/benchMark.scala, 248, 248, 267)
2023.12.03 21:35:54 INFO  compiling app (1 scala source)
2023.12.03 21:35:54 INFO  time: compiled app in 0.2s
dic. 03, 2023 9:35:58 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 388
2023.12.03 21:36:17 INFO  compiling app (1 scala source)
2023.12.03 21:36:17 INFO  time: compiled app in 0.18s
2023.12.03 21:37:04 INFO  compiling app (1 scala source)
2023.12.03 21:37:04 INFO  time: compiled app in 0.18s
2023.12.03 21:38:04 INFO  compiling app (1 scala source)
2023.12.03 21:38:04 INFO  time: compiled app in 0.2s
2023.12.03 21:39:16 INFO  compiling app (1 scala source)
2023.12.03 21:39:16 INFO  time: compiled app in 0.19s
2023.12.03 21:39:31 INFO  compiling app (1 scala source)
2023.12.03 21:39:31 INFO  time: compiled app in 0.17s
2023.12.03 21:39:38 INFO  compiling app (1 scala source)
2023.12.03 21:39:38 INFO  time: compiled app in 0.17s
2023.12.03 21:40:04 INFO  compiling app (1 scala source)
2023.12.03 21:40:04 INFO  time: compiled app in 0.21s
2023.12.03 21:40:07 INFO  compiling app (1 scala source)
2023.12.03 21:40:07 INFO  time: compiled app in 0.17s
2023.12.03 21:40:09 INFO  compiling app (1 scala source)
2023.12.03 21:40:09 INFO  time: compiled app in 0.19s
2023.12.03 21:40:15 INFO  compiling app (1 scala source)
2023.12.03 21:40:15 INFO  time: compiled app in 0.19s
2023.12.03 21:40:23 INFO  compiling app (1 scala source)
2023.12.03 21:40:23 INFO  time: compiled app in 0.16s
dic. 03, 2023 9:41:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 842
2023.12.03 21:41:03 INFO  compiling app (1 scala source)
2023.12.03 21:41:03 INFO  time: compiled app in 0.18s
dic. 03, 2023 9:41:13 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 867
dic. 03, 2023 9:41:17 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 900
2023.12.03 21:41:23 INFO  compiling app (1 scala source)
2023.12.03 21:41:23 INFO  time: compiled app in 0.18s
2023.12.03 21:42:13 INFO  compiling app (1 scala source)
2023.12.03 21:42:15 INFO  time: compiled app in 1.53s
2023.12.03 21:42:28 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 21:42:30 INFO  time: compiled app in 1.15s
2023.12.03 21:42:38 INFO  compiling app (1 scala source)
2023.12.03 21:42:40 INFO  time: compiled app in 1.14s
2023.12.03 21:42:55 INFO  compiling app (1 scala source)
2023.12.03 21:42:55 INFO  time: compiled app in 0.67s
dic. 03, 2023 9:43:34 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1154
2023.12.03 21:44:11 INFO  compiling app (1 scala source)
2023.12.03 21:44:14 INFO  time: compiled app in 2.83s
2023.12.03 21:44:14 INFO  compiling app (1 scala source)
2023.12.03 21:44:14 INFO  time: compiled app in 94ms
2023.12.03 21:44:14 INFO  compiling app (1 scala source)
2023.12.03 21:44:14 INFO  time: compiled app in 0.44s
2023.12.03 21:44:14 INFO  compiling app (1 scala source)
2023.12.03 21:44:14 INFO  time: compiled app in 0.16s
2023.12.03 21:44:33 INFO  compiling app (2 scala sources)
2023.12.03 21:44:33 INFO  time: compiled app in 0.12s
2023.12.03 21:44:39 INFO  compiling app (2 scala sources)
2023.12.03 21:44:39 INFO  time: compiled app in 0.16s
2023.12.03 21:44:56 INFO  compiling app (2 scala sources)
2023.12.03 21:44:56 INFO  time: compiled app in 0.14s
dic. 03, 2023 9:45:08 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1388
2023.12.03 21:45:09 INFO  compiling app (2 scala sources)
2023.12.03 21:45:09 INFO  time: compiled app in 0.12s
2023.12.03 21:45:25 INFO  compiling app (2 scala sources)
2023.12.03 21:45:26 INFO  time: compiled app in 1.34s
2023.12.03 21:45:49 INFO  compiling app (5 scala sources)
2023.12.03 21:45:52 INFO  time: compiled app in 2.81s
2023.12.03 21:46:07 INFO  compiling app (5 scala sources)
2023.12.03 21:46:10 INFO  time: compiled app in 2.46s
2023.12.03 21:46:14 INFO  compiling app (5 scala sources)
2023.12.03 21:46:17 INFO  time: compiled app in 2.62s
2023.12.03 21:46:36 INFO  compiling app (1 scala source)
2023.12.03 21:46:36 INFO  time: compiled app in 0.12s
2023.12.03 21:46:37 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:46:38 INFO  compiling app (1 scala source)
2023.12.03 21:46:38 INFO  time: compiled app in 0.18s
2023.12.03 21:46:40 INFO  compiling app (1 scala source)
2023.12.03 21:46:40 INFO  time: compiled app in 0.12s
2023.12.03 21:47:28 INFO  compiling app (2 scala sources)
2023.12.03 21:47:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:28 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0' (since 16m 42.672s)
2023.12.03 21:47:28 INFO  compiling app (2 scala sources)
2023.12.03 21:47:28 INFO  time: compiled app in 91ms
2023.12.03 21:47:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:30 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:39 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:42 INFO  compiling app (2 scala sources)
2023.12.03 21:47:42 INFO  time: compiled app in 0.1s
2023.12.03 21:47:42 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:47 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 21:47:47 INFO  compiling app (2 scala sources)
2023.12.03 21:47:47 INFO  time: compiled app in 0.68s
2023.12.03 21:50:29 INFO  compiling app (1 scala source)
2023.12.03 21:50:29 INFO  time: compiled app in 98ms
2023.12.03 21:50:34 INFO  compiling app (1 scala source)
2023.12.03 21:50:34 INFO  time: compiled app in 0.69s
2023.12.03 21:53:18 INFO  compiling app (1 scala source)
2023.12.03 21:53:18 INFO  time: compiled app in 0.62s
2023.12.03 21:54:28 INFO  compiling app (1 scala source)
2023.12.03 21:54:28 INFO  time: compiled app in 0.73s
2023.12.03 21:54:52 INFO  compiling app (1 scala source)
2023.12.03 21:54:54 INFO  time: compiled app in 1.32s
2023.12.03 21:59:28 INFO  compiling app (1 scala source)
2023.12.03 21:59:28 INFO  time: compiled app in 0.91s
dic. 03, 2023 9:59:31 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2088
2023.12.03 21:59:38 INFO  compiling app (1 scala source)
2023.12.03 21:59:38 INFO  time: compiled app in 0.82s
dic. 03, 2023 10:01:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2159
2023.12.03 22:02:01 INFO  compiling app (1 scala source)
2023.12.03 22:02:01 INFO  time: compiled app in 0.34s
2023.12.03 22:02:01 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:04 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:07 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:10 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:11 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:11 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:12 INFO  compiling app (1 scala source)
2023.12.03 22:02:12 INFO  time: compiled app in 0.14s
2023.12.03 22:02:12 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:15 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
dic. 03, 2023 10:02:17 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2368
2023.12.03 22:02:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:21 INFO  compiling app (1 scala source)
2023.12.03 22:02:21 INFO  time: compiled app in 0.25s
2023.12.03 22:02:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:27 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:28 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:32 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:41 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:43 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:45 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:45 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:48 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:02:48 INFO  compiling app (1 scala source)
2023.12.03 22:02:48 INFO  time: compiled app in 0.7s
2023.12.03 22:03:03 INFO  compiling app (1 scala source)
2023.12.03 22:03:03 INFO  time: compiled app in 0.72s
2023.12.03 22:03:08 INFO  compiling app (1 scala source)
2023.12.03 22:03:08 INFO  time: compiled app in 0.64s
2023.12.03 22:03:35 INFO  compiling app (1 scala source)
2023.12.03 22:03:35 INFO  time: compiled app in 0.69s
2023.12.03 22:04:00 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:04:00 INFO  compiling app (1 scala source)
2023.12.03 22:04:00 INFO  time: compiled app in 0.69s
2023.12.03 22:04:03 INFO  compiling app (1 scala source)
2023.12.03 22:04:03 INFO  time: compiled app in 0.63s
2023.12.03 22:04:27 INFO  compiling app (1 scala source)
Exception in thread "pool-4-thread-3" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 22:04:27 INFO  time: compiled app in 0.86s
2023.12.03 22:06:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
Exception in thread "pool-4-thread-4" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 22:06:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:06:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:06:17 WARN  Using indexes to guess the definition of obj
2023.12.03 22:06:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:06:17 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:06:17 INFO  compiling app (1 scala source)
2023.12.03 22:06:19 INFO  time: compiled app in 1.56s
2023.12.03 22:07:32 INFO  compiling app (1 scala source)
2023.12.03 22:07:32 INFO  time: compiled app in 0.67s
2023.12.03 22:08:35 INFO  compiling app (1 scala source)
2023.12.03 22:08:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:08:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:08:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:08:35 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:08:36 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:08:35 INFO  time: compiled app in 0.77s
2023.12.03 22:09:20 INFO  compiling app (1 scala source)
2023.12.03 22:09:20 INFO  time: compiled app in 0.85s
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
Exception in thread "pool-4-thread-5" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:230)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:15:34 INFO  compiling app (1 scala source)
2023.12.03 22:15:34 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.03 22:15:34 INFO  time: compiled app in 0.96s
2023.12.03 22:17:17 INFO  compiling app (1 scala source)
2023.12.03 22:17:18 INFO  time: compiled app in 1.01s
dic. 03, 2023 10:18:30 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.12.03 22:18:46 INFO  compiling app (1 scala source)
2023.12.03 22:18:46 INFO  time: compiled app in 0.69s
2023.12.03 22:18:46 INFO  compiling app (1 scala source)
2023.12.03 22:18:46 INFO  time: compiled app in 53ms
2023.12.03 22:18:47 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\BenchMark.scala
2023.12.03 22:18:50 INFO  compiling app (2 scala sources)
2023.12.03 22:18:50 INFO  time: compiled app in 0.71s
dic. 03, 2023 10:21:22 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2961
2023.12.03 22:21:32 INFO  compiling app (1 scala source)
2023.12.03 22:21:32 INFO  time: compiled app in 0.15s
2023.12.03 22:21:46 INFO  compiling app (1 scala source)
2023.12.03 22:21:46 INFO  time: compiled app in 0.13s
dic. 03, 2023 10:23:21 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.12.03 22:23:39 INFO  compiling app (1 scala source)
2023.12.03 22:23:39 INFO  time: compiled app in 0.13s
2023.12.03 22:23:45 INFO  Shutting down server
2023.12.03 22:23:45 INFO  shutting down Metals
2023.12.03 22:23:45 INFO  Shut down connection with build server.
2023.12.03 22:23:46 INFO  Exiting server
2023.12.03 22:25:13 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 22:25:19 INFO  Attempting to connect to the build server...
2023.12.03 22:25:19 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 22:25:19 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 22:25:20 INFO  time: Connected to build server in 1.67s
2023.12.03 22:25:20 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 22:25:33 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.03 22:25:33 INFO  time: Imported build in 0.2s
2023.12.03 22:25:39 INFO  time: indexed workspace in 5.71s
2023.12.03 22:25:39 INFO  compiling app (1 scala source)
2023.12.03 22:25:43 INFO  time: compiled app in 4.16s
2023.12.03 22:25:43 INFO  compiling app (1 scala source)
2023.12.03 22:25:43 INFO  time: compiled app in 0.58s
2023.12.03 22:25:43 INFO  compiling app (1 scala source)
2023.12.03 22:25:44 INFO  time: compiled app in 0.32s
2023.12.03 22:27:12 INFO  compiling app (1 scala source)
2023.12.03 22:27:12 INFO  time: compiled app in 0.21s
2023.12.03 22:27:26 INFO  compiling app (1 scala source)
2023.12.03 22:27:26 INFO  time: compiled app in 0.1s
2023.12.03 22:27:30 INFO  compiling app (1 scala source)
2023.12.03 22:27:30 INFO  time: compiled app in 0.25s
dic. 03, 2023 10:27:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 109
dic. 03, 2023 10:27:36 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 110
2023.12.03 22:27:39 INFO  compiling app (1 scala source)
2023.12.03 22:27:39 INFO  time: compiled app in 0.14s
2023.12.03 22:27:43 INFO  compiling app (1 scala source)
2023.12.03 22:27:43 INFO  time: compiled app in 0.16s
2023.12.03 22:27:54 INFO  compiling app (1 scala source)
2023.12.03 22:27:54 INFO  time: compiled app in 0.32s
2023.12.03 22:30:30 INFO  Shutting down server
2023.12.03 22:30:30 INFO  shutting down Metals
2023.12.03 22:30:30 INFO  Shut down connection with build server.
2023.12.03 22:30:30 ERROR Unexpected error initializing server: 
org.eclipse.lsp4j.jsonrpc.ResponseErrorException: Request window/showMessageRequest failed with message: Canceled
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponse(RemoteEndpoint.java:209)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:193)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.03 22:30:30 INFO  Exiting server
2023.12.03 22:48:04 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 22:48:05 INFO  time: initialize in 0.22s
2023.12.03 22:48:09 INFO  Attempting to connect to the build server...
2023.12.03 22:48:09 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 22:48:28 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 22:48:28 INFO  time: Connected to build server in 20s
2023.12.03 22:48:28 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 22:48:30 INFO  time: Imported build in 0.78s
dic. 03, 2023 10:48:40 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3
2023.12.03 22:48:43 INFO  time: indexed workspace in 13s
2023.12.03 22:48:45 INFO  compiling app (1 scala source)
dic. 03, 2023 10:48:49 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5
2023.12.03 22:48:54 INFO  time: compiled app in 8.93s
2023.12.03 22:48:55 INFO  compiling app (1 scala source)
2023.12.03 22:48:58 INFO  time: compiled app in 3.76s
2023.12.03 22:50:11 INFO  running 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\gradlew.bat --stacktrace --console=plain --init-script C:\Users\ALEJAN~1\AppData\Local\Temp\metals12527818644236308428\init-script.gradle bloopInstall'
2023.12.03 22:50:13 INFO  > Task :configureBloopInstall
2023.12.03 22:50:13 INFO  > Task :bloopInstall
2023.12.03 22:50:13 INFO  > Task :app:configureBloopInstall
2023.12.03 22:50:13 INFO  > Task :app:bloopInstall
2023.12.03 22:50:13 INFO  
2023.12.03 22:50:13 INFO  Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.
2023.12.03 22:50:13 INFO  
2023.12.03 22:50:13 INFO  You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.
2023.12.03 22:50:13 INFO  
2023.12.03 22:50:13 INFO  For more on this, please refer to https://docs.gradle.org/8.3/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.
2023.12.03 22:50:13 INFO  
2023.12.03 22:50:13 INFO  BUILD SUCCESSFUL in 2s
2023.12.03 22:50:13 INFO  4 actionable tasks: 4 executed
2023.12.03 22:50:14 INFO  time: ran 'gradle bloopInstall' in 2.52s
2023.12.03 22:50:14 INFO  Disconnecting from Bloop session...
2023.12.03 22:50:14 INFO  Shut down connection with build server.
2023.12.03 22:50:14 INFO  Attempting to connect to the build server...
2023.12.03 22:50:14 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 22:50:14 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 22:50:14 INFO  time: Connected to build server in 0.16s
2023.12.03 22:50:14 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 22:50:14 INFO  time: Imported build in 0.14s
2023.12.03 22:50:14 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.03 22:50:26 INFO  compiling app (5 scala sources)
dic. 03, 2023 10:50:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:50:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-7-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:50:32 INFO  time: indexed workspace in 17s
dic. 03, 2023 10:50:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-7-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:50:41 INFO  time: compiled app in 14s
2023.12.03 22:50:41 INFO  compiling app-test (1 scala source)
2023.12.03 22:50:45 INFO  time: compiled app-test in 4.27s
2023.12.03 22:51:50 INFO  Shutting down server
2023.12.03 22:51:50 INFO  shutting down Metals
2023.12.03 22:51:51 INFO  Shut down connection with build server.
2023.12.03 22:51:50 INFO  Exiting server
2023.12.03 22:52:51 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.03 22:52:51 INFO  time: initialize in 0.18s
2023.12.03 22:52:54 INFO  Attempting to connect to the build server...
2023.12.03 22:52:54 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.03 22:52:55 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.03 22:52:55 INFO  skipping build import with status 'Installed'
2023.12.03 22:52:55 INFO  time: Connected to build server in 1.44s
2023.12.03 22:52:55 INFO  Connected to Build server: Bloop v1.5.11
2023.12.03 22:53:02 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.03 22:53:02 INFO  time: Imported build in 0.13s
2023.12.03 22:53:03 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.03 22:53:09 INFO  time: indexed workspace in 6.16s
2023.12.03 22:53:14 INFO  compiling app-test (1 scala source)
2023.12.03 22:53:14 INFO  time: compiled app-test in 31ms
dic. 03, 2023 10:53:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:53:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:53:23 INFO  compiling app-test (1 scala source)
dic. 03, 2023 10:53:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:53:27 INFO  time: compiled app-test in 3.8s
dic. 03, 2023 10:53:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:53:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:53:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:53:35 INFO  compiling app-test (1 scala source)
2023.12.03 22:53:35 INFO  time: compiled app-test in 0.45s
dic. 03, 2023 10:53:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:53:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:53:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:24 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 85
dic. 03, 2023 10:54:25 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:25 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:26 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:30 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:50 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:54:52 INFO  compiling app (1 scala source)
2023.12.03 22:54:55 INFO  time: compiled app in 2.92s
dic. 03, 2023 10:54:56 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:54:57 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 134
dic. 03, 2023 10:54:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:00 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:00 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:55:02 INFO  compiling app (1 scala source)
2023.12.03 22:55:04 INFO  time: compiled app in 1.72s
dic. 03, 2023 10:55:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:55:19 INFO  compiling app (1 scala source)
2023.12.03 22:55:20 INFO  time: compiled app in 1.14s
2023.12.03 22:55:26 INFO  compiling app (1 scala source)
2023.12.03 22:55:27 INFO  time: compiled app in 1.19s
dic. 03, 2023 10:55:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:55:41 INFO  compiling app (1 scala source)
2023.12.03 22:55:43 INFO  time: compiled app in 1.34s
dic. 03, 2023 10:55:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:55:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:55:51 INFO  compiling app (1 scala source)
2023.12.03 22:55:53 INFO  time: compiled app in 1.65s
2023.12.03 22:55:57 INFO  compiling app (1 scala source)
2023.12.03 22:55:58 INFO  time: compiled app in 1.44s
dic. 03, 2023 10:56:13 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:56:33 INFO  compiling app (1 scala source)
2023.12.03 22:56:33 INFO  time: compiled app in 0.55s
dic. 03, 2023 10:56:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:56:45 INFO  compiling app (1 scala source)
2023.12.03 22:56:45 INFO  time: compiled app in 0.52s
dic. 03, 2023 10:56:50 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:56:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:56:53 INFO  compiling app (1 scala source)
2023.12.03 22:56:53 INFO  time: compiled app in 0.52s
2023.12.03 22:57:06 INFO  compiling app (1 scala source)
2023.12.03 22:57:06 INFO  time: compiled app in 0.48s
dic. 03, 2023 10:57:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:57:16 INFO  compiling app (1 scala source)
2023.12.03 22:57:16 INFO  time: compiled app in 0.51s
2023.12.03 22:57:23 INFO  compiling app (1 scala source)
2023.12.03 22:57:23 INFO  time: compiled app in 0.57s
2023.12.03 22:57:26 INFO  compiling app (1 scala source)
2023.12.03 22:57:26 INFO  time: compiled app in 0.69s
dic. 03, 2023 10:57:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:57:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.03 22:57:38 INFO  compiling app (1 scala source)
2023.12.03 22:57:38 INFO  time: compiled app in 0.53s
dic. 03, 2023 10:58:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:19 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:22 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:30 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 03, 2023 10:58:32 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.12.03 22:59:01 INFO  Shutting down server
2023.12.03 22:59:01 INFO  shutting down Metals
2023.12.03 22:59:01 INFO  Shut down connection with build server.
2023.12.03 22:59:01 INFO  Exiting server
2023.12.04 08:07:49 INFO  Started: Metals version 1.1.0 in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 08:07:49 INFO  time: initialize in 0.15s
2023.12.04 08:07:54 INFO  Attempting to connect to the build server...
2023.12.04 08:07:54 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 08:07:56 INFO  skipping build import with status 'Installed'
dic. 04, 2023 8:08:13 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1
2023.12.04 08:08:34 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmosParallel.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.04 08:08:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 08:08:40 INFO  time: Connected to build server in 46s
2023.12.04 08:08:40 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 08:08:41 INFO  time: Imported build in 0.48s
2023.12.04 08:08:41 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 08:08:50 INFO  time: indexed workspace in 8.31s
2023.12.04 08:08:54 INFO  compiling app-test (1 scala source)
dic. 04, 2023 8:09:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:09:08 INFO  time: compiled app-test in 13s
dic. 04, 2023 8:09:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:44 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:09:53 INFO  compiling app (1 scala source)
2023.12.04 08:09:57 INFO  time: compiled app in 3.78s
2023.12.04 08:09:58 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
dic. 04, 2023 8:09:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:09:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:00 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:05 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
2023.12.04 08:10:06 INFO  compiling app (1 scala source)
2023.12.04 08:10:08 INFO  time: compiled app in 1.74s
2023.12.04 08:10:09 INFO  compiling app (1 scala source)
dic. 04, 2023 8:10:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:10 INFO  time: compiled app in 1.02s
dic. 04, 2023 8:10:19 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:22 INFO  compiling app (1 scala source)
dic. 04, 2023 8:10:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:25 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:26 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 102
2023.12.04 08:10:28 INFO  time: compiled app in 5.91s
2023.12.04 08:10:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmosParallel.scala
2023.12.04 08:10:29 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmosParallel.scala
dic. 04, 2023 8:10:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:32 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmosParallel.scala
2023.12.04 08:10:33 INFO  compiling app (1 scala source)
2023.12.04 08:10:37 INFO  time: compiled app in 4.47s
dic. 04, 2023 8:10:42 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:43 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:44 INFO  compiling app (1 scala source)
2023.12.04 08:10:48 INFO  time: compiled app in 3.56s
dic. 04, 2023 8:10:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:54 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:10:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:10:59 INFO  compiling app (1 scala source)
2023.12.04 08:11:01 INFO  time: compiled app in 2.55s
dic. 04, 2023 8:11:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:12 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:17 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:11:18 INFO  compiling app (1 scala source)
2023.12.04 08:11:21 INFO  time: compiled app in 2.74s
dic. 04, 2023 8:11:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:34 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:11:36 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:45 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:13:49 INFO  compiling app (1 scala source)
dic. 04, 2023 8:13:50 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:13:50 INFO  time: compiled app in 1.18s
dic. 04, 2023 8:13:50 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:54 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:13:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:00 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:02 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:02 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:14 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:15 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:15 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:20 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:14:20 INFO  compiling app (1 scala source)
2023.12.04 08:14:20 INFO  time: compiled app in 0.6s
dic. 04, 2023 8:14:22 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:14:29 INFO  compiling app (1 scala source)
2023.12.04 08:14:29 INFO  time: compiled app in 0.84s
dic. 04, 2023 8:14:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:33 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:14:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:23:05 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:23:05 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 345
dic. 04, 2023 8:28:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:28:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:29:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:30:44 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:30:49 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:30:50 INFO  compiling app (1 scala source)
2023.12.04 08:30:51 INFO  time: compiled app in 1.28s
dic. 04, 2023 8:33:43 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:33:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:33:51 INFO  compiling app (1 scala source)
2023.12.04 08:33:52 INFO  time: compiled app in 1.05s
dic. 04, 2023 8:34:14 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:16 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:20 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:24 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:24 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:25 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:25 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:32 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:34 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:34:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

Exception in thread "pool-6-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.onCompilerJobQueue$$anonfun$1(CompilerAccess.scala:195)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
dic. 04, 2023 8:34:50 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:35:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:35 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:35 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 423
dic. 04, 2023 8:36:35 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:36 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:37 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:41 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:36:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:36:50 INFO  compiling app (1 scala source)
2023.12.04 08:36:50 INFO  time: compiled app in 0.97s
dic. 04, 2023 8:37:28 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:34 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:45 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:37:47 INFO  compiling app (1 scala source)
2023.12.04 08:37:47 INFO  time: compiled app in 0.83s
dic. 04, 2023 8:37:49 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:37:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:40:54 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:40:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:40:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:40:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:41:33 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:42:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:42:33 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:43:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:44:02 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:44:02 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 588
dic. 04, 2023 8:44:03 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:44:04 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:44:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:44:10 INFO  compiling app (1 scala source)
2023.12.04 08:44:10 INFO  time: compiled app in 0.61s
dic. 04, 2023 8:44:12 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:14 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:45:14 INFO  compiling app (1 scala source)
2023.12.04 08:45:14 INFO  time: compiled app in 0.61s
dic. 04, 2023 8:45:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:49 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:49 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:52 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:45:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:47:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:48:05 INFO  compiling app (1 scala source)
2023.12.04 08:48:05 INFO  time: compiled app in 0.9s
dic. 04, 2023 8:48:06 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:51:01 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\BenchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:34: error: illegal character '\u00a0'
    }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 04, 2023 8:51:02 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:51:04 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\BenchMark.scala
scala.meta.tokenizers.TokenizeException: <input>:34: error: illegal character '\u00a0'
 }
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:469)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:474)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 08:51:05 INFO  compiling app (1 scala source)
2023.12.04 08:51:05 INFO  time: compiled app in 0.21s
dic. 04, 2023 8:51:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:12 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:14 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:14 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:15 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:16 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:17 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:17 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:18 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:18 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:20 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:21 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:21 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:22 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:51:22 INFO  compiling app (1 scala source)
2023.12.04 08:51:22 INFO  time: compiled app in 0.29s
dic. 04, 2023 8:51:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:24 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:37 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:51:41 INFO  compiling app (1 scala source)
2023.12.04 08:51:41 INFO  time: compiled app in 0.12s
dic. 04, 2023 8:51:43 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:43 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:43 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:44 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:44 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:45 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:46 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 832
dic. 04, 2023 8:51:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:51:52 INFO  compiling app (1 scala source)
2023.12.04 08:51:52 INFO  time: compiled app in 0.36s
2023.12.04 08:51:52 INFO  compiling app (1 scala source)
2023.12.04 08:51:53 INFO  time: compiled app in 0.97s
dic. 04, 2023 8:51:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:51:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:02 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:03 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:03 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:20 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:32 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:35 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:41 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:42 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:52:46 INFO  compiling app (1 scala source)
2023.12.04 08:52:46 INFO  time: compiled app in 0.32s
dic. 04, 2023 8:52:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:52:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:53:01 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:53:55 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:53:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:54:03 INFO  compiling app (1 scala source)
2023.12.04 08:54:03 INFO  time: compiled app in 0.45s
dic. 04, 2023 8:54:04 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:54:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:54:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:20 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:21 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:55:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:12 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:22 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:56:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:15 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:23 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:24 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:24 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:57:29 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:59:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:59:28 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:59:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\Taller4.scala
scala.meta.tokenizers.TokenizeException: <input>:60: error: Non-zero integral values may not have a leading zero.
    println(obj3.compararProdPunto(100 000))
                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.restOfUncertainToken$1(LegacyScanner.scala:856)
	at scala.meta.internal.tokenizers.LegacyScanner.getNumber(LegacyScanner.scala:872)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchZero$1(LegacyScanner.scala:330)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:332)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:539)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 08:59:33 INFO  compiling app (1 scala source)
2023.12.04 08:59:33 INFO  time: compiled app in 0.58s
dic. 04, 2023 8:59:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 8:59:55 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 08:59:57 INFO  compiling app (1 scala source)
2023.12.04 08:59:57 INFO  time: compiled app in 0.33s
dic. 04, 2023 9:00:00 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:00:00 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:00:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:00:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:00 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:06 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:11 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1177
dic. 04, 2023 9:01:13 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:17 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1197
dic. 04, 2023 9:01:19 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1209
dic. 04, 2023 9:01:19 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1210
dic. 04, 2023 9:01:22 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1222
dic. 04, 2023 9:01:29 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1258
2023.12.04 09:01:32 INFO  time: code lens generation in 1.05s
dic. 04, 2023 9:01:32 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:01:34 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1278
dic. 04, 2023 9:01:34 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1279
dic. 04, 2023 9:01:45 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:01:46 INFO  compiling app (1 scala source)
2023.12.04 09:01:46 INFO  time: compiled app in 0.42s
dic. 04, 2023 9:01:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:01:50 INFO  compiling app (1 scala source)
2023.12.04 09:01:50 INFO  time: compiled app in 0.52s
2023.12.04 09:02:55 INFO  compiling app (1 scala source)
2023.12.04 09:02:55 INFO  time: compiled app in 0.43s
dic. 04, 2023 9:03:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:03:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:03:42 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:03:47 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:03:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:03:48 INFO  compiling app (1 scala source)
2023.12.04 09:03:48 INFO  time: compiled app in 0.52s
dic. 04, 2023 9:03:49 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:04:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:04:36 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:04:36 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:04:39 INFO  compiling app (1 scala source)
2023.12.04 09:04:39 INFO  time: compiled app in 0.46s
dic. 04, 2023 9:04:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:05:06 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:05:10 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:05:11 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:05:11 INFO  compiling app (1 scala source)
2023.12.04 09:05:11 INFO  time: compiled app in 0.5s
dic. 04, 2023 9:05:44 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:05:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:05:49 INFO  compiling app (1 scala source)
2023.12.04 09:05:49 INFO  time: compiled app in 0.64s
dic. 04, 2023 9:05:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:07:54 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:07:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:07:57 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1372
2023.12.04 09:07:58 INFO  compiling app (1 scala source)
2023.12.04 09:07:58 INFO  time: compiled app in 0.57s
dic. 04, 2023 9:07:59 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:08:46 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 09:08:46 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 09:08:46 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 09:08:47 INFO  time: Imported build in 0.16s
2023.12.04 09:08:50 INFO  time: indexed workspace in 3.29s
dic. 04, 2023 9:08:55 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:09:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:09:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:09:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 9:09:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:09:53 INFO  compiling app (1 scala source)
2023.12.04 09:09:53 INFO  time: compiled app in 0.55s
2023.12.04 09:19:37 INFO  Shutting down server
2023.12.04 09:19:37 INFO  shutting down Metals
2023.12.04 09:19:38 INFO  Shut down connection with build server.
2023.12.04 09:19:37 INFO  Exiting server
2023.12.04 09:43:40 INFO  Started: Metals version 1.1.0+124-1870e898-SNAPSHOT in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 09:43:41 INFO  time: initialize in 1.04s
2023.12.04 09:43:48 INFO  Attempting to connect to the build server...
2023.12.04 09:43:48 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 09:43:50 INFO  skipping build import with status 'Installed'
2023.12.04 09:44:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 09:44:25 INFO  time: Connected to build server in 36s
2023.12.04 09:44:25 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 09:44:26 INFO  time: Imported build in 1.42s
2023.12.04 09:44:26 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 09:44:50 INFO  time: indexed workspace in 23s
dic. 04, 2023 9:45:19 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:45:22 INFO  compiling app (5 scala sources)
dic. 04, 2023 9:45:22 A. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2023.12.04 09:45:35 INFO  compiling app-test (1 scala source)
2023.12.04 09:45:35 INFO  time: compiled app in 13s
2023.12.04 09:45:36 INFO  time: compiled app-test in 1.48s
dic. 04, 2023 9:45:37 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:46:18 INFO  Shutting down server
2023.12.04 09:46:18 INFO  shutting down Metals
2023.12.04 09:46:19 INFO  Shut down connection with build server.
2023.12.04 09:46:18 INFO  Exiting server
2023.12.04 09:51:33 INFO  Started: Metals version 1.1.0+124-1870e898-SNAPSHOT in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 09:51:33 INFO  time: initialize in 0.14s
2023.12.04 09:51:39 INFO  Attempting to connect to the build server...
2023.12.04 09:51:39 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 09:51:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 09:51:40 INFO  skipping build import with status 'Installed'
2023.12.04 09:51:40 INFO  time: Connected to build server in 1.5s
2023.12.04 09:51:40 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 09:51:40 INFO  time: Imported build in 0.27s
2023.12.04 09:51:49 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmos.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.04 09:51:50 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 09:51:59 INFO  time: indexed workspace in 8.86s
dic. 04, 2023 9:52:06 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 09:55:28 INFO  compiling app (5 scala sources)
2023.12.04 09:55:31 INFO  Shutting down server
2023.12.04 09:55:31 INFO  shutting down Metals
dic. 04, 2023 9:55:33 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:39)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$2(BuildServerConnection.scala:425)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:210)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$register$1(BuildServerConnection.scala:425)
	at scala.meta.internal.metals.Cancelable$$anon$1.cancel(Cancelable.scala:18)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:365)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1(BspSession.scala:34)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1$adapted(BspSession.scala:34)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.bsp.BspSession.cancel(BspSession.scala:34)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.MetalsLspService.cancel(MetalsLspService.scala:160)
	at scala.meta.internal.metals.MetalsLspService.onShutdown(MetalsLspService.scala:935)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2(WorkspaceLspService.scala:1198)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2$adapted(WorkspaceLspService.scala:1198)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at scala.meta.internal.metals.WorkspaceLspService.shutdown(WorkspaceLspService.scala:1198)
	at scala.meta.metals.MetalsLanguageServer.shutdown(MetalsLanguageServer.scala:260)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 45 more

2023.12.04 09:55:33 INFO  Cancelling compilation on Bloop server
2023.12.04 09:55:34 INFO  Shut down connection with build server.
2023.12.04 09:55:34 INFO  time: compiled app in 5.95s
2023.12.04 11:01:21 INFO  Started: Metals version 1.1.0+124-1870e898-SNAPSHOT in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 11:01:21 INFO  time: initialize in 0.11s
2023.12.04 11:01:30 INFO  Attempting to connect to the build server...
2023.12.04 11:01:30 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 11:01:31 INFO  skipping build import with status 'Installed'
dic. 04, 2023 11:01:36 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6
2023.12.04 11:01:46 INFO  no build target found for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\main\scala\taller4\ImplAlgoritmos.scala. Using presentation compiler with project's scala-library version: 3.3.1
2023.12.04 11:02:00 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 11:02:00 INFO  time: Connected to build server in 31s
2023.12.04 11:02:00 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 11:02:01 INFO  time: Imported build in 0.35s
2023.12.04 11:02:00 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 11:02:06 INFO  time: indexed workspace in 4.87s
2023.12.04 11:02:07 INFO  compiling app (5 scala sources)
dic. 04, 2023 11:02:11 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10
dic. 04, 2023 11:02:17 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 11:02:19 INFO  time: compiled app in 11s
2023.12.04 11:02:20 INFO  compiling app (5 scala sources)
2023.12.04 11:02:26 INFO  time: compiled app in 5.64s
dic. 04, 2023 11:02:26 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:31 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:33 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:33 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:35 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:36 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 30
dic. 04, 2023 11:02:37 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 31
dic. 04, 2023 11:02:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

Exception in thread "pool-6-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.onCompilerJobQueue$$anonfun$1(CompilerAccess.scala:195)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.04 11:02:44 INFO  Deduplicating compilation of app from bsp client 'Metals 1.1.0+124-1870e898-SNAPSHOT' (since 42.982s)
2023.12.04 11:02:44 INFO  compiling app (5 scala sources)
2023.12.04 11:02:44 INFO  compiling app (5 scala sources)
dic. 04, 2023 11:02:46 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 11:02:47 INFO  time: compiled app in 3.06s
dic. 04, 2023 11:02:48 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:51 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 70
dic. 04, 2023 11:02:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:51 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:02:53 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 11:02:55 INFO  compiling app (5 scala sources)
2023.12.04 11:02:56 INFO  time: compiled app in 1.41s
dic. 04, 2023 11:02:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 11:02:59 INFO  compiling app (5 scala sources)
dic. 04, 2023 11:03:00 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 89
2023.12.04 11:03:02 INFO  time: compiled app in 3.1s
2023.12.04 11:03:04 INFO  compiling app (5 scala sources)
2023.12.04 11:03:06 INFO  time: compiled app in 2.56s
dic. 04, 2023 11:03:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:09 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 115
2023.12.04 11:03:10 INFO  compiling app (5 scala sources)
2023.12.04 11:03:15 INFO  time: compiled app in 4.87s
dic. 04, 2023 11:03:16 A. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 124
dic. 04, 2023 11:03:17 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:18 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:19 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:19 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:22 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:03:26 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:04:26 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:04:28 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:04:29 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:04:29 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:04:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:13:55 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:13:56 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:13:57 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:13:58 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:14:40 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:23:38 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:23:39 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:04 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:05 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:06 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:07 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:08 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:33:09 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:47:27 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:47:28 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:47:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 11:47:30 A. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 12:12:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 12:12:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-6-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 12:23:43 INFO  Shutting down server
2023.12.04 12:23:43 INFO  shutting down Metals
2023.12.04 12:23:43 INFO  Shut down connection with build server.
2023.12.04 12:23:44 INFO  Exiting server
2023.12.04 14:25:20 INFO  Started: Metals version 1.1.0+124-1870e898-SNAPSHOT in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 14:25:22 INFO  Attempting to connect to the build server...
2023.12.04 14:25:22 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 14:25:24 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 14:25:24 INFO  skipping build import with status 'Installed'
2023.12.04 14:25:24 INFO  time: Connected to build server in 1.73s
2023.12.04 14:25:24 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 14:25:24 INFO  time: Imported build in 0.29s
2023.12.04 14:25:24 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 14:25:40 INFO  time: indexed workspace in 15s
dic. 04, 2023 2:25:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:28:41 INFO  compiling app-test (1 scala source)
2023.12.04 14:28:41 INFO  time: compiled app-test in 0.3s
dic. 04, 2023 2:28:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-5-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:41:11 INFO  Shutting down server
2023.12.04 14:41:11 INFO  shutting down Metals
2023.12.04 14:41:12 INFO  Shut down connection with build server.
2023.12.04 14:41:11 INFO  Exiting server
2023.12.04 14:44:30 INFO  Started: Metals version 1.1.0+124-1870e898-SNAPSHOT in folders 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2' for client Visual Studio Code 1.84.2.
2023.12.04 14:44:32 INFO  Attempting to connect to the build server...
2023.12.04 14:44:32 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 14:44:32 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 14:44:33 INFO  skipping build import with status 'Installed'
2023.12.04 14:44:32 INFO  time: Connected to build server in 0.7s
2023.12.04 14:44:32 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 14:44:34 INFO  time: Imported build in 0.32s
2023.12.04 14:44:33 WARN  3.0.2 is no longer supported in the current Metals versions, using the last known supported version 0.11.12
2023.12.04 14:44:46 INFO  time: indexed workspace in 12s
dic. 04, 2023 2:44:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)'
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:44:55 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:44:55 P. M. org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
dic. 04, 2023 2:45:18 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:45:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:45:39 INFO  running 'C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\gradlew.bat --stacktrace --console=plain --init-script C:\Users\ALEJAN~1\AppData\Local\Temp\metals1303743944869274780\init-script.gradle bloopInstall'
2023.12.04 14:45:44 INFO  > Task :configureBloopInstall
2023.12.04 14:45:44 INFO  > Task :bloopInstall
2023.12.04 14:45:44 INFO  > Task :app:configureBloopInstall
2023.12.04 14:45:44 INFO  > Task :app:bloopInstall
2023.12.04 14:45:44 INFO  
2023.12.04 14:45:45 INFO  Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.
2023.12.04 14:45:45 INFO  
2023.12.04 14:45:45 INFO  You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.
2023.12.04 14:45:45 INFO  
2023.12.04 14:45:45 INFO  For more on this, please refer to https://docs.gradle.org/8.3/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.
2023.12.04 14:45:45 INFO  
2023.12.04 14:45:45 INFO  BUILD SUCCESSFUL in 5s
2023.12.04 14:45:45 INFO  4 actionable tasks: 4 executed
2023.12.04 14:45:45 INFO  time: ran 'gradle bloopInstall' in 5.88s
2023.12.04 14:45:45 INFO  Disconnecting from Bloop session...
2023.12.04 14:45:45 INFO  Shut down connection with build server.
2023.12.04 14:45:46 INFO  Attempting to connect to the build server...
2023.12.04 14:45:46 INFO  Bloop uses C:\Program Files\Java\jdk-17 defined at C:\Users\ALEJANDRO\.bloop\bloop.json
2023.12.04 14:45:46 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\bsp.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\bsp.trace.json
2023.12.04 14:45:46 INFO  time: Connected to build server in 0.13s
2023.12.04 14:45:46 INFO  Connected to Build server: Bloop v1.5.11
2023.12.04 14:45:49 INFO  time: indexed workspace in 2.81s
dic. 04, 2023 2:45:52 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:45:52 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:46:03 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:46:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:46:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:46:47 INFO  compiling app (1 scala source)
dic. 04, 2023 2:46:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 65
2023.12.04 14:46:51 INFO  time: compiled app in 3.6s
2023.12.04 14:46:55 INFO  compiling app (1 scala source)
2023.12.04 14:46:55 INFO  time: compiled app in 0.92s
2023.12.04 14:47:15 INFO  compiling app (1 scala source)
2023.12.04 14:47:15 INFO  time: compiled app in 0.91s
dic. 04, 2023 2:47:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:47:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:47:38 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:47:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:47:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:47:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:48:17 INFO  compiling app (1 scala source)
dic. 04, 2023 2:48:18 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:48:20 INFO  time: compiled app in 2.24s
dic. 04, 2023 2:48:27 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 114
2023.12.04 14:48:28 INFO  compiling app (1 scala source)
2023.12.04 14:48:28 INFO  time: compiled app in 0.95s
dic. 04, 2023 2:48:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:48:30 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:48:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:48:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:48:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:48:39 INFO  compiling app-test (1 scala source)
2023.12.04 14:48:39 INFO  time: compiled app-test in 0.34s
dic. 04, 2023 2:49:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:49:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:49:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:49:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:49:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:49:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:10 INFO  compiling app-test (1 scala source)
2023.12.04 14:50:11 INFO  time: compiled app-test in 1.43s
2023.12.04 14:50:12 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:13 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:19 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:21 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:50:22 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:24 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:25 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:25 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:26 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:50:28 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:50:28 INFO  compiling app-test (1 scala source)
2023.12.04 14:50:28 INFO  time: compiled app-test in 0.96s
2023.12.04 14:50:30 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:45 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 425
2023.12.04 14:50:46 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:50:47 INFO  compiling app-test (1 scala source)
2023.12.04 14:50:47 INFO  time: compiled app-test in 0.84s
dic. 04, 2023 2:50:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:48 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 435
2023.12.04 14:50:49 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:50:51 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:50:51 INFO  compiling app-test (1 scala source)
2023.12.04 14:50:51 INFO  time: compiled app-test in 0.68s
2023.12.04 14:50:53 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:50:53 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:53 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:57 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:50:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:00 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:03 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:05 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:51:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:51:06 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:51:07 INFO  compiling app-test (1 scala source)
2023.12.04 14:51:07 INFO  time: compiled app-test in 0.27s
2023.12.04 14:51:08 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:51:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:51:09 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 2:51:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:51:12 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 14:51:13 INFO  compiling app-test (1 scala source)
2023.12.04 14:51:13 INFO  time: compiled app-test in 0.44s
dic. 04, 2023 2:51:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:51:30 INFO  compiling app-test (1 scala source)
2023.12.04 14:51:30 INFO  time: compiled app-test in 0.45s
2023.12.04 14:51:32 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 14:51:32 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 14:51:32 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 14:51:33 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60389 .
2023.12.04 14:51:33 INFO  Attaching to debuggee VM succeeded.
2023.12.04 14:51:38 INFO  Canceling debug proxy for [taller4.TestTaller4()]
2023.12.04 14:51:38 INFO  Closing debug server tcp://0.0.0.0:60384
dic. 04, 2023 2:51:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:57 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:51:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:52:00 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:52:03 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:03 INFO  time: compiled app-test in 0.53s
2023.12.04 14:52:06 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:06 INFO  time: compiled app-test in 0.66s
2023.12.04 14:52:14 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:14 INFO  time: compiled app-test in 0.74s
2023.12.04 14:52:16 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:16 INFO  time: compiled app-test in 0.9s
2023.12.04 14:52:25 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:25 INFO  time: compiled app-test in 0.81s
dic. 04, 2023 2:52:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:52:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:52:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:52:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:52:35 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:35 INFO  time: compiled app-test in 0.14s
2023.12.04 14:52:37 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:37 INFO  time: compiled app-test in 0.59s
2023.12.04 14:52:40 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:40 INFO  time: compiled app-test in 0.68s
2023.12.04 14:52:46 INFO  compiling app-test (1 scala source)
2023.12.04 14:52:46 INFO  time: compiled app-test in 0.62s
dic. 04, 2023 2:53:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:53:47 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:53:49 INFO  compiling app-test (1 scala source)
2023.12.04 14:53:49 INFO  time: compiled app-test in 0.88s
dic. 04, 2023 2:53:52 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:53:55 INFO  compiling app-test (1 scala source)
2023.12.04 14:53:55 INFO  time: compiled app-test in 0.62s
dic. 04, 2023 2:54:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:07 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:07 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:09 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:54:09 INFO  compiling app-test (1 scala source)
2023.12.04 14:54:09 INFO  time: compiled app-test in 0.59s
dic. 04, 2023 2:54:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:54:26 INFO  compiling app-test (1 scala source)
2023.12.04 14:54:26 INFO  time: compiled app-test in 0.54s
dic. 04, 2023 2:54:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:54:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:55:08 INFO  compiling app-test (1 scala source)
2023.12.04 14:55:08 INFO  time: compiled app-test in 0.61s
dic. 04, 2023 2:55:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:55:18 INFO  compiling app-test (1 scala source)
2023.12.04 14:55:18 INFO  time: compiled app-test in 0.51s
dic. 04, 2023 2:55:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:24 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:26 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:26 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 990
dic. 04, 2023 2:55:26 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:55:31 INFO  compiling app-test (1 scala source)
dic. 04, 2023 2:55:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:55:31 INFO  time: compiled app-test in 0.76s
dic. 04, 2023 2:55:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:55:40 INFO  compiling app-test (1 scala source)
2023.12.04 14:55:40 INFO  time: compiled app-test in 0.61s
dic. 04, 2023 2:55:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:55:51 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1069
2023.12.04 14:55:57 INFO  compiling app-test (1 scala source)
2023.12.04 14:55:57 INFO  time: compiled app-test in 0.44s
2023.12.04 14:56:05 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 14:56:05 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 14:56:05 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 14:56:05 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60482 .
2023.12.04 14:56:05 INFO  Attaching to debuggee VM succeeded.
dic. 04, 2023 2:56:07 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:56:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:56:10 INFO  Canceling debug proxy for [taller4.TestTaller4()]
2023.12.04 14:56:10 INFO  Closing debug server tcp://0.0.0.0:60478
2023.12.04 14:56:27 INFO  compiling app-test (1 scala source)
dic. 04, 2023 2:56:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:56:27 INFO  time: compiled app-test in 0.56s
2023.12.04 14:56:32 INFO  compiling app-test (1 scala source)
2023.12.04 14:56:32 INFO  time: compiled app-test in 0.49s
dic. 04, 2023 2:56:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:56:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:56:58 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:56:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:00 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:57:06 INFO  compiling app-test (1 scala source)
dic. 04, 2023 2:57:07 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:57:06 INFO  time: compiled app-test in 0.93s
dic. 04, 2023 2:57:07 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:09 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:57:19 INFO  compiling app-test (1 scala source)
dic. 04, 2023 2:57:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:57:20 INFO  time: compiled app-test in 1.48s
dic. 04, 2023 2:57:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:26 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:30 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:30 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:57:42 INFO  compiling app-test (1 scala source)
2023.12.04 14:57:42 INFO  time: compiled app-test in 0.67s
dic. 04, 2023 2:57:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:57:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:58:00 INFO  compiling app-test (1 scala source)
dic. 04, 2023 2:58:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:58:00 INFO  time: compiled app-test in 0.66s
dic. 04, 2023 2:58:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:19 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:23 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:58:28 INFO  compiling app-test (1 scala source)
2023.12.04 14:58:28 INFO  time: compiled app-test in 0.43s
dic. 04, 2023 2:58:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:38 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:55 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:58:56 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:59:03 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:59:08 INFO  compiling app-test (1 scala source)
2023.12.04 14:59:08 INFO  time: compiled app-test in 0.43s
dic. 04, 2023 2:59:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:59:14 INFO  compiling app-test (1 scala source)
2023.12.04 14:59:14 INFO  time: compiled app-test in 0.41s
dic. 04, 2023 2:59:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:59:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:59:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:59:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 2:59:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 14:59:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:28: error: unclosed string literal
    test("Prueba de multiplcacion    }
         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 14:59:58 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string literal
        println("Prueba    }
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 14:59:58 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string literal
        println("Prueba de multiplcacion de matrices secuencial    }
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 04, 2023 3:00:05 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:00:21 INFO  compiling app-test (1 scala source)
2023.12.04 15:00:21 INFO  time: compiled app-test in 0.81s
2023.12.04 15:00:27 INFO  compiling app-test (1 scala source)
2023.12.04 15:00:27 INFO  time: compiled app-test in 0.58s
dic. 04, 2023 3:00:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:38 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:38 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:00:46 INFO  compiling app-test (1 scala source)
2023.12.04 15:00:46 INFO  time: compiled app-test in 0.56s
dic. 04, 2023 3:00:47 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:00:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:00:54 INFO  compiling app-test (1 scala source)
2023.12.04 15:00:54 INFO  time: compiled app-test in 0.5s
dic. 04, 2023 3:00:56 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:01:10 INFO  compiling app-test (1 scala source)
2023.12.04 15:01:10 INFO  time: compiled app-test in 0.64s
dic. 04, 2023 3:01:13 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:01:18 INFO  compiling app-test (1 scala source)
2023.12.04 15:01:18 INFO  time: compiled app-test in 0.54s
2023.12.04 15:01:46 INFO  compiling app-test (1 scala source)
2023.12.04 15:01:46 INFO  time: compiled app-test in 0.51s
2023.12.04 15:01:47 INFO  compiling app-test (1 scala source)
2023.12.04 15:01:47 INFO  time: compiled app-test in 0.39s
dic. 04, 2023 3:01:50 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:01:52 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:02:00 WARN  Could not find semantic tokens for: file:///C:/Users/ALEJANDRO/github-classroom/Programacion-funcional-2023-I/taller4-pfc-2023-2/app/src/test/scala/taller4/TestTaller4.scala
dic. 04, 2023 3:02:00 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1798
2023.12.04 15:02:02 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de multiplcacion de matrices    }
         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:02:25 INFO  compiling app-test (1 scala source)
2023.12.04 15:02:25 INFO  time: compiled app-test in 0.64s
dic. 04, 2023 3:02:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:02:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:02:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:02:35 INFO  compiling app-test (1 scala source)
2023.12.04 15:02:35 INFO  time: compiled app-test in 0.43s
dic. 04, 2023 3:02:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:02:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:02:46 INFO  compiling app-test (1 scala source)
2023.12.04 15:02:46 INFO  time: compiled app-test in 0.47s
dic. 04, 2023 3:02:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:02:51 INFO  compiling app-test (1 scala source)
2023.12.04 15:02:51 INFO  time: compiled app-test in 0.41s
dic. 04, 2023 3:02:53 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:02:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:03:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de multiplcacion de matrices        val obj = new implAlgoritmos()
         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 04, 2023 3:03:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:03:08 INFO  compiling app-test (1 scala source)
2023.12.04 15:03:08 INFO  time: compiled app-test in 0.49s
2023.12.04 15:03:16 INFO  compiling app-test (1 scala source)
2023.12.04 15:03:16 INFO  time: compiled app-test in 0.38s
2023.12.04 15:03:25 INFO  compiling app-test (1 scala source)
2023.12.04 15:03:25 INFO  time: compiled app-test in 0.35s
2023.12.04 15:03:34 INFO  compiling app-test (1 scala source)
2023.12.04 15:03:34 INFO  time: compiled app-test in 0.41s
dic. 04, 2023 3:03:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:43 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:51 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:03:57 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:04 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:04 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:04:06 INFO  compiling app-test (1 scala source)
2023.12.04 15:04:06 INFO  time: compiled app-test in 0.45s
dic. 04, 2023 3:04:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:14 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:04:18 INFO  compiling app-test (1 scala source)
2023.12.04 15:04:18 INFO  time: compiled app-test in 0.15s
dic. 04, 2023 3:04:19 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:26 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:04:28 INFO  compiling app-test (1 scala source)
2023.12.04 15:04:28 INFO  time: compiled app-test in 0.14s
dic. 04, 2023 3:04:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:04:36 INFO  compiling app-test (1 scala source)
2023.12.04 15:04:36 INFO  time: compiled app-test in 0.4s
dic. 04, 2023 3:04:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:04:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:05:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:02 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:03 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:03 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2097
2023.12.04 15:06:10 INFO  compiling app-test (1 scala source)
2023.12.04 15:06:10 INFO  time: compiled app-test in 0.45s
dic. 04, 2023 3:06:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:06:15 INFO  compiling app-test (1 scala source)
2023.12.04 15:06:15 INFO  time: compiled app-test in 0.36s
dic. 04, 2023 3:06:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:18 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:19 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:06:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:16 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:20 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2153
dic. 04, 2023 3:07:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:29 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:32 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:07:39 INFO  compiling app-test (1 scala source)
2023.12.04 15:07:39 INFO  time: compiled app-test in 0.41s
dic. 04, 2023 3:07:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:50 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:07:51 INFO  compiling app-test (1 scala source)
2023.12.04 15:07:51 INFO  time: compiled app-test in 0.62s
dic. 04, 2023 3:07:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:55 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:56 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:57 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:07:58 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:08:02 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:08:15 INFO  compiling app-test (1 scala source)
2023.12.04 15:08:15 INFO  time: compiled app-test in 0.39s
2023.12.04 15:08:21 INFO  compiling app-test (1 scala source)
2023.12.04 15:08:21 INFO  time: compiled app-test in 0.37s
2023.12.04 15:08:33 INFO  compiling app-test (1 scala source)
2023.12.04 15:08:33 INFO  time: compiled app-test in 0.37s
dic. 04, 2023 3:08:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:08:47 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2374
2023.12.04 15:08:47 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:21: error: unclosed string literal
        println("Comparación de        
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 04, 2023 3:08:50 P. M. org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2387
dic. 04, 2023 3:09:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:08 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:09:14 INFO  compiling app-test (1 scala source)
2023.12.04 15:09:14 INFO  time: compiled app-test in 0.45s
dic. 04, 2023 3:09:18 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:20 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:09:49 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:53 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:53 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:55 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:55 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:10:57 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:10:58 INFO  compiling app-test (1 scala source)
2023.12.04 15:10:58 INFO  time: compiled app-test in 0.44s
dic. 04, 2023 3:10:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:02 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:38 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:11:40 INFO  compiling app-test (1 scala source)
2023.12.04 15:11:40 INFO  time: compiled app-test in 0.12s
dic. 04, 2023 3:11:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:11:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:11:48 INFO  compiling app-test (1 scala source)
2023.12.04 15:11:48 INFO  time: compiled app-test in 0.34s
2023.12.04 15:11:52 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 15:11:52 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 15:11:52 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 15:11:53 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60802 .
2023.12.04 15:11:53 INFO  Attaching to debuggee VM succeeded.
2023.12.04 15:11:58 INFO  Closing debug server tcp://0.0.0.0:60798
2023.12.04 15:11:58 INFO  Canceling debug proxy for [taller4.TestTaller4()]
dic. 04, 2023 3:12:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:09 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:10 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:11 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:12 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:13 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:13 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:15 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:12:33 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial") {") { 
                                                                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:12:33 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial") ") { 
                                                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:12:34 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial"") { 
                                                             ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:12:40 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial vs paralelo") ") { 
                                                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:12:40 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial vs paralelo"") { 
                                                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2023.12.04 15:12:41 INFO  compiling app-test (1 scala source)
2023.12.04 15:12:41 INFO  time: compiled app-test in 0.34s
2023.12.04 15:12:41 ERROR Failed to tokenize input for semantic tokens for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed string literal
    test("Prueba de la multiplicación de matrices secuencial vs paralelo"") { 
                                                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:553)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:372)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:376)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:211)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:1011)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:24)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:962)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:332)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:541)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

dic. 04, 2023 3:12:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:12:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:12:43 INFO  compiling app-test (1 scala source)
2023.12.04 15:12:43 INFO  time: compiled app-test in 0.3s
dic. 04, 2023 3:12:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:12:45 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 15:12:45 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 15:12:45 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 15:12:45 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60836 .
2023.12.04 15:12:45 INFO  Attaching to debuggee VM succeeded.
dic. 04, 2023 3:12:45 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:12:49 INFO  Closing debug server tcp://0.0.0.0:60832
2023.12.04 15:12:49 INFO  Canceling debug proxy for [taller4.TestTaller4()]
dic. 04, 2023 3:12:54 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:04 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:05 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:13:08 INFO  compiling app-test (1 scala source)
2023.12.04 15:13:08 INFO  time: compiled app-test in 0.3s
2023.12.04 15:13:11 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 15:13:11 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 15:13:12 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 15:13:12 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60857 .
2023.12.04 15:13:12 INFO  Attaching to debuggee VM succeeded.
dic. 04, 2023 3:13:17 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:13:18 INFO  Closing debug server tcp://0.0.0.0:60852
2023.12.04 15:13:18 INFO  Canceling debug proxy for [taller4.TestTaller4()]
dic. 04, 2023 3:13:35 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:13:43 INFO  compiling app-test (1 scala source)
2023.12.04 15:13:43 INFO  time: compiled app-test in 0.41s
2023.12.04 15:13:44 INFO  compiling app-test (1 scala source)
2023.12.04 15:13:44 INFO  time: compiled app-test in 0.59s
dic. 04, 2023 3:13:46 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:47 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:48 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:50 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:13:56 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:14:00 INFO  compiling app-test (1 scala source)
2023.12.04 15:14:00 INFO  time: compiled app-test in 0.41s
2023.12.04 15:14:03 INFO  compiling app-test (1 scala source)
2023.12.04 15:14:03 INFO  time: compiled app-test in 0.37s
dic. 04, 2023 3:14:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:14:08 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-server.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2023.12.04 15:14:08 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\.metals\dap-client.trace.json or C:\Users\ALEJANDRO\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2023.12.04 15:14:09 INFO  Starting debug proxy for [taller4.TestTaller4()]
2023.12.04 15:14:09 INFO  Trying to attach to remote debuggee VM 127.0.0.1:60920 .
2023.12.04 15:14:09 INFO  Attaching to debuggee VM succeeded.
2023.12.04 15:14:16 INFO  Closing debug server tcp://0.0.0.0:60915
2023.12.04 15:14:16 INFO  Canceling debug proxy for [taller4.TestTaller4()]
dic. 04, 2023 3:14:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:31 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:33 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:34 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:36 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:37 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:14:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:06 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:39 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:40 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:41 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:42 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:44 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:15:49 INFO  compiling app-test (1 scala source)
2023.12.04 15:15:49 INFO  time: compiled app-test in 0.34s
dic. 04, 2023 3:15:58 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:15:59 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:16:01 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:16:03 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:16:04 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

Exception in thread "pool-9-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.onCompilerJobQueue$$anonfun$1(CompilerAccess.scala:195)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.04 15:16:05 INFO  compiling app-test (1 scala source)
Exception in thread "pool-9-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.onCompilerJobQueue$$anonfun$1(CompilerAccess.scala:195)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023.12.04 15:16:05 INFO  time: compiled app-test in 0.7s
dic. 04, 2023 3:16:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:17:21 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:17:23 INFO  compiling app-test (1 scala source)
2023.12.04 15:17:23 INFO  time: compiled app-test in 0.82s
2023.12.04 15:17:24 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
dic. 04, 2023 3:17:25 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:17:27 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

dic. 04, 2023 3:17:28 P. M. scala.meta.internal.pc.CompilerAccess handleError
SEVERE: Could not initialize class scala.meta.internal.metals.StdReportContext
java.lang.NoClassDefFoundError: Could not initialize class scala.meta.internal.metals.StdReportContext
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoSuchMethodError: 'long scala.runtime.LazyVals$.getOffsetStatic(java.lang.reflect.Field)' [in thread "pool-4-thread-1"]
	at scala.meta.internal.metals.StdReportContext.<clinit>(ReportContext.scala:32)

2023.12.04 15:17:31 WARN  Could not load snapshot text for C:\Users\ALEJANDRO\github-classroom\Programacion-funcional-2023-I\taller4-pfc-2023-2\app\src\test\scala\taller4\TestTaller4.scala
2023.12.04 15:17:34 INFO  Shutting down server
2023.12.04 15:17:34 INFO  shutting down Metals
2023.12.04 15:17:35 INFO  Shut down connection with build server.
2023.12.04 15:17:34 INFO  Exiting server
